//line sql-gen.y:24
package parser

import __yyfmt__ "fmt"

//line sql-gen.y:24

import (
	"fmt"
	"strings"

	"go/constant"

	"github.com/cockroachdb/cockroach/pkg/sql/coltypes"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
)

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*Scanner).Unimplemented(feature)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*Scanner).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*Scanner).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:60

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableWithIdx() *tree.TableNameWithIndex {
	tn := u.val.(tree.TableNameWithIndex)
	return &tn
}
func (u *sqlSymUnion) tableWithIdx() tree.TableNameWithIndex {
	return u.val.(tree.TableNameWithIndex)
}
func (u *sqlSymUnion) newTableWithIdxList() tree.TableNameWithIndexList {
	return u.val.(tree.TableNameWithIndexList)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) normalizableTableNames() tree.NormalizableTableNames {
	return u.val.(tree.NormalizableTableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) stmts() []tree.Statement {
	return u.val.([]tree.Statement)
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colType() coltypes.T {
	if colType, ok := u.val.(coltypes.T); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) castTargetType() coltypes.CastTargetType {
	return u.val.(coltypes.CastTargetType)
}
func (u *sqlSymUnion) colTypes() []coltypes.T {
	return u.val.([]coltypes.T)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() *tree.From {
	return u.val.(*tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) durationField() tree.DurationField {
	return u.val.(tree.DurationField)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}

func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) normalizableTableNameFromUnresolvedName() tree.NormalizableTableName {
	return tree.NormalizableTableName{TableNameReference: u.unresolvedName()}
}
func (u *sqlSymUnion) newNormalizableTableNameFromUnresolvedName() *tree.NormalizableTableName {
	return &tree.NormalizableTableName{TableNameReference: u.unresolvedName()}
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}

//line sql-gen.y:573
type sqlSymType struct {
	yys   int
	id    int
	pos   int
	str   string
	union sqlSymUnion
}

const IDENT = 57346
const SCONST = 57347
const BCONST = 57348
const ICONST = 57349
const FCONST = 57350
const PLACEHOLDER = 57351
const TYPECAST = 57352
const TYPEANNOTATE = 57353
const DOT_DOT = 57354
const LESS_EQUALS = 57355
const GREATER_EQUALS = 57356
const NOT_EQUALS = 57357
const NOT_REGMATCH = 57358
const REGIMATCH = 57359
const NOT_REGIMATCH = 57360
const ERROR = 57361
const ABORT = 57362
const ACTION = 57363
const ADD = 57364
const ADMIN = 57365
const AGGREGATE = 57366
const ALL = 57367
const ALTER = 57368
const ANALYSE = 57369
const ANALYZE = 57370
const AND = 57371
const ANY = 57372
const ANNOTATE_TYPE = 57373
const ARRAY = 57374
const AS = 57375
const ASC = 57376
const ASYMMETRIC = 57377
const AT = 57378
const BACKUP = 57379
const BEGIN = 57380
const BETWEEN = 57381
const BIGINT = 57382
const BIGSERIAL = 57383
const BIT = 57384
const BLOB = 57385
const BOOL = 57386
const BOOLEAN = 57387
const BOTH = 57388
const BY = 57389
const BYTEA = 57390
const BYTES = 57391
const CACHE = 57392
const CANCEL = 57393
const CASCADE = 57394
const CASE = 57395
const CAST = 57396
const CHANGEFEED = 57397
const CHAR = 57398
const CHARACTER = 57399
const CHARACTERISTICS = 57400
const CHECK = 57401
const CLUSTER = 57402
const COALESCE = 57403
const COLLATE = 57404
const COLLATION = 57405
const COLUMN = 57406
const COLUMNS = 57407
const COMMENT = 57408
const COMMIT = 57409
const COMMITTED = 57410
const COMPACT = 57411
const CONCAT = 57412
const CONFIGURATION = 57413
const CONFIGURATIONS = 57414
const CONFIGURE = 57415
const CONFLICT = 57416
const CONSTRAINT = 57417
const CONSTRAINTS = 57418
const CONTAINS = 57419
const CONVERSION = 57420
const COPY = 57421
const COVERING = 57422
const CREATE = 57423
const CROSS = 57424
const CUBE = 57425
const CURRENT = 57426
const CURRENT_CATALOG = 57427
const CURRENT_DATE = 57428
const CURRENT_SCHEMA = 57429
const CURRENT_ROLE = 57430
const CURRENT_TIME = 57431
const CURRENT_TIMESTAMP = 57432
const CURRENT_USER = 57433
const CYCLE = 57434
const DATA = 57435
const DATABASE = 57436
const DATABASES = 57437
const DATE = 57438
const DAY = 57439
const DEC = 57440
const DECIMAL = 57441
const DEFAULT = 57442
const DEALLOCATE = 57443
const DEFERRABLE = 57444
const DELETE = 57445
const DESC = 57446
const DISCARD = 57447
const DISTINCT = 57448
const DO = 57449
const DOMAIN = 57450
const DOUBLE = 57451
const DROP = 57452
const ELSE = 57453
const ENCODING = 57454
const END = 57455
const ENUM = 57456
const ESCAPE = 57457
const EXCEPT = 57458
const EXISTS = 57459
const EXECUTE = 57460
const EXPERIMENTAL = 57461
const EXPERIMENTAL_FINGERPRINTS = 57462
const EXPERIMENTAL_REPLICA = 57463
const EXPERIMENTAL_AUDIT = 57464
const EXPLAIN = 57465
const EXPORT = 57466
const EXTENSION = 57467
const EXTRACT = 57468
const EXTRACT_DURATION = 57469
const FALSE = 57470
const FAMILY = 57471
const FETCH = 57472
const FETCHVAL = 57473
const FETCHTEXT = 57474
const FETCHVAL_PATH = 57475
const FETCHTEXT_PATH = 57476
const FILES = 57477
const FILTER = 57478
const FIRST = 57479
const FLOAT = 57480
const FLOAT4 = 57481
const FLOAT8 = 57482
const FLOORDIV = 57483
const FOLLOWING = 57484
const FOR = 57485
const FORCE_INDEX = 57486
const FOREIGN = 57487
const FROM = 57488
const FULL = 57489
const FUNCTION = 57490
const GLOBAL = 57491
const GRANT = 57492
const GRANTS = 57493
const GREATEST = 57494
const GROUP = 57495
const GROUPING = 57496
const GROUPS = 57497
const HAVING = 57498
const HIGH = 57499
const HISTOGRAM = 57500
const HOUR = 57501
const IMPORT = 57502
const INCREMENT = 57503
const INCREMENTAL = 57504
const IF = 57505
const IFERROR = 57506
const IFNULL = 57507
const ILIKE = 57508
const IN = 57509
const ISERROR = 57510
const INET = 57511
const INET_CONTAINED_BY_OR_EQUALS = 57512
const INET_CONTAINS_OR_CONTAINED_BY = 57513
const INET_CONTAINS_OR_EQUALS = 57514
const INDEX = 57515
const INDEXES = 57516
const INJECT = 57517
const INTERLEAVE = 57518
const INITIALLY = 57519
const INNER = 57520
const INSERT = 57521
const INT = 57522
const INT2VECTOR = 57523
const INT2 = 57524
const INT4 = 57525
const INT8 = 57526
const INT64 = 57527
const INTEGER = 57528
const INTERSECT = 57529
const INTERVAL = 57530
const INTO = 57531
const INVERTED = 57532
const IS = 57533
const ISNULL = 57534
const ISOLATION = 57535
const JOB = 57536
const JOBS = 57537
const JOIN = 57538
const JSON = 57539
const JSONB = 57540
const JSON_SOME_EXISTS = 57541
const JSON_ALL_EXISTS = 57542
const KEY = 57543
const KEYS = 57544
const KV = 57545
const LANGUAGE = 57546
const LATERAL = 57547
const LC_CTYPE = 57548
const LC_COLLATE = 57549
const LEADING = 57550
const LEASE = 57551
const LEAST = 57552
const LEFT = 57553
const LESS = 57554
const LEVEL = 57555
const LIKE = 57556
const LIMIT = 57557
const LIST = 57558
const LOCAL = 57559
const LOCALTIME = 57560
const LOCALTIMESTAMP = 57561
const LOW = 57562
const LSHIFT = 57563
const MATCH = 57564
const MATERIALIZED = 57565
const MINVALUE = 57566
const MAXVALUE = 57567
const MINUTE = 57568
const MONTH = 57569
const NAN = 57570
const NAME = 57571
const NAMES = 57572
const NATURAL = 57573
const NEXT = 57574
const NO = 57575
const NO_INDEX_JOIN = 57576
const NORMAL = 57577
const NOT = 57578
const NOTHING = 57579
const NOTNULL = 57580
const NULL = 57581
const NULLIF = 57582
const NUMERIC = 57583
const OF = 57584
const OFF = 57585
const OFFSET = 57586
const OID = 57587
const OIDVECTOR = 57588
const ON = 57589
const ONLY = 57590
const OPTION = 57591
const OPTIONS = 57592
const OR = 57593
const ORDER = 57594
const ORDINALITY = 57595
const OUT = 57596
const OUTER = 57597
const OVER = 57598
const OVERLAPS = 57599
const OVERLAY = 57600
const OWNED = 57601
const OPERATOR = 57602
const PARENT = 57603
const PARTIAL = 57604
const PARTITION = 57605
const PASSWORD = 57606
const PAUSE = 57607
const PHYSICAL = 57608
const PLACING = 57609
const PLANS = 57610
const POSITION = 57611
const PRECEDING = 57612
const PRECISION = 57613
const PREPARE = 57614
const PRIMARY = 57615
const PRIORITY = 57616
const PROCEDURAL = 57617
const PUBLICATION = 57618
const QUERIES = 57619
const QUERY = 57620
const RANGE = 57621
const RANGES = 57622
const READ = 57623
const REAL = 57624
const RECURSIVE = 57625
const REF = 57626
const REFERENCES = 57627
const REGCLASS = 57628
const REGPROC = 57629
const REGPROCEDURE = 57630
const REGNAMESPACE = 57631
const REGTYPE = 57632
const REMOVE_PATH = 57633
const RENAME = 57634
const REPEATABLE = 57635
const REPLACE = 57636
const RELEASE = 57637
const RESET = 57638
const RESTORE = 57639
const RESTRICT = 57640
const RESUME = 57641
const RETURNING = 57642
const REVOKE = 57643
const RIGHT = 57644
const ROLE = 57645
const ROLES = 57646
const ROLLBACK = 57647
const ROLLUP = 57648
const ROW = 57649
const ROWS = 57650
const RSHIFT = 57651
const RULE = 57652
const SAVEPOINT = 57653
const SCATTER = 57654
const SCHEMA = 57655
const SCHEMAS = 57656
const SCRUB = 57657
const SEARCH = 57658
const SECOND = 57659
const SELECT = 57660
const SEQUENCE = 57661
const SEQUENCES = 57662
const SERIAL = 57663
const SERIAL2 = 57664
const SERIAL4 = 57665
const SERIAL8 = 57666
const SERIALIZABLE = 57667
const SERVER = 57668
const SESSION = 57669
const SESSIONS = 57670
const SESSION_USER = 57671
const SET = 57672
const SETTING = 57673
const SETTINGS = 57674
const SHOW = 57675
const SIMILAR = 57676
const SIMPLE = 57677
const SMALLINT = 57678
const SMALLSERIAL = 57679
const SNAPSHOT = 57680
const SOME = 57681
const SPLIT = 57682
const SQL = 57683
const START = 57684
const STATISTICS = 57685
const STATUS = 57686
const STDIN = 57687
const STRICT = 57688
const STRING = 57689
const STORE = 57690
const STORED = 57691
const STORING = 57692
const SUBSTRING = 57693
const SYMMETRIC = 57694
const SYNTAX = 57695
const SYSTEM = 57696
const SUBSCRIPTION = 57697
const TABLE = 57698
const TABLES = 57699
const TEMP = 57700
const TEMPLATE = 57701
const TEMPORARY = 57702
const TESTING_RANGES = 57703
const EXPERIMENTAL_RANGES = 57704
const TESTING_RELOCATE = 57705
const EXPERIMENTAL_RELOCATE = 57706
const TEXT = 57707
const THEN = 57708
const TIME = 57709
const TIMETZ = 57710
const TIMESTAMP = 57711
const TIMESTAMPTZ = 57712
const TO = 57713
const TRAILING = 57714
const TRACE = 57715
const TRANSACTION = 57716
const TREAT = 57717
const TRIGGER = 57718
const TRIM = 57719
const TRUE = 57720
const TRUNCATE = 57721
const TRUSTED = 57722
const TYPE = 57723
const TRACING = 57724
const UNBOUNDED = 57725
const UNCOMMITTED = 57726
const UNION = 57727
const UNIQUE = 57728
const UNKNOWN = 57729
const UNLOGGED = 57730
const UPDATE = 57731
const UPSERT = 57732
const USE = 57733
const USER = 57734
const USERS = 57735
const USING = 57736
const UUID = 57737
const VALID = 57738
const VALIDATE = 57739
const VALUE = 57740
const VALUES = 57741
const VARCHAR = 57742
const VARIADIC = 57743
const VIEW = 57744
const VARYING = 57745
const VIRTUAL = 57746
const WHEN = 57747
const WHERE = 57748
const WINDOW = 57749
const WITH = 57750
const WITHIN = 57751
const WITHOUT = 57752
const WORK = 57753
const WRITE = 57754
const YEAR = 57755
const ZONE = 57756
const NOT_LA = 57757
const WITH_LA = 57758
const AS_LA = 57759
const CONTAINED_BY = 57760
const POSTFIXOP = 57761
const UMINUS = 57762
const HELPTOKEN = 57763

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"BACKUP",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BY",
	"BYTEA",
	"BYTES",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"CONCAT",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEALLOCATE",
	"DEFERRABLE",
	"DELETE",
	"DESC",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IMPORT",
	"INCREMENT",
	"INCREMENTAL",
	"IF",
	"IFERROR",
	"IFNULL",
	"ILIKE",
	"IN",
	"ISERROR",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_CONTAINED_BY",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INT2VECTOR",
	"INT2",
	"INT4",
	"INT8",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NO_INDEX_JOIN",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NULL",
	"NULLIF",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLANS",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIAL",
	"SERIAL2",
	"SERIAL4",
	"SERIAL8",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RANGES",
	"EXPERIMENTAL_RANGES",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UPDATE",
	"UPSERT",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"'<'",
	"'>'",
	"'='",
	"CONTAINED_BY",
	"'?'",
	"'~'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"';'",
	"','",
	"'@'",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:8724

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 28,
	441, 28,
	-2, 939,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 70,
	173, 776,
	190, 776,
	204, 227,
	275, 227,
	283, 639,
	310, 227,
	319, 639,
	356, 639,
	380, 227,
	402, 639,
	-2, 0,
	-1, 76,
	204, 231,
	-2, 0,
	-1, 77,
	103, 939,
	179, 939,
	389, 939,
	390, 939,
	-2, 0,
	-1, 88,
	116, 913,
	130, 913,
	187, 913,
	215, 913,
	244, 913,
	252, 913,
	385, 913,
	-2, 900,
	-1, 116,
	121, 571,
	203, 571,
	373, 571,
	-2, 0,
	-1, 117,
	4, 941,
	20, 941,
	21, 941,
	22, 941,
	23, 941,
	24, 941,
	26, 941,
	31, 941,
	36, 941,
	37, 941,
	38, 941,
	39, 941,
	40, 941,
	41, 941,
	42, 941,
	43, 941,
	44, 941,
	45, 941,
	47, 941,
	48, 941,
	49, 941,
	50, 941,
	51, 941,
	52, 941,
	55, 941,
	56, 941,
	57, 941,
	58, 941,
	60, 941,
	61, 941,
	65, 941,
	66, 941,
	67, 941,
	68, 941,
	69, 941,
	71, 941,
	72, 941,
	73, 941,
	74, 941,
	76, 941,
	78, 941,
	79, 941,
	80, 941,
	83, 941,
	84, 941,
	92, 941,
	93, 941,
	94, 941,
	95, 941,
	96, 941,
	97, 941,
	98, 941,
	99, 941,
	101, 941,
	103, 941,
	105, 941,
	108, 941,
	109, 941,
	110, 941,
	112, 941,
	114, 941,
	115, 941,
	117, 941,
	118, 941,
	119, 941,
	120, 941,
	121, 941,
	122, 941,
	123, 941,
	124, 941,
	125, 941,
	126, 941,
	127, 941,
	135, 941,
	136, 941,
	137, 941,
	138, 941,
	139, 941,
	140, 941,
	142, 941,
	144, 941,
	148, 941,
	149, 941,
	151, 941,
	152, 941,
	154, 941,
	155, 941,
	157, 941,
	158, 941,
	159, 941,
	160, 941,
	161, 941,
	162, 941,
	163, 941,
	164, 941,
	165, 941,
	168, 941,
	169, 941,
	174, 941,
	175, 941,
	176, 941,
	179, 941,
	180, 941,
	181, 941,
	182, 941,
	183, 941,
	184, 941,
	185, 941,
	186, 941,
	188, 941,
	190, 941,
	193, 941,
	194, 941,
	195, 941,
	197, 941,
	198, 941,
	201, 941,
	202, 941,
	203, 941,
	204, 941,
	206, 941,
	207, 941,
	209, 941,
	210, 941,
	212, 941,
	213, 941,
	216, 941,
	217, 941,
	220, 941,
	222, 941,
	223, 941,
	226, 941,
	227, 941,
	228, 941,
	229, 941,
	230, 941,
	232, 941,
	233, 941,
	234, 941,
	235, 941,
	240, 941,
	241, 941,
	242, 941,
	243, 941,
	245, 941,
	246, 941,
	248, 941,
	249, 941,
	250, 941,
	253, 941,
	254, 941,
	256, 941,
	258, 941,
	259, 941,
	260, 941,
	261, 941,
	262, 941,
	263, 941,
	264, 941,
	265, 941,
	266, 941,
	268, 941,
	269, 941,
	270, 941,
	271, 941,
	272, 941,
	274, 941,
	276, 941,
	277, 941,
	278, 941,
	279, 941,
	280, 941,
	281, 941,
	282, 941,
	283, 941,
	284, 941,
	286, 941,
	287, 941,
	288, 941,
	289, 941,
	290, 941,
	292, 941,
	293, 941,
	294, 941,
	295, 941,
	296, 941,
	297, 941,
	298, 941,
	299, 941,
	301, 941,
	303, 941,
	304, 941,
	305, 941,
	306, 941,
	307, 941,
	308, 941,
	310, 941,
	311, 941,
	312, 941,
	313, 941,
	314, 941,
	315, 941,
	316, 941,
	317, 941,
	319, 941,
	320, 941,
	321, 941,
	322, 941,
	323, 941,
	324, 941,
	325, 941,
	326, 941,
	327, 941,
	328, 941,
	330, 941,
	331, 941,
	332, 941,
	333, 941,
	335, 941,
	336, 941,
	337, 941,
	338, 941,
	340, 941,
	341, 941,
	342, 941,
	343, 941,
	344, 941,
	345, 941,
	346, 941,
	347, 941,
	348, 941,
	349, 941,
	350, 941,
	351, 941,
	353, 941,
	354, 941,
	355, 941,
	357, 941,
	358, 941,
	359, 941,
	360, 941,
	361, 941,
	362, 941,
	363, 941,
	364, 941,
	365, 941,
	367, 941,
	368, 941,
	369, 941,
	370, 941,
	373, 941,
	374, 941,
	375, 941,
	376, 941,
	377, 941,
	379, 941,
	380, 941,
	381, 941,
	383, 941,
	384, 941,
	387, 941,
	388, 941,
	389, 941,
	390, 941,
	391, 941,
	393, 941,
	395, 941,
	396, 941,
	397, 941,
	398, 941,
	399, 941,
	400, 941,
	402, 941,
	403, 941,
	404, 941,
	409, 941,
	410, 941,
	411, 941,
	412, 941,
	413, 941,
	414, 941,
	-2, 0,
	-1, 118,
	1, 833,
	193, 833,
	274, 833,
	281, 833,
	440, 833,
	441, 833,
	-2, 0,
	-1, 120,
	1, 833,
	440, 833,
	441, 833,
	-2, 0,
	-1, 121,
	1, 833,
	440, 833,
	441, 833,
	-2, 0,
	-1, 122,
	1, 837,
	440, 837,
	441, 837,
	-2, 0,
	-1, 146,
	116, 912,
	130, 912,
	187, 912,
	215, 912,
	244, 912,
	252, 912,
	385, 912,
	-2, 909,
	-1, 176,
	4, 948,
	5, 948,
	6, 948,
	7, 948,
	8, 948,
	9, 948,
	20, 948,
	21, 948,
	22, 948,
	23, 948,
	24, 948,
	26, 948,
	31, 948,
	32, 948,
	36, 948,
	37, 948,
	38, 948,
	39, 948,
	40, 948,
	41, 948,
	42, 948,
	43, 948,
	44, 948,
	45, 948,
	47, 948,
	48, 948,
	49, 948,
	50, 948,
	51, 948,
	52, 948,
	53, 948,
	54, 948,
	55, 948,
	56, 948,
	57, 948,
	58, 948,
	60, 948,
	61, 948,
	63, 948,
	65, 948,
	66, 948,
	67, 948,
	68, 948,
	69, 948,
	71, 948,
	72, 948,
	73, 948,
	74, 948,
	76, 948,
	78, 948,
	79, 948,
	80, 948,
	82, 948,
	83, 948,
	84, 948,
	85, 948,
	86, 948,
	87, 948,
	88, 948,
	89, 948,
	90, 948,
	91, 948,
	92, 948,
	93, 948,
	94, 948,
	95, 948,
	96, 948,
	97, 948,
	98, 948,
	99, 948,
	100, 948,
	101, 948,
	103, 948,
	105, 948,
	108, 948,
	109, 948,
	110, 948,
	112, 948,
	114, 948,
	115, 948,
	117, 948,
	118, 948,
	119, 948,
	120, 948,
	121, 948,
	122, 948,
	123, 948,
	124, 948,
	125, 948,
	126, 948,
	127, 948,
	128, 948,
	129, 948,
	135, 948,
	136, 948,
	137, 948,
	138, 948,
	139, 948,
	140, 948,
	142, 948,
	144, 948,
	147, 948,
	148, 948,
	149, 948,
	151, 948,
	152, 948,
	154, 948,
	155, 948,
	157, 948,
	158, 948,
	159, 948,
	160, 948,
	161, 948,
	162, 948,
	163, 948,
	164, 948,
	165, 948,
	166, 948,
	168, 948,
	169, 948,
	174, 948,
	175, 948,
	176, 948,
	178, 948,
	179, 948,
	180, 948,
	181, 948,
	182, 948,
	183, 948,
	184, 948,
	185, 948,
	186, 948,
	188, 948,
	190, 948,
	191, 948,
	192, 948,
	193, 948,
	194, 948,
	195, 948,
	196, 948,
	197, 948,
	198, 948,
	201, 948,
	202, 948,
	203, 948,
	204, 948,
	206, 948,
	207, 948,
	209, 948,
	210, 948,
	211, 948,
	212, 948,
	213, 948,
	214, 948,
	216, 948,
	217, 948,
	220, 948,
	222, 948,
	223, 948,
	224, 948,
	225, 948,
	226, 948,
	227, 948,
	228, 948,
	229, 948,
	230, 948,
	231, 948,
	232, 948,
	233, 948,
	234, 948,
	235, 948,
	236, 948,
	238, 948,
	239, 948,
	240, 948,
	241, 948,
	242, 948,
	243, 948,
	245, 948,
	246, 948,
	249, 948,
	250, 948,
	253, 948,
	254, 948,
	255, 948,
	256, 948,
	257, 948,
	258, 948,
	259, 948,
	260, 948,
	261, 948,
	262, 948,
	263, 948,
	264, 948,
	265, 948,
	266, 948,
	268, 948,
	269, 948,
	270, 948,
	271, 948,
	272, 948,
	274, 948,
	276, 948,
	277, 948,
	278, 948,
	279, 948,
	280, 948,
	281, 948,
	282, 948,
	283, 948,
	284, 948,
	286, 948,
	287, 948,
	288, 948,
	289, 948,
	290, 948,
	292, 948,
	293, 948,
	294, 948,
	295, 948,
	296, 948,
	297, 948,
	298, 948,
	299, 948,
	301, 948,
	302, 948,
	303, 948,
	304, 948,
	305, 948,
	306, 948,
	307, 948,
	308, 948,
	310, 948,
	311, 948,
	312, 948,
	313, 948,
	314, 948,
	315, 948,
	316, 948,
	317, 948,
	319, 948,
	320, 948,
	321, 948,
	322, 948,
	323, 948,
	324, 948,
	325, 948,
	326, 948,
	327, 948,
	328, 948,
	329, 948,
	330, 948,
	331, 948,
	332, 948,
	333, 948,
	334, 948,
	335, 948,
	336, 948,
	337, 948,
	338, 948,
	340, 948,
	341, 948,
	342, 948,
	343, 948,
	344, 948,
	345, 948,
	346, 948,
	347, 948,
	348, 948,
	349, 948,
	350, 948,
	351, 948,
	353, 948,
	354, 948,
	355, 948,
	357, 948,
	358, 948,
	359, 948,
	360, 948,
	361, 948,
	362, 948,
	363, 948,
	364, 948,
	365, 948,
	367, 948,
	368, 948,
	369, 948,
	370, 948,
	373, 948,
	374, 948,
	375, 948,
	376, 948,
	377, 948,
	378, 948,
	379, 948,
	380, 948,
	381, 948,
	383, 948,
	384, 948,
	386, 948,
	387, 948,
	388, 948,
	389, 948,
	390, 948,
	391, 948,
	392, 948,
	393, 948,
	395, 948,
	396, 948,
	397, 948,
	398, 948,
	399, 948,
	400, 948,
	402, 948,
	403, 948,
	404, 948,
	409, 948,
	410, 948,
	411, 948,
	412, 948,
	413, 948,
	414, 948,
	415, 948,
	423, 948,
	428, 948,
	429, 948,
	430, 948,
	437, 948,
	443, 948,
	-2, 0,
	-1, 179,
	1, 28,
	441, 28,
	-2, 939,
	-1, 524,
	146, 1595,
	371, 1595,
	420, 1595,
	439, 1595,
	-2, 0,
	-1, 525,
	146, 1669,
	371, 1669,
	420, 1669,
	439, 1669,
	-2, 0,
	-1, 526,
	146, 1585,
	371, 1585,
	420, 1585,
	439, 1585,
	-2, 0,
	-1, 528,
	146, 1748,
	371, 1748,
	420, 1748,
	439, 1748,
	-2, 0,
	-1, 530,
	146, 1777,
	371, 1777,
	420, 1777,
	439, 1777,
	-2, 0,
	-1, 537,
	146, 1675,
	371, 1675,
	420, 1675,
	439, 1675,
	-2, 448,
	-1, 554,
	439, 1545,
	442, 1545,
	-2, 614,
	-1, 555,
	439, 1547,
	442, 1547,
	-2, 615,
	-1, 556,
	439, 1546,
	442, 1546,
	-2, 616,
	-1, 557,
	442, 1497,
	-2, 617,
	-1, 699,
	1, 544,
	436, 544,
	438, 544,
	440, 544,
	441, 544,
	-2, 0,
	-1, 700,
	1, 613,
	143, 613,
	436, 613,
	438, 613,
	440, 613,
	441, 613,
	-2, 0,
	-1, 706,
	1, 558,
	436, 558,
	438, 558,
	440, 558,
	441, 558,
	-2, 0,
	-1, 708,
	1, 562,
	436, 562,
	438, 562,
	440, 562,
	441, 562,
	-2, 0,
	-1, 710,
	1, 572,
	436, 572,
	438, 572,
	440, 572,
	441, 572,
	-2, 0,
	-1, 711,
	1, 578,
	436, 578,
	438, 578,
	440, 578,
	441, 578,
	-2, 0,
	-1, 712,
	1, 581,
	436, 581,
	438, 581,
	440, 581,
	441, 581,
	-2, 0,
	-1, 716,
	1, 595,
	436, 595,
	438, 595,
	440, 595,
	441, 595,
	-2, 0,
	-1, 717,
	1, 597,
	436, 597,
	438, 597,
	440, 597,
	441, 597,
	-2, 0,
	-1, 760,
	130, 952,
	215, 952,
	244, 952,
	-2, 909,
	-1, 775,
	130, 951,
	215, 951,
	244, 951,
	-2, 909,
	-1, 797,
	437, 1856,
	-2, 1245,
	-1, 798,
	437, 1857,
	-2, 1246,
	-1, 827,
	437, 1539,
	-2, 1530,
	-1, 833,
	5, 1076,
	-2, 1576,
	-1, 834,
	5, 1077,
	-2, 1580,
	-1, 835,
	5, 1078,
	-2, 1579,
	-1, 836,
	5, 1079,
	-2, 1774,
	-1, 837,
	5, 1080,
	-2, 1677,
	-1, 838,
	5, 1081,
	-2, 1740,
	-1, 839,
	5, 1082,
	-2, 1742,
	-1, 840,
	5, 1083,
	-2, 1753,
	-1, 841,
	5, 1084,
	-2, 1743,
	-1, 842,
	5, 1085,
	-2, 1744,
	-1, 843,
	5, 1086,
	-2, 1575,
	-1, 844,
	5, 1087,
	-2, 1788,
	-1, 845,
	5, 1088,
	-2, 1644,
	-1, 846,
	5, 1089,
	-2, 1684,
	-1, 847,
	5, 1090,
	-2, 1685,
	-1, 848,
	5, 1091,
	-2, 1648,
	-1, 849,
	5, 1092,
	437, 1554,
	-2, 1545,
	-1, 850,
	5, 1142,
	437, 1142,
	-2, 1823,
	-1, 855,
	437, 1555,
	-2, 1546,
	-1, 857,
	5, 1096,
	-2, 1821,
	-1, 858,
	5, 1097,
	-2, 1822,
	-1, 859,
	5, 1098,
	-2, 1647,
	-1, 860,
	5, 1099,
	-2, 1834,
	-1, 861,
	5, 1100,
	-2, 1649,
	-1, 862,
	5, 1101,
	-2, 1650,
	-1, 863,
	5, 1102,
	-2, 1651,
	-1, 864,
	5, 1103,
	-2, 1803,
	-1, 865,
	5, 1104,
	-2, 1832,
	-1, 866,
	5, 1105,
	-2, 1629,
	-1, 867,
	5, 1106,
	-2, 1630,
	-1, 868,
	5, 1120,
	-2, 1815,
	-1, 870,
	5, 1095,
	-2, 1811,
	-1, 871,
	5, 1095,
	-2, 1810,
	-1, 872,
	5, 1095,
	-2, 1827,
	-1, 873,
	5, 1112,
	-2, 1805,
	-1, 874,
	5, 1113,
	-2, 1577,
	-1, 875,
	5, 1132,
	-2, 1804,
	-1, 877,
	5, 1133,
	-2, 1605,
	-1, 878,
	5, 1134,
	-2, 1836,
	-1, 879,
	5, 1136,
	-2, 1837,
	-1, 880,
	5, 1138,
	-2, 1838,
	-1, 881,
	5, 1140,
	-2, 1775,
	-1, 882,
	5, 1063,
	-2, 1657,
	-1, 883,
	5, 1064,
	-2, 1658,
	-1, 903,
	5, 1128,
	-2, 1763,
	-1, 921,
	5, 1127,
	-2, 1842,
	-1, 922,
	5, 1129,
	403, 1129,
	-2, 1806,
	-1, 923,
	5, 1130,
	403, 1130,
	-2, 1807,
	-1, 968,
	437, 1554,
	-2, 1545,
	-1, 999,
	146, 1777,
	371, 1777,
	420, 1777,
	439, 1777,
	-2, 0,
	-1, 1000,
	193, 845,
	274, 845,
	281, 845,
	-2, 436,
	-1, 1118,
	292, 1527,
	430, 1527,
	-2, 1526,
	-1, 1174,
	283, 639,
	402, 639,
	-2, 226,
	-1, 1193,
	264, 937,
	-2, 749,
	-1, 1202,
	247, 1549,
	-2, 0,
	-1, 1265,
	1, 328,
	436, 328,
	438, 328,
	440, 328,
	441, 328,
	-2, 911,
	-1, 1268,
	4, 1841,
	10, 1841,
	11, 1841,
	13, 1841,
	14, 1841,
	15, 1841,
	16, 1841,
	17, 1841,
	18, 1841,
	20, 1841,
	21, 1841,
	22, 1841,
	23, 1841,
	24, 1841,
	26, 1841,
	29, 1841,
	31, 1841,
	33, 1841,
	36, 1841,
	37, 1841,
	38, 1841,
	39, 1841,
	40, 1841,
	41, 1841,
	42, 1841,
	43, 1841,
	44, 1841,
	45, 1841,
	47, 1841,
	48, 1841,
	49, 1841,
	50, 1841,
	51, 1841,
	52, 1841,
	55, 1841,
	56, 1841,
	57, 1841,
	58, 1841,
	60, 1841,
	61, 1841,
	62, 1841,
	65, 1841,
	66, 1841,
	67, 1841,
	68, 1841,
	69, 1841,
	70, 1841,
	71, 1841,
	72, 1841,
	73, 1841,
	74, 1841,
	76, 1841,
	77, 1841,
	78, 1841,
	79, 1841,
	80, 1841,
	82, 1841,
	83, 1841,
	84, 1841,
	92, 1841,
	93, 1841,
	94, 1841,
	95, 1841,
	96, 1841,
	97, 1841,
	98, 1841,
	99, 1841,
	101, 1841,
	103, 1841,
	105, 1841,
	108, 1841,
	109, 1841,
	110, 1841,
	112, 1841,
	114, 1841,
	115, 1841,
	117, 1841,
	118, 1841,
	119, 1841,
	120, 1841,
	121, 1841,
	122, 1841,
	123, 1841,
	124, 1841,
	125, 1841,
	126, 1841,
	127, 1841,
	131, 1841,
	132, 1841,
	133, 1841,
	134, 1841,
	135, 1841,
	136, 1841,
	137, 1841,
	138, 1841,
	139, 1841,
	140, 1841,
	141, 1841,
	142, 1841,
	144, 1841,
	147, 1841,
	148, 1841,
	149, 1841,
	151, 1841,
	152, 1841,
	154, 1841,
	155, 1841,
	157, 1841,
	158, 1841,
	159, 1841,
	160, 1841,
	161, 1841,
	162, 1841,
	163, 1841,
	164, 1841,
	165, 1841,
	166, 1841,
	167, 1841,
	168, 1841,
	169, 1841,
	170, 1841,
	171, 1841,
	172, 1841,
	174, 1841,
	175, 1841,
	176, 1841,
	178, 1841,
	179, 1841,
	180, 1841,
	181, 1841,
	182, 1841,
	183, 1841,
	184, 1841,
	185, 1841,
	186, 1841,
	188, 1841,
	190, 1841,
	191, 1841,
	192, 1841,
	193, 1841,
	194, 1841,
	195, 1841,
	196, 1841,
	197, 1841,
	198, 1841,
	199, 1841,
	200, 1841,
	201, 1841,
	202, 1841,
	203, 1841,
	204, 1841,
	206, 1841,
	207, 1841,
	209, 1841,
	210, 1841,
	211, 1841,
	212, 1841,
	213, 1841,
	214, 1841,
	216, 1841,
	217, 1841,
	220, 1841,
	221, 1841,
	222, 1841,
	223, 1841,
	226, 1841,
	227, 1841,
	228, 1841,
	229, 1841,
	230, 1841,
	231, 1841,
	232, 1841,
	233, 1841,
	234, 1841,
	235, 1841,
	238, 1841,
	240, 1841,
	241, 1841,
	242, 1841,
	243, 1841,
	245, 1841,
	246, 1841,
	249, 1841,
	250, 1841,
	251, 1841,
	253, 1841,
	254, 1841,
	256, 1841,
	258, 1841,
	259, 1841,
	260, 1841,
	261, 1841,
	262, 1841,
	263, 1841,
	264, 1841,
	265, 1841,
	266, 1841,
	268, 1841,
	269, 1841,
	270, 1841,
	271, 1841,
	272, 1841,
	274, 1841,
	276, 1841,
	277, 1841,
	278, 1841,
	279, 1841,
	280, 1841,
	281, 1841,
	282, 1841,
	283, 1841,
	284, 1841,
	286, 1841,
	287, 1841,
	288, 1841,
	289, 1841,
	290, 1841,
	291, 1841,
	292, 1841,
	293, 1841,
	294, 1841,
	295, 1841,
	296, 1841,
	297, 1841,
	298, 1841,
	299, 1841,
	301, 1841,
	302, 1841,
	303, 1841,
	304, 1841,
	305, 1841,
	306, 1841,
	307, 1841,
	308, 1841,
	309, 1841,
	310, 1841,
	311, 1841,
	312, 1841,
	313, 1841,
	314, 1841,
	315, 1841,
	316, 1841,
	317, 1841,
	319, 1841,
	320, 1841,
	321, 1841,
	322, 1841,
	323, 1841,
	324, 1841,
	325, 1841,
	326, 1841,
	327, 1841,
	328, 1841,
	330, 1841,
	331, 1841,
	332, 1841,
	333, 1841,
	334, 1841,
	335, 1841,
	336, 1841,
	337, 1841,
	338, 1841,
	340, 1841,
	341, 1841,
	342, 1841,
	343, 1841,
	344, 1841,
	345, 1841,
	346, 1841,
	347, 1841,
	348, 1841,
	349, 1841,
	350, 1841,
	351, 1841,
	353, 1841,
	354, 1841,
	355, 1841,
	357, 1841,
	358, 1841,
	359, 1841,
	360, 1841,
	361, 1841,
	362, 1841,
	363, 1841,
	364, 1841,
	365, 1841,
	367, 1841,
	368, 1841,
	369, 1841,
	370, 1841,
	373, 1841,
	374, 1841,
	375, 1841,
	376, 1841,
	377, 1841,
	379, 1841,
	380, 1841,
	381, 1841,
	383, 1841,
	384, 1841,
	387, 1841,
	388, 1841,
	389, 1841,
	390, 1841,
	391, 1841,
	393, 1841,
	395, 1841,
	396, 1841,
	397, 1841,
	398, 1841,
	399, 1841,
	400, 1841,
	402, 1841,
	403, 1841,
	404, 1841,
	409, 1841,
	410, 1841,
	411, 1841,
	412, 1841,
	413, 1841,
	414, 1841,
	415, 1841,
	416, 1841,
	418, 1841,
	419, 1841,
	420, 1841,
	421, 1841,
	422, 1841,
	423, 1841,
	425, 1841,
	426, 1841,
	427, 1841,
	428, 1841,
	429, 1841,
	430, 1841,
	431, 1841,
	432, 1841,
	433, 1841,
	435, 1841,
	438, 1841,
	439, 1841,
	442, 1841,
	443, 1841,
	-2, 0,
	-1, 1271,
	146, 1748,
	371, 1748,
	420, 1748,
	439, 1748,
	-2, 0,
	-1, 1338,
	1, 1795,
	436, 1795,
	438, 1795,
	439, 1795,
	440, 1795,
	441, 1795,
	-2, 593,
	-1, 1339,
	1, 1746,
	436, 1746,
	438, 1746,
	439, 1746,
	440, 1746,
	441, 1746,
	-2, 594,
	-1, 1352,
	193, 845,
	274, 845,
	281, 845,
	-2, 840,
	-1, 1357,
	130, 951,
	215, 951,
	244, 951,
	-2, 909,
	-1, 1450,
	116, 913,
	130, 913,
	187, 913,
	215, 913,
	244, 913,
	252, 913,
	385, 913,
	-2, 1299,
	-1, 1502,
	438, 1432,
	-2, 0,
	-1, 1535,
	116, 913,
	130, 913,
	187, 913,
	215, 913,
	244, 913,
	252, 913,
	385, 913,
	-2, 1021,
	-1, 1627,
	193, 845,
	274, 845,
	281, 845,
	-2, 438,
	-1, 1876,
	13, 0,
	14, 0,
	15, 0,
	77, 0,
	199, 0,
	200, 0,
	418, 0,
	419, 0,
	420, 0,
	421, 0,
	422, 0,
	-2, 1178,
	-1, 1877,
	13, 0,
	14, 0,
	15, 0,
	77, 0,
	199, 0,
	200, 0,
	418, 0,
	419, 0,
	420, 0,
	421, 0,
	422, 0,
	-2, 1179,
	-1, 1878,
	13, 0,
	14, 0,
	15, 0,
	77, 0,
	199, 0,
	200, 0,
	418, 0,
	419, 0,
	420, 0,
	421, 0,
	422, 0,
	-2, 1180,
	-1, 1879,
	13, 0,
	14, 0,
	15, 0,
	77, 0,
	199, 0,
	200, 0,
	418, 0,
	419, 0,
	420, 0,
	421, 0,
	422, 0,
	-2, 1181,
	-1, 1880,
	13, 0,
	14, 0,
	15, 0,
	77, 0,
	199, 0,
	200, 0,
	418, 0,
	419, 0,
	420, 0,
	421, 0,
	422, 0,
	-2, 1182,
	-1, 1881,
	13, 0,
	14, 0,
	15, 0,
	77, 0,
	199, 0,
	200, 0,
	418, 0,
	419, 0,
	420, 0,
	421, 0,
	422, 0,
	-2, 1183,
	-1, 1882,
	13, 0,
	14, 0,
	15, 0,
	77, 0,
	199, 0,
	200, 0,
	418, 0,
	419, 0,
	420, 0,
	421, 0,
	422, 0,
	-2, 1184,
	-1, 1883,
	13, 0,
	14, 0,
	15, 0,
	77, 0,
	199, 0,
	200, 0,
	418, 0,
	419, 0,
	420, 0,
	421, 0,
	422, 0,
	-2, 1185,
	-1, 1895,
	13, 0,
	14, 0,
	15, 0,
	77, 0,
	199, 0,
	200, 0,
	418, 0,
	419, 0,
	420, 0,
	421, 0,
	422, 0,
	-2, 1197,
	-1, 1896,
	13, 0,
	14, 0,
	15, 0,
	77, 0,
	199, 0,
	200, 0,
	418, 0,
	419, 0,
	420, 0,
	421, 0,
	422, 0,
	-2, 1198,
	-1, 1897,
	13, 0,
	14, 0,
	15, 0,
	77, 0,
	199, 0,
	200, 0,
	418, 0,
	419, 0,
	420, 0,
	421, 0,
	422, 0,
	-2, 1199,
	-1, 1900,
	16, 0,
	17, 0,
	18, 0,
	39, 0,
	166, 0,
	167, 0,
	214, 0,
	334, 0,
	415, 0,
	423, 0,
	-2, 1204,
	-1, 1906,
	16, 0,
	17, 0,
	18, 0,
	39, 0,
	166, 0,
	167, 0,
	214, 0,
	334, 0,
	415, 0,
	423, 0,
	-2, 1208,
	-1, 1908,
	16, 0,
	17, 0,
	18, 0,
	39, 0,
	166, 0,
	167, 0,
	214, 0,
	334, 0,
	415, 0,
	423, 0,
	-2, 1216,
	-1, 1909,
	16, 0,
	17, 0,
	18, 0,
	39, 0,
	166, 0,
	167, 0,
	214, 0,
	334, 0,
	415, 0,
	423, 0,
	-2, 1217,
	-1, 1910,
	16, 0,
	17, 0,
	18, 0,
	39, 0,
	166, 0,
	167, 0,
	214, 0,
	334, 0,
	415, 0,
	423, 0,
	-2, 1218,
	-1, 1911,
	16, 0,
	17, 0,
	18, 0,
	39, 0,
	166, 0,
	167, 0,
	214, 0,
	334, 0,
	415, 0,
	423, 0,
	-2, 1219,
	-1, 2002,
	5, 1092,
	146, 1443,
	437, 1554,
	-2, 1545,
	-1, 2003,
	146, 1444,
	-2, 1799,
	-1, 2004,
	146, 1445,
	-2, 1674,
	-1, 2005,
	146, 1446,
	-2, 1606,
	-1, 2006,
	146, 1447,
	-2, 1639,
	-1, 2007,
	146, 1448,
	-2, 1673,
	-1, 2008,
	146, 1449,
	-2, 1739,
	-1, 2076,
	1, 1022,
	82, 1022,
	116, 1022,
	130, 1022,
	143, 1022,
	147, 1022,
	153, 1022,
	156, 1022,
	178, 1022,
	187, 1022,
	196, 1022,
	211, 1022,
	215, 1022,
	231, 1022,
	244, 1022,
	247, 1022,
	252, 1022,
	300, 1022,
	302, 1022,
	385, 1022,
	394, 1022,
	406, 1022,
	407, 1022,
	417, 1022,
	436, 1022,
	438, 1022,
	440, 1022,
	441, 1022,
	442, 1022,
	-2, 1021,
	-1, 2081,
	437, 1531,
	-2, 1543,
	-1, 2306,
	16, 0,
	17, 0,
	18, 0,
	39, 0,
	166, 0,
	167, 0,
	214, 0,
	334, 0,
	415, 0,
	423, 0,
	-2, 1206,
	-1, 2307,
	16, 0,
	17, 0,
	18, 0,
	39, 0,
	166, 0,
	167, 0,
	214, 0,
	334, 0,
	415, 0,
	423, 0,
	-2, 1210,
	-1, 2313,
	16, 0,
	17, 0,
	18, 0,
	39, 0,
	166, 0,
	167, 0,
	214, 0,
	334, 0,
	415, 0,
	423, 0,
	-2, 1212,
	-1, 2486,
	193, 845,
	274, 845,
	281, 845,
	-2, 435,
	-1, 2557,
	438, 1502,
	442, 1502,
	-2, 1518,
	-1, 2567,
	264, 937,
	-2, 749,
	-1, 2643,
	16, 0,
	17, 0,
	18, 0,
	39, 0,
	166, 0,
	167, 0,
	214, 0,
	334, 0,
	415, 0,
	423, 0,
	-2, 1214,
	-1, 2650,
	191, 0,
	192, 0,
	238, 0,
	-2, 1233,
	-1, 2711,
	13, 0,
	14, 0,
	15, 0,
	418, 0,
	419, 0,
	420, 0,
	-2, 1264,
	-1, 2712,
	13, 0,
	14, 0,
	15, 0,
	418, 0,
	419, 0,
	420, 0,
	-2, 1265,
	-1, 2713,
	13, 0,
	14, 0,
	15, 0,
	418, 0,
	419, 0,
	420, 0,
	-2, 1266,
	-1, 2717,
	13, 0,
	14, 0,
	15, 0,
	418, 0,
	419, 0,
	420, 0,
	-2, 1270,
	-1, 2718,
	13, 0,
	14, 0,
	15, 0,
	418, 0,
	419, 0,
	420, 0,
	-2, 1271,
	-1, 2719,
	13, 0,
	14, 0,
	15, 0,
	418, 0,
	419, 0,
	420, 0,
	-2, 1272,
	-1, 2761,
	437, 1532,
	-2, 1544,
	-1, 2877,
	191, 0,
	192, 0,
	238, 0,
	-2, 1234,
	-1, 2880,
	16, 0,
	17, 0,
	18, 0,
	39, 0,
	166, 0,
	167, 0,
	214, 0,
	334, 0,
	415, 0,
	423, 0,
	-2, 1237,
	-1, 2881,
	16, 0,
	17, 0,
	18, 0,
	39, 0,
	166, 0,
	167, 0,
	214, 0,
	334, 0,
	415, 0,
	423, 0,
	-2, 1239,
	-1, 3020,
	16, 0,
	17, 0,
	18, 0,
	39, 0,
	166, 0,
	167, 0,
	214, 0,
	334, 0,
	415, 0,
	423, 0,
	-2, 1238,
	-1, 3021,
	16, 0,
	17, 0,
	18, 0,
	39, 0,
	166, 0,
	167, 0,
	214, 0,
	334, 0,
	415, 0,
	423, 0,
	-2, 1240,
	-1, 3031,
	191, 0,
	-2, 1273,
	-1, 3116,
	191, 0,
	-2, 1274,
	-1, 3212,
	39, 0,
	166, 0,
	214, 0,
	334, 0,
	415, 0,
	423, 0,
	-2, 1802,
}

const sqlPrivate = 57344

const sqlLast = 64682

var sqlAct = [...]int{

	855, 3289, 3221, 3187, 3279, 3059, 3189, 3211, 3186, 3222,
	3081, 3223, 2222, 3175, 2037, 3048, 2230, 2681, 3210, 2828,
	2978, 3120, 2989, 1863, 1257, 3012, 2778, 972, 785, 2823,
	2068, 2936, 2833, 812, 2576, 2555, 3035, 1923, 1559, 1365,
	205, 2584, 205, 205, 1791, 2126, 205, 205, 205, 205,
	205, 2578, 1122, 205, 2334, 776, 535, 2779, 2219, 33,
	2332, 556, 2589, 1530, 2262, 961, 2299, 2067, 2197, 1023,
	2453, 2200, 2464, 2064, 2261, 2912, 2231, 1749, 1528, 205,
	2253, 1752, 650, 556, 1770, 2255, 1742, 1509, 1741, 2128,
	2429, 2440, 1679, 1670, 2734, 2415, 1448, 784, 139, 795,
	1115, 2414, 2494, 1458, 2180, 3121, 1936, 2119, 1856, 1260,
	1134, 1538, 5, 1954, 1697, 2295, 2588, 851, 2069, 1703,
	87, 200, 1920, 1656, 2181, 1011, 1658, 2469, 2198, 1547,
	1253, 1510, 827, 1352, 1966, 2158, 1131, 773, 1860, 1124,
	2556, 1266, 2071, 1738, 1250, 1187, 2224, 956, 1560, 2265,
	1240, 1475, 557, 1002, 202, 2056, 1948, 935, 2041, 1519,
	953, 558, 3082, 1937, 503, 1439, 2157, 1998, 1366, 519,
	1364, 205, 205, 552, 201, 139, 1264, 146, 1758, 596,
	1217, 627, 529, 147, 487, 1669, 1142, 811, 506, 511,
	645, 2034, 933, 958, 1351, 691, 1199, 1471, 2750, 1370,
	2330, 2751, 775, 1529, 1772, 1792, 1772, 1772, 2223, 3316,
	646, 780, 514, 2050, 2182, 561, 3307, 3306, 3288, 3275,
	2050, 2050, 1710, 2950, 3273, 3241, 3240, 3237, 2950, 2050,
	2050, 3238, 2596, 2638, 59, 564, 648, 561, 3234, 1784,
	780, 2562, 3235, 3231, 2595, 60, 3208, 1710, 3207, 3204,
	1710, 3203, 1710, 1784, 876, 1784, 659, 564, 3170, 64,
	3161, 3160, 2093, 3154, 2950, 2950, 3148, 1710, 3146, 781,
	2950, 3118, 2950, 2050, 3104, 2093, 3101, 139, 1710, 3073,
	2950, 3072, 3065, 1710, 3064, 1710, 1710, 3041, 2950, 70,
	950, 1710, 3022, 3003, 2974, 2968, 2093, 2608, 2050, 2050,
	2949, 2879, 2847, 2839, 2950, 2093, 2840, 2840, 2756, 2182,
	854, 967, 2757, 936, 936, 2746, 2740, 761, 76, 2747,
	2050, 2674, 810, 760, 2615, 1710, 2484, 86, 2616, 2426,
	2043, 77, 2382, 2050, 2737, 2381, 2050, 2090, 2377, 2050,
	2362, 768, 2050, 2351, 2363, 2349, 2251, 2050, 2104, 2092,
	1788, 2350, 2050, 2093, 1378, 1379, 1706, 1411, 1412, 1413,
	1421, 1422, 1423, 2087, 937, 2083, 2049, 2050, 78, 1710,
	2050, 1710, 984, 1414, 1787, 2387, 2388, 989, 1788, 939,
	1381, 940, 3171, 1427, 3105, 1784, 2737, 2042, 2969, 1710,
	176, 2616, 2172, 2117, 1630, 2608, 2206, 2298, 1709, 2115,
	1505, 2050, 1141, 2387, 2388, 179, 1380, 2597, 941, 1378,
	1379, 938, 1649, 767, 1400, 766, 765, 764, 763, 759,
	758, 1397, 757, 756, 755, 754, 2598, 3058, 178, 753,
	2333, 752, 751, 750, 749, 1381, 2387, 2388, 748, 2405,
	2406, 2407, 689, 985, 176, 688, 687, 686, 1378, 1379,
	1773, 685, 1773, 1773, 684, 683, 682, 681, 680, 2387,
	2388, 1380, 679, 2402, 678, 677, 676, 675, 674, 673,
	672, 177, 671, 79, 1381, 1403, 1404, 1405, 1406, 670,
	170, 669, 178, 668, 667, 1386, 666, 665, 171, 964,
	658, 657, 205, 618, 1163, 617, 2402, 577, 576, 575,
	1380, 205, 567, 566, 145, 82, 2393, 83, 1400, 148,
	1418, 1428, 1449, 565, 1408, 1409, 1410, 542, 541, 540,
	539, 523, 205, 198, 197, 177, 176, 196, 2595, 205,
	195, 1157, 194, 193, 2393, 1424, 1425, 1710, 649, 192,
	1386, 116, 191, 1395, 1396, 205, 1026, 205, 205, 1127,
	205, 1026, 205, 2873, 190, 189, 188, 187, 1416, 186,
	205, 205, 1010, 148, 178, 1401, 1015, 2393, 185, 1403,
	1404, 1405, 1406, 184, 183, 182, 181, 180, 2927, 1386,
	2891, 2841, 1426, 982, 2754, 205, 2403, 117, 2467, 2356,
	2393, 1794, 2345, 1531, 1780, 1415, 1771, 1836, 205, 149,
	1127, 1127, 205, 205, 2281, 205, 2185, 177, 1408, 1409,
	1410, 2075, 2084, 1024, 2403, 1377, 170, 205, 1135, 3228,
	1989, 1987, 985, 2212, 171, 205, 2042, 1985, 1654, 1545,
	1150, 1983, 1155, 853, 1161, 1407, 1465, 1147, 205, 205,
	205, 205, 205, 1127, 1127, 647, 1981, 2403, 1127, 1017,
	205, 1127, 205, 1402, 974, 1162, 1793, 3209, 1120, 1401,
	3144, 3111, 809, 3108, 1000, 1151, 3004, 2929, 1261, 1118,
	2403, 2997, 3106, 985, 2404, 2911, 2910, 1951, 1419, 2898,
	2897, 1460, 1137, 2896, 2895, 2889, 2888, 2887, 2227, 2886,
	1145, 2815, 1156, 2768, 2766, 2760, 1127, 2731, 2730, 2729,
	2658, 2654, 2404, 2618, 2462, 1019, 2422, 1112, 1117, 1193,
	1196, 997, 1144, 2413, 561, 1276, 205, 2386, 783, 2383,
	2380, 1143, 1279, 1200, 1200, 2378, 2361, 2339, 2338, 1407,
	205, 2331, 2252, 2076, 564, 2404, 1959, 1377, 949, 1952,
	1746, 1204, 1460, 1447, 1376, 205, 139, 1402, 1715, 3314,
	3287, 3286, 3242, 973, 1713, 2683, 3199, 3197, 2404, 1417,
	1273, 1269, 1392, 1393, 1399, 1398, 1394, 1420, 781, 1391,
	1389, 1390, 1382, 1383, 1384, 1385, 1387, 1388, 1254, 2387,
	2388, 2479, 2901, 3142, 3140, 3137, 2900, 1267, 2213, 1244,
	1247, 2396, 2397, 2389, 2390, 2391, 2392, 2394, 2395, 1201,
	3136, 3132, 2175, 3129, 3100, 1290, 1953, 1950, 3099, 1461,
	176, 1459, 963, 2145, 1926, 1357, 1358, 3054, 2398, 2396,
	2397, 2389, 2390, 2391, 2392, 2394, 2395, 1382, 1383, 1384,
	1385, 1387, 1388, 1650, 2159, 3033, 2095, 3009, 3008, 2387,
	2388, 965, 2294, 2987, 2399, 2400, 2401, 176, 178, 2984,
	2980, 2398, 2396, 2397, 2389, 2390, 2391, 2392, 2394, 2395,
	2926, 2996, 3057, 1391, 1389, 1390, 1382, 1383, 1384, 1385,
	1387, 1388, 1932, 2909, 2398, 2396, 2397, 2389, 2390, 2391,
	2392, 2394, 2395, 2860, 2857, 178, 1461, 2794, 1283, 2793,
	1350, 177, 2782, 2781, 2742, 2649, 2609, 1955, 1356, 2570,
	170, 2544, 2525, 2504, 2503, 2481, 176, 2425, 171, 2360,
	2393, 176, 2359, 1363, 1355, 2344, 2322, 2194, 1472, 1452,
	1469, 2100, 176, 1457, 2387, 2388, 2079, 2061, 177, 148,
	1353, 2048, 1979, 1443, 1544, 205, 1508, 170, 1504, 1503,
	781, 789, 3123, 2446, 178, 171, 2211, 1795, 1502, 178,
	2387, 2388, 1501, 2405, 2406, 2407, 1378, 1379, 1500, 1499,
	178, 205, 761, 1516, 1507, 1359, 148, 2504, 760, 2875,
	2393, 1498, 1497, 1496, 205, 1026, 205, 205, 1373, 1374,
	1494, 176, 1381, 1127, 556, 205, 205, 177, 1493, 556,
	205, 1492, 177, 1949, 1553, 205, 170, 1491, 1490, 1489,
	1488, 170, 1487, 177, 171, 1486, 2387, 2388, 1380, 171,
	2402, 1625, 170, 1485, 1484, 1483, 1482, 2098, 1026, 178,
	171, 1566, 1539, 2387, 2388, 2226, 2405, 2406, 2407, 1462,
	148, 1513, 1514, 1444, 176, 1442, 1437, 996, 987, 979,
	1652, 148, 1548, 1645, 2928, 2883, 2765, 1378, 1379, 1526,
	139, 1624, 2749, 2745, 1540, 2393, 1988, 1986, 2348, 2062,
	1378, 1379, 177, 1984, 2020, 1527, 3141, 1982, 1489, 1473,
	1474, 170, 178, 1381, 1489, 3109, 2477, 936, 781, 171,
	1440, 2393, 1980, 2402, 3107, 1655, 1381, 1386, 967, 1012,
	967, 1014, 1554, 2579, 1550, 2387, 2388, 3002, 1649, 1380,
	148, 2970, 2752, 2611, 1649, 1536, 2610, 2182, 1531, 1552,
	1348, 1298, 1380, 2367, 1556, 177, 1408, 1409, 1410, 1622,
	2528, 1636, 2366, 1479, 170, 2365, 2364, 1506, 1649, 1480,
	2792, 2408, 171, 1627, 746, 2403, 2304, 2393, 561, 2147,
	1013, 1127, 205, 561, 1747, 1648, 1009, 1792, 1026, 1533,
	1477, 1467, 1743, 148, 2393, 2624, 1478, 1555, 564, 2539,
	1692, 2403, 1621, 564, 3036, 3290, 3229, 1401, 2161, 2223,
	2685, 747, 1967, 948, 1557, 1446, 1476, 2354, 1386, 1495,
	2409, 1659, 1664, 2553, 1674, 1660, 205, 205, 1735, 1178,
	3239, 1951, 3236, 205, 2591, 2774, 1287, 1641, 3264, 2391,
	2392, 2394, 2395, 205, 2408, 3183, 2824, 2259, 2960, 1176,
	2478, 1166, 205, 742, 205, 1711, 205, 2403, 3265, 2488,
	205, 3230, 740, 2404, 2105, 1694, 3311, 3079, 1696, 1826,
	1322, 1700, 205, 3076, 2403, 3153, 738, 736, 3075, 2096,
	733, 3074, 1590, 1824, 1678, 2808, 2805, 2130, 2804, 2404,
	1707, 2771, 2770, 1952, 2343, 1402, 2342, 2389, 2390, 2391,
	2392, 2394, 2395, 2341, 2121, 2340, 964, 2308, 964, 1661,
	2977, 1127, 205, 1127, 613, 2797, 2177, 2171, 1127, 1177,
	2168, 1663, 205, 205, 2149, 1637, 2121, 1731, 2089, 1907,
	1354, 1755, 1127, 1127, 1144, 205, 561, 2120, 1140, 1764,
	1704, 205, 1796, 1143, 1978, 2404, 556, 205, 1734, 205,
	1563, 205, 1321, 205, 1014, 205, 564, 779, 1977, 1976,
	1953, 1950, 2404, 1699, 1975, 205, 1865, 205, 1708, 1775,
	2220, 3017, 1777, 2133, 1665, 1779, 205, 1285, 1210, 1782,
	1209, 2397, 2389, 2390, 2391, 2392, 2394, 2395, 2625, 1833,
	614, 1805, 1229, 1172, 1724, 205, 2148, 1725, 2399, 2400,
	2401, 205, 1762, 1013, 1188, 2398, 2396, 2397, 2389, 2390,
	2391, 2392, 2394, 2395, 1382, 1383, 1384, 1385, 1387, 1388,
	1834, 1026, 1790, 1208, 730, 1207, 1014, 3152, 778, 1801,
	977, 781, 1757, 2811, 1760, 1723, 608, 3061, 499, 1280,
	1186, 1803, 1804, 1922, 1922, 2082, 1843, 2140, 2956, 2527,
	1267, 1955, 1566, 1566, 3201, 1808, 543, 1840, 1797, 1680,
	1361, 494, 1666, 1671, 2389, 2390, 2391, 2392, 2394, 2395,
	779, 2399, 2400, 2401, 1835, 1013, 1684, 1185, 2398, 2396,
	2397, 2389, 2390, 2391, 2392, 2394, 2395, 1789, 1864, 3225,
	2139, 1668, 976, 780, 997, 1333, 2784, 774, 1938, 1939,
	561, 2132, 2319, 1761, 607, 1299, 1026, 1384, 1385, 1387,
	1388, 1967, 2627, 3282, 1672, 1673, 1938, 1964, 1681, 1815,
	564, 2626, 1320, 1388, 2317, 1640, 1639, 1930, 1649, 1646,
	1659, 1281, 1928, 2278, 1660, 1838, 995, 1955, 664, 2165,
	3256, 778, 1841, 2586, 3264, 2536, 205, 1949, 549, 1997,
	1174, 2001, 2001, 2011, 2013, 2018, 1317, 1938, 2395, 1650,
	2159, 3301, 1347, 2040, 1837, 1650, 2159, 1861, 1862, 1839,
	1026, 205, 1832, 1968, 1842, 2487, 1931, 2668, 2296, 2297,
	205, 1540, 2531, 205, 2954, 1691, 1026, 1685, 761, 1650,
	2159, 761, 761, 1676, 1852, 1452, 1662, 1853, 1854, 2080,
	616, 615, 3168, 781, 3226, 1963, 780, 1318, 2587, 1974,
	2077, 2795, 3133, 1666, 2131, 1188, 781, 2489, 1661, 644,
	781, 1643, 744, 1470, 2314, 743, 777, 551, 1286, 963,
	1663, 963, 2063, 2118, 734, 2315, 2073, 2074, 2320, 2088,
	1825, 2025, 2547, 2516, 1934, 606, 568, 605, 734, 735,
	1686, 1687, 734, 2081, 1823, 1228, 1171, 1772, 965, 1682,
	965, 2586, 2806, 1295, 205, 1961, 1674, 2208, 1955, 2169,
	3255, 3143, 2053, 1590, 1590, 609, 1628, 3227, 2108, 2283,
	1666, 2515, 2865, 1665, 1006, 1683, 1330, 1659, 936, 1958,
	2110, 1660, 3027, 967, 3280, 1026, 139, 2955, 781, 2665,
	205, 1378, 1379, 2038, 495, 2009, 2029, 3062, 205, 1591,
	967, 2091, 2046, 2047, 1436, 2358, 2785, 545, 205, 2058,
	2059, 2054, 2111, 2518, 2057, 1536, 3166, 1381, 2072, 1001,
	780, 205, 2861, 550, 1127, 2109, 2763, 990, 1644, 777,
	1674, 1563, 1563, 2867, 2520, 3224, 205, 1026, 1304, 3126,
	205, 205, 3263, 1380, 1566, 3167, 496, 3261, 2286, 3281,
	2310, 1921, 2116, 2097, 2122, 1007, 2666, 1331, 1688, 2144,
	1518, 1666, 1008, 547, 2316, 1661, 205, 205, 731, 3089,
	205, 2099, 3014, 2318, 975, 1807, 2519, 1663, 2986, 1360,
	2103, 3283, 2574, 1282, 497, 205, 498, 2195, 3254, 2174,
	2522, 2215, 205, 1736, 205, 1515, 205, 3302, 2134, 2136,
	544, 2151, 205, 988, 2187, 205, 2189, 205, 983, 205,
	2179, 205, 205, 2106, 205, 1127, 1127, 1127, 2102, 1127,
	1689, 2166, 1386, 205, 205, 1522, 205, 1332, 569, 570,
	1665, 1929, 205, 2170, 1473, 1474, 548, 2234, 2285, 2125,
	2247, 2248, 1118, 205, 486, 205, 546, 1955, 2225, 1904,
	2225, 1408, 1409, 1410, 2282, 994, 1525, 1006, 2142, 2152,
	1369, 964, 2217, 205, 205, 205, 2178, 205, 2150, 2866,
	3013, 2270, 2907, 2550, 1520, 1695, 2720, 1675, 964, 2947,
	3297, 2167, 2160, 2162, 2163, 2164, 1368, 2470, 3067, 1523,
	205, 3066, 1144, 1773, 561, 1662, 2203, 3052, 2773, 2575,
	2192, 2183, 1401, 1436, 2500, 2944, 2258, 2496, 2937, 1521,
	1006, 572, 571, 2207, 564, 139, 2216, 2664, 1666, 2199,
	1666, 2935, 2959, 2196, 2246, 2442, 1918, 2939, 1296, 2958,
	2249, 2284, 2272, 2454, 2273, 1756, 2236, 2229, 1007, 1650,
	1647, 2243, 1745, 1744, 1719, 1008, 2945, 1657, 1916, 1702,
	2245, 2271, 1635, 3176, 1848, 2240, 2244, 2241, 1267, 2242,
	2250, 573, 574, 3015, 2153, 1590, 2260, 1829, 1522, 1701,
	1368, 1367, 2276, 2311, 2277, 2938, 1902, 1905, 1631, 1297,
	1524, 2829, 1294, 1305, 2990, 1378, 1379, 2336, 2337, 205,
	1402, 1007, 2193, 3053, 2288, 1231, 1802, 1698, 1008, 1525,
	1369, 2506, 2346, 1284, 2505, 721, 2721, 2291, 2908, 2302,
	2443, 1381, 2722, 2293, 2052, 1633, 2086, 2055, 2051, 3296,
	1672, 1673, 2085, 2455, 1901, 1202, 772, 2290, 2205, 778,
	1634, 3, 1523, 1563, 2979, 1216, 1214, 1380, 2619, 501,
	1754, 3268, 1203, 3083, 3050, 770, 2549, 721, 1912, 1849,
	2025, 2025, 1662, 2913, 2735, 1367, 1913, 2309, 1972, 1914,
	3270, 1345, 1919, 3032, 2906, 2957, 2810, 2416, 772, 2648,
	2473, 2379, 2441, 1327, 2321, 1026, 1325, 781, 3051, 2176,
	2146, 2424, 2940, 663, 2427, 2941, 2101, 1546, 1543, 2434,
	2435, 205, 1346, 2436, 205, 722, 2154, 2155, 1277, 2417,
	774, 205, 2280, 771, 205, 205, 1026, 1389, 1390, 1382,
	1383, 1384, 1385, 1387, 1388, 1026, 1386, 2279, 2347, 2943,
	205, 2471, 2275, 1524, 2450, 1831, 1822, 1812, 1623, 2457,
	2353, 2946, 205, 1315, 2458, 2459, 1481, 722, 721, 656,
	1192, 1971, 2433, 3220, 1903, 1408, 1409, 1410, 3173, 205,
	205, 205, 2025, 2025, 2025, 205, 2449, 1566, 205, 772,
	2577, 2933, 2485, 2827, 2790, 205, 205, 205, 205, 205,
	2461, 2466, 2788, 2460, 2490, 2465, 2676, 2772, 2573, 205,
	205, 2560, 2468, 2559, 963, 2431, 2221, 205, 2448, 2210,
	1566, 3093, 2451, 2438, 2439, 2493, 1401, 2444, 1915, 205,
	1127, 963, 205, 1313, 2428, 1344, 967, 1917, 1026, 2445,
	2507, 971, 2510, 965, 967, 967, 1026, 1326, 967, 2497,
	1324, 205, 1215, 1213, 205, 205, 500, 2482, 722, 1311,
	965, 723, 2942, 2523, 2209, 2524, 1127, 205, 2190, 1127,
	1127, 1127, 967, 2456, 2472, 852, 205, 1786, 3006, 2474,
	1785, 2530, 205, 2419, 2420, 2421, 1309, 205, 2561, 205,
	2502, 2483, 1783, 2542, 1781, 2543, 205, 1821, 2508, 2486,
	2512, 2513, 2476, 723, 2491, 661, 662, 1314, 1307, 2563,
	1778, 2545, 1776, 2468, 1402, 203, 1301, 489, 490, 1127,
	1127, 507, 489, 507, 517, 522, 2521, 205, 538, 2537,
	205, 2593, 2590, 2526, 2532, 2501, 562, 2582, 2581, 2538,
	1664, 2590, 205, 1026, 205, 205, 1026, 205, 1212, 1552,
	1734, 2151, 2541, 2546, 653, 2535, 1774, 2607, 562, 1765,
	724, 654, 655, 205, 732, 1664, 1716, 1714, 2540, 1705,
	1693, 1851, 1690, 1677, 945, 2564, 2622, 1312, 2566, 2567,
	2568, 1667, 3265, 3005, 1371, 2601, 2602, 2603, 2533, 2604,
	2605, 2300, 2534, 1653, 723, 1704, 1168, 946, 725, 3095,
	769, 1704, 724, 1310, 2617, 2138, 1026, 781, 1590, 139,
	1135, 2621, 2599, 1024, 964, 2632, 1566, 1026, 2580, 205,
	1674, 2651, 964, 964, 2606, 2838, 964, 1809, 2613, 2614,
	1308, 2592, 1390, 1382, 1383, 1384, 1385, 1387, 1388, 3135,
	725, 1590, 1342, 1343, 2121, 3113, 489, 489, 2121, 2914,
	964, 502, 1306, 2629, 966, 2137, 2660, 2661, 2662, 2135,
	1300, 2301, 2156, 1566, 1566, 1372, 2141, 2636, 2634, 2025,
	2025, 1378, 1379, 2673, 1375, 2686, 1563, 2633, 947, 2173,
	2630, 1566, 1566, 2143, 2679, 737, 739, 1378, 1379, 3172,
	3085, 2819, 1211, 724, 3278, 2759, 2558, 2656, 2732, 513,
	2228, 2039, 1626, 2021, 1558, 2475, 3295, 2387, 2388, 1563,
	205, 1449, 1566, 1381, 2675, 2667, 2669, 2670, 1378, 1379,
	2687, 2764, 205, 1380, 2682, 2113, 2112, 1289, 1026, 2671,
	2113, 725, 1288, 2480, 2114, 1973, 1946, 2884, 1329, 1380,
	2748, 1328, 2663, 1447, 2753, 205, 2697, 1445, 3303, 2025,
	2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025,
	2025, 2025, 2025, 2025, 2025, 2025, 2025, 2025, 2689, 2025,
	2724, 3044, 3000, 2846, 2822, 2814, 2813, 2725, 1861, 2690,
	2812, 2787, 2600, 139, 2571, 2569, 2699, 2238, 205, 2738,
	2739, 2741, 2214, 2762, 2736, 2761, 1861, 2700, 2733, 2191,
	2798, 1933, 1768, 1767, 1766, 1748, 1727, 1726, 1722, 1721,
	1720, 1718, 1717, 1362, 1341, 2744, 1340, 1323, 1319, 2807,
	205, 205, 1316, 205, 1302, 1239, 1238, 2728, 1237, 1236,
	1235, 1234, 1233, 1232, 1026, 205, 967, 1590, 2767, 1127,
	2755, 1230, 1225, 1224, 2802, 1223, 1222, 1221, 1184, 1183,
	1182, 1181, 2776, 2809, 1180, 2789, 205, 2791, 1179, 1173,
	1167, 1165, 1164, 993, 992, 920, 832, 2842, 1629, 205,
	205, 1127, 1127, 1127, 2769, 205, 205, 205, 2816, 205,
	205, 2834, 745, 2803, 1590, 1590, 205, 2835, 2151, 2830,
	2796, 2831, 600, 729, 3060, 2864, 1335, 75, 1175, 1026,
	588, 2234, 1590, 1590, 69, 1563, 2786, 2825, 3182, 719,
	2514, 1811, 1303, 1737, 1813, 2447, 2821, 2060, 2853, 3165,
	2892, 2818, 2357, 3119, 3026, 1970, 1466, 2832, 71, 820,
	2882, 902, 2843, 1590, 2836, 2934, 2775, 963, 2264, 2263,
	1029, 1638, 1734, 1566, 205, 963, 963, 2844, 2878, 963,
	2849, 2856, 1563, 1563, 2848, 826, 2858, 2854, 2855, 1651,
	2000, 2859, 1562, 829, 2869, 1564, 965, 980, 2431, 831,
	1563, 1563, 2870, 963, 965, 965, 653, 830, 965, 1565,
	2850, 2851, 2852, 1468, 828, 1561, 2204, 2232, 1219, 967,
	709, 1642, 1927, 1965, 2352, 1463, 801, 991, 822, 1962,
	986, 1563, 965, 205, 538, 800, 2452, 2585, 2758, 2995,
	1847, 2292, 1844, 1026, 964, 1026, 603, 2384, 1947, 978,
	203, 2026, 203, 203, 2019, 1132, 2015, 203, 1349, 1438,
	2233, 205, 205, 205, 1016, 562, 1146, 804, 1925, 1454,
	2326, 1518, 2463, 205, 2594, 2094, 1855, 944, 943, 205,
	942, 205, 3188, 2905, 205, 205, 205, 205, 205, 3185,
	1170, 2863, 1632, 2107, 1430, 205, 205, 1127, 2952, 1026,
	816, 1127, 2432, 1191, 2916, 2917, 2930, 203, 203, 2620,
	1132, 2921, 2924, 2465, 2919, 205, 2922, 1189, 1026, 3134,
	2925, 1127, 203, 1429, 2961, 2976, 741, 2932, 3128, 1005,
	1227, 205, 2966, 1004, 2920, 2981, 1522, 2951, 1003, 2915,
	2499, 3300, 2783, 203, 203, 203, 203, 1132, 175, 2947,
	172, 205, 2021, 2021, 174, 538, 1026, 203, 173, 2800,
	967, 2548, 2918, 91, 2931, 2994, 2971, 1525, 38, 2983,
	37, 2991, 2975, 2992, 3007, 2944, 2590, 2982, 36, 18,
	967, 2993, 1026, 2962, 115, 1520, 114, 2582, 3001, 2998,
	2967, 2988, 113, 2999, 1590, 112, 2972, 964, 111, 110,
	1523, 109, 2953, 108, 107, 106, 2973, 105, 104, 103,
	102, 101, 100, 2963, 2964, 99, 2945, 1734, 1026, 3038,
	1521, 203, 98, 1024, 205, 3016, 205, 3018, 1026, 205,
	97, 96, 95, 1566, 94, 203, 3023, 205, 3034, 93,
	92, 35, 534, 3039, 3040, 531, 51, 50, 90, 3024,
	522, 3047, 89, 17, 2021, 2021, 2021, 34, 15, 55,
	205, 56, 1563, 14, 30, 31, 81, 80, 29, 16,
	28, 205, 26, 3042, 27, 2323, 2324, 205, 12, 9,
	3010, 8, 1127, 11, 1566, 3024, 13, 205, 3045, 3078,
	25, 1524, 144, 143, 74, 1864, 2025, 142, 3063, 73,
	141, 3086, 140, 72, 3088, 24, 3084, 10, 205, 23,
	3043, 136, 68, 138, 137, 65, 3077, 135, 3092, 134,
	66, 133, 132, 67, 3096, 3102, 3103, 205, 3046, 131,
	3097, 2834, 3090, 205, 3091, 2025, 3070, 3071, 964, 3098,
	22, 205, 6, 54, 7, 3011, 2623, 84, 85, 32,
	63, 62, 2940, 61, 21, 2941, 3125, 1566, 964, 53,
	20, 166, 3117, 3122, 165, 205, 205, 963, 3124, 164,
	3131, 2582, 3112, 163, 159, 158, 162, 2410, 2411, 2412,
	205, 1127, 160, 161, 157, 130, 205, 168, 167, 2943,
	1127, 1127, 155, 152, 151, 154, 965, 3159, 205, 3069,
	205, 2946, 3151, 156, 153, 150, 169, 3147, 129, 58,
	3138, 128, 127, 126, 3157, 3158, 3094, 125, 3169, 124,
	205, 3162, 2025, 205, 205, 57, 1026, 19, 3156, 1517,
	2, 3190, 3179, 3150, 205, 3145, 1, 0, 0, 0,
	489, 0, 3196, 0, 3198, 3191, 0, 3193, 0, 3184,
	0, 0, 0, 0, 1590, 3195, 3206, 3202, 0, 0,
	3192, 1534, 205, 966, 3200, 0, 203, 0, 3139, 0,
	3205, 0, 0, 0, 0, 0, 3216, 3217, 0, 1146,
	3219, 203, 1551, 3218, 0, 0, 0, 0, 3155, 562,
	1146, 507, 205, 1864, 562, 1146, 3243, 0, 0, 3232,
	538, 0, 2942, 0, 0, 1590, 3251, 3244, 3248, 3246,
	3253, 205, 0, 0, 3245, 0, 3247, 3252, 0, 0,
	963, 0, 1563, 3262, 3260, 0, 3259, 3163, 0, 3164,
	0, 0, 3190, 205, 3267, 3269, 3266, 2234, 3249, 3250,
	0, 2021, 2021, 0, 0, 3272, 0, 3274, 0, 965,
	0, 3276, 3180, 3277, 0, 0, 0, 0, 0, 3285,
	3284, 0, 1378, 1379, 0, 0, 3292, 0, 0, 3291,
	0, 3293, 0, 1563, 0, 0, 3294, 0, 1590, 787,
	0, 0, 0, 0, 0, 0, 0, 0, 1381, 0,
	0, 3298, 3299, 0, 0, 0, 0, 0, 0, 0,
	3312, 3313, 3304, 0, 3305, 3308, 3309, 3310, 0, 0,
	0, 0, 0, 0, 1380, 0, 0, 3317, 0, 3315,
	0, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	0, 2021, 0, 0, 0, 0, 1563, 562, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 963, 3271, 0, 2644, 2645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 963, 0, 0, 0, 0, 0, 0, 0, 0,
	965, 203, 203, 1386, 0, 0, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	965, 0, 0, 0, 0, 0, 0, 203, 0, 203,
	0, 203, 1408, 1409, 1410, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1769, 0, 0,
	0, 0, 0, 0, 2701, 2702, 2703, 2704, 2705, 2706,
	2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716,
	2717, 2718, 2719, 0, 2723, 0, 0, 0, 0, 0,
	0, 0, 0, 1401, 0, 1449, 0, 538, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1132, 203, 0,
	0, 0, 0, 0, 59, 0, 0, 0, 0, 0,
	538, 0, 0, 0, 0, 60, 203, 0, 0, 0,
	0, 562, 203, 0, 203, 0, 203, 0, 203, 64,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1827, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	522, 1402, 0, 0, 0, 0, 538, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 76, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 0, 0,
	0, 77, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1378, 1379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 78, 0,
	0, 0, 0, 0, 1381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1380, 0, 0, 787, 0, 0, 0, 787, 1400, 0,
	0, 0, 0, 0, 0, 0, 0, 1391, 1389, 1390,
	1382, 1383, 1384, 1385, 1387, 1388, 0, 0, 0, 1378,
	1379, 0, 1411, 1412, 1413, 1421, 1422, 1423, 0, 1148,
	0, 1152, 0, 1158, 0, 0, 0, 0, 1414, 0,
	0, 489, 0, 2647, 0, 1381, 0, 0, 1427, 0,
	0, 0, 0, 0, 0, 0, 966, 0, 0, 1403,
	1404, 1405, 1406, 79, 0, 0, 489, 0, 0, 1386,
	0, 1380, 0, 966, 0, 489, 0, 0, 203, 1400,
	0, 0, 0, 0, 0, 0, 1397, 0, 0, 0,
	0, 0, 0, 0, 145, 82, 0, 83, 1408, 1409,
	1410, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 176, 0, 0, 0,
	0, 1278, 0, 0, 0, 0, 0, 0, 649, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	1403, 1404, 1405, 1406, 0, 0, 0, 0, 0, 1401,
	1386, 0, 0, 0, 178, 0, 0, 0, 0, 507,
	0, 0, 0, 555, 0, 0, 0, 0, 2021, 0,
	0, 0, 0, 0, 0, 1418, 1428, 117, 0, 1408,
	1409, 1410, 0, 0, 0, 555, 0, 0, 0, 149,
	0, 0, 0, 0, 0, 2129, 0, 177, 0, 0,
	1424, 1425, 0, 203, 0, 0, 170, 2021, 1395, 1396,
	0, 59, 0, 203, 171, 0, 0, 0, 0, 1407,
	0, 0, 60, 1416, 0, 0, 203, 0, 0, 0,
	1401, 0, 0, 0, 0, 148, 64, 1402, 0, 0,
	0, 203, 0, 0, 0, 562, 2184, 1426, 0, 0,
	1431, 1432, 1433, 1434, 1435, 0, 0, 0, 0, 0,
	1415, 0, 0, 0, 0, 0, 70, 0, 0, 0,
	0, 203, 1146, 0, 0, 203, 0, 0, 0, 1451,
	0, 0, 0, 0, 0, 1464, 0, 0, 0, 0,
	1753, 3031, 0, 0, 2021, 76, 0, 2129, 0, 489,
	1407, 2237, 0, 0, 86, 0, 0, 203, 77, 0,
	203, 0, 203, 0, 203, 0, 203, 203, 1402, 1132,
	0, 0, 0, 0, 0, 0, 0, 0, 2256, 653,
	3055, 2129, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 1419, 0, 78, 0, 0, 1146, 0,
	1146, 0, 0, 1391, 1389, 1390, 1382, 1383, 1384, 1385,
	1387, 1388, 0, 0, 0, 0, 0, 0, 203, 203,
	203, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	856, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 1511, 1511, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3116, 0, 0,
	0, 0, 0, 0, 1417, 0, 0, 1392, 1393, 1399,
	1398, 1394, 1420, 0, 1391, 1389, 1390, 1382, 1383, 1384,
	1385, 1387, 1388, 0, 0, 0, 0, 2373, 0, 0,
	79, 2374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 82, 0, 83, 0, 0, 0, 959, 0,
	0, 0, 0, 0, 1146, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 649, 0, 0, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 966,
	0, 0, 0, 0, 177, 0, 0, 966, 966, 0,
	0, 966, 0, 170, 0, 0, 489, 0, 0, 489,
	0, 171, 0, 0, 0, 0, 489, 0, 0, 489,
	489, 0, 0, 0, 0, 1534, 0, 0, 0, 0,
	0, 0, 148, 0, 0, 1146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1146, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1027, 0,
	0, 1128, 0, 1027, 203, 2129, 2495, 0, 0, 0,
	2129, 0, 0, 2495, 0, 0, 0, 0, 0, 0,
	2129, 2495, 2129, 2495, 2495, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 203, 0, 0, 0, 0,
	0, 0, 1551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1128, 1128, 203, 0, 0, 1132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2552, 0, 0, 2554,
	2557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 1128, 1128, 0, 0, 0,
	1128, 203, 0, 1128, 0, 0, 0, 1132, 0, 0,
	0, 0, 2129, 0, 489, 0, 0, 0, 0, 0,
	0, 2129, 0, 0, 0, 0, 0, 0, 0, 0,
	1378, 1379, 0, 0, 0, 0, 1421, 1422, 1423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1128, 0,
	0, 0, 1753, 0, 0, 1753, 1381, 0, 0, 1427,
	0, 0, 0, 0, 0, 0, 0, 2628, 0, 1132,
	203, 0, 203, 0, 0, 0, 0, 1845, 0, 1850,
	0, 0, 1380, 0, 0, 1857, 0, 0, 203, 0,
	1400, 0, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 0, 1906, 0,
	1908, 1909, 1910, 1911, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2684, 0, 0, 0, 0, 0,
	1935, 1403, 1404, 1405, 1406, 0, 0, 0, 0, 0,
	0, 1386, 0, 0, 0, 1451, 0, 0, 0, 1960,
	0, 0, 0, 0, 0, 0, 1028, 0, 0, 1129,
	0, 1028, 0, 0, 0, 0, 1418, 1428, 0, 0,
	1408, 1409, 1410, 0, 0, 0, 0, 1990, 1991, 1992,
	1993, 1994, 1995, 1996, 0, 0, 0, 0, 0, 0,
	2017, 0, 2028, 2030, 2035, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 966,
	1129, 1129, 0, 0, 1416, 489, 0, 0, 0, 0,
	0, 1401, 0, 0, 0, 0, 0, 489, 0, 0,
	0, 0, 2387, 2388, 0, 2405, 2406, 2407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1146, 2874, 0, 1129, 1129, 0, 0, 0, 1129, 0,
	0, 1129, 0, 1021, 0, 0, 0, 0, 0, 0,
	1139, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 2402, 538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1129, 1027, 0, 1402,
	0, 0, 0, 0, 0, 1128, 555, 0, 0, 0,
	0, 555, 0, 0, 0, 203, 203, 0, 203, 0,
	0, 0, 0, 0, 1419, 1220, 0, 0, 0, 0,
	203, 821, 88, 0, 0, 0, 0, 0, 0, 0,
	1027, 0, 0, 0, 0, 0, 1243, 1243, 1243, 1139,
	0, 2129, 966, 2393, 0, 0, 0, 0, 0, 0,
	1274, 0, 0, 0, 2256, 2256, 0, 0, 0, 0,
	653, 653, 2129, 0, 1753, 1753, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2186, 0, 2188, 0, 0, 0, 0,
	0, 0, 0, 2408, 0, 1417, 0, 0, 0, 88,
	0, 0, 0, 1420, 0, 1391, 1389, 1390, 1382, 1383,
	1384, 1385, 1387, 1388, 1334, 0, 0, 0, 0, 0,
	0, 0, 0, 2403, 0, 0, 0, 0, 0, 2893,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1128, 0, 0, 0, 0, 0, 0,
	1027, 762, 0, 0, 0, 0, 0, 0, 0, 0,
	782, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 966, 0, 0, 0, 0, 1146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	954, 88, 0, 1534, 0, 0, 0, 0, 0, 0,
	0, 2404, 0, 0, 0, 0, 2129, 2495, 2129, 2387,
	2388, 0, 2405, 2406, 2407, 0, 0, 0, 1146, 0,
	0, 0, 0, 0, 2129, 0, 2495, 0, 2653, 1146,
	1146, 203, 2129, 2495, 0, 0, 0, 0, 0, 0,
	203, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1028, 0, 0, 0, 0,
	2985, 2306, 2307, 1129, 0, 0, 0, 2313, 0, 2402,
	0, 0, 0, 1128, 0, 1128, 2129, 0, 0, 0,
	1128, 0, 0, 0, 0, 0, 2327, 2328, 0, 0,
	0, 0, 1960, 0, 1128, 1128, 1146, 0, 1028, 0,
	0, 2335, 0, 0, 0, 0, 0, 0, 555, 0,
	2399, 2400, 2401, 0, 0, 0, 0, 2398, 2396, 2397,
	2389, 2390, 2391, 2392, 2394, 2395, 0, 2355, 0, 0,
	0, 0, 0, 0, 0, 1378, 1379, 0, 0, 2368,
	2393, 0, 0, 0, 0, 0, 0, 0, 0, 1541,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1381, 0, 0, 1549, 0, 0, 0, 0, 2129,
	0, 2495, 0, 0, 3049, 0, 0, 0, 0, 0,
	0, 0, 203, 1027, 0, 0, 0, 1380, 0, 0,
	2408, 2035, 2035, 2035, 0, 1400, 0, 0, 0, 0,
	0, 0, 1511, 0, 0, 538, 0, 0, 0, 0,
	2437, 0, 0, 0, 0, 0, 2557, 0, 0, 0,
	2403, 1129, 203, 0, 0, 0, 0, 0, 1028, 0,
	0, 0, 1146, 0, 0, 0, 0, 0, 0, 0,
	2642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 1403, 1404, 1405, 1406,
	0, 0, 0, 787, 0, 0, 1386, 0, 1027, 0,
	0, 0, 2684, 0, 0, 787, 0, 0, 489, 0,
	0, 0, 0, 0, 0, 0, 3049, 0, 0, 0,
	0, 0, 0, 0, 0, 1408, 1409, 1410, 0, 0,
	2517, 0, 0, 0, 0, 0, 0, 0, 2404, 0,
	2129, 2495, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 2495, 1027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1146, 0, 1146, 1401, 0, 1027, 0,
	0, 1129, 0, 1129, 0, 0, 0, 0, 1129, 0,
	0, 1378, 1379, 0, 0, 3177, 0, 0, 1146, 203,
	0, 0, 1129, 1129, 1729, 0, 0, 0, 0, 203,
	0, 1740, 88, 2583, 88, 0, 88, 1381, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1220, 0, 1759, 0, 1759, 0, 0, 2684, 0, 0,
	0, 0, 0, 1380, 0, 0, 1407, 2399, 2400, 2401,
	0, 1400, 0, 0, 2398, 2396, 2397, 2389, 2390, 2391,
	2392, 2394, 2395, 0, 1402, 0, 0, 2129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2635, 0, 3049, 1027, 1857, 782,
	88, 1028, 0, 0, 2639, 2640, 2641, 88, 2643, 0,
	0, 1799, 2646, 0, 88, 0, 0, 0, 1146, 0,
	0, 2650, 1403, 1404, 1405, 1406, 0, 0, 0, 1810,
	2657, 0, 1386, 2437, 0, 1816, 1128, 1817, 0, 1818,
	0, 1819, 0, 1820, 0, 0, 0, 0, 0, 1027,
	0, 0, 0, 0, 2677, 0, 0, 0, 0, 0,
	0, 1408, 1409, 1410, 1830, 0, 0, 0, 0, 0,
	0, 2691, 2692, 0, 2693, 2694, 2695, 0, 0, 2696,
	0, 0, 0, 0, 0, 2698, 1028, 0, 0, 0,
	1391, 1389, 1390, 1382, 1383, 1384, 1385, 1387, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1401, 0, 0, 0, 2726, 2727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1128, 1128, 1128,
	0, 1128, 0, 0, 0, 0, 762, 0, 0, 0,
	0, 0, 2743, 0, 0, 0, 0, 123, 0, 0,
	1028, 0, 0, 59, 1441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 60, 118, 1028, 0, 0, 0,
	0, 1450, 0, 0, 0, 1456, 0, 0, 64, 0,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 40, 120, 0, 0, 0, 0, 0,
	1402, 0, 0, 2777, 2780, 0, 39, 0, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2799, 0, 42, 0,
	0, 0, 43, 0, 0, 0, 0, 76, 0, 0,
	121, 0, 0, 0, 0, 41, 86, 0, 0, 0,
	77, 44, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2078, 0, 0, 0, 1028, 0, 45, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 78, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2845, 0, 0,
	0, 0, 0, 0, 88, 0, 0, 1532, 0, 1535,
	0, 0, 0, 0, 1129, 0, 1391, 1389, 1390, 1382,
	1383, 1384, 1385, 1387, 1388, 0, 0, 1028, 1378, 1379,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2871, 2872, 0, 0, 0, 0, 2876, 2877, 0,
	0, 0, 2880, 2881, 1381, 0, 0, 0, 0, 2885,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2890, 0,
	1380, 0, 0, 0, 0, 2894, 0, 1027, 1400, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 46,
	0, 0, 0, 0, 0, 1129, 1129, 1129, 0, 1129,
	0, 0, 0, 0, 0, 0, 0, 0, 1027, 0,
	0, 0, 49, 145, 82, 0, 83, 1027, 47, 0,
	0, 0, 122, 2312, 1139, 0, 0, 0, 48, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 1403,
	1404, 1405, 1406, 0, 0, 0, 0, 52, 0, 1386,
	116, 0, 0, 0, 2202, 0, 0, 0, 1740, 119,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2780, 0, 178, 0, 0, 0, 0, 1408, 1409,
	1410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2239, 0, 0, 1243, 0, 1243, 117, 1243, 0, 1139,
	1139, 0, 1128, 0, 0, 0, 0, 0, 149, 0,
	1027, 0, 0, 0, 0, 0, 177, 0, 1027, 0,
	2274, 0, 0, 0, 0, 170, 0, 0, 0, 1401,
	0, 0, 0, 171, 0, 0, 0, 0, 1128, 0,
	0, 1128, 1128, 1128, 0, 0, 0, 2780, 0, 0,
	0, 2287, 1139, 2289, 148, 0, 0, 4, 0, 0,
	0, 1378, 1379, 3019, 3020, 3021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2303, 0,
	0, 0, 0, 0, 0, 0, 0, 1381, 0, 3029,
	3030, 1128, 1128, 0, 0, 0, 0, 0, 0, 1407,
	0, 0, 0, 3037, 0, 0, 0, 0, 0, 0,
	0, 0, 782, 1380, 0, 1027, 0, 1402, 1027, 0,
	0, 1400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2780, 0, 0, 0, 0, 0, 0, 0, 3068, 0,
	0, 0, 0, 0, 0, 1028, 0, 0, 0, 0,
	787, 0, 0, 0, 0, 0, 2305, 3080, 0, 0,
	0, 0, 0, 0, 2780, 0, 0, 2780, 1027, 0,
	0, 0, 1403, 1404, 1405, 1406, 1028, 0, 0, 1027,
	0, 0, 1386, 0, 0, 1028, 0, 0, 2780, 2780,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 762, 0, 0, 762, 762, 0, 0, 0,
	0, 1408, 1409, 1410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1391, 1389, 1390, 1382, 1383, 1384, 1385,
	1387, 1388, 0, 0, 3127, 0, 0, 3130, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1924, 0, 1401, 0, 0, 0, 0, 0, 0, 0,
	1129, 0, 0, 0, 782, 0, 0, 0, 1028, 0,
	0, 0, 0, 0, 0, 0, 1028, 1450, 0, 0,
	1027, 1450, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1129, 0, 0, 1129,
	1129, 1129, 0, 59, 0, 0, 0, 0, 0, 0,
	0, 787, 0, 0, 60, 0, 0, 2492, 0, 0,
	0, 0, 1407, 0, 0, 0, 0, 0, 64, 0,
	0, 0, 0, 0, 0, 0, 3215, 3215, 3215, 0,
	1402, 0, 954, 0, 0, 0, 0, 2529, 2202, 1129,
	1129, 0, 0, 3233, 0, 0, 0, 0, 70, 1535,
	0, 0, 0, 0, 0, 0, 0, 2780, 0, 2780,
	0, 0, 0, 1028, 0, 0, 1028, 0, 0, 0,
	88, 0, 3215, 0, 0, 0, 1027, 76, 0, 0,
	0, 1128, 0, 0, 0, 0, 86, 0, 0, 0,
	77, 0, 0, 0, 0, 2565, 0, 0, 0, 0,
	0, 0, 0, 0, 2572, 0, 0, 0, 0, 0,
	0, 0, 0, 1128, 1128, 1128, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1028, 78, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1028, 3215, 0,
	0, 1027, 0, 0, 0, 0, 1391, 1389, 1390, 1382,
	1383, 1384, 1385, 1387, 1388, 0, 0, 0, 0, 0,
	1378, 1379, 0, 1411, 1412, 1413, 1421, 1422, 1423, 0,
	0, 0, 0, 2631, 0, 1139, 0, 0, 0, 1414,
	0, 88, 0, 0, 0, 0, 1381, 0, 0, 1427,
	0, 2637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 1380, 0, 0, 0, 0, 0, 0, 0,
	1400, 0, 0, 0, 0, 0, 88, 1397, 88, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1028, 0,
	0, 0, 0, 0, 0, 1027, 0, 1027, 0, 0,
	0, 0, 0, 145, 82, 0, 83, 0, 0, 0,
	88, 0, 88, 0, 0, 0, 0, 0, 0, 0,
	0, 1403, 1404, 1405, 1406, 176, 0, 0, 0, 0,
	0, 1386, 0, 0, 0, 0, 0, 649, 0, 88,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 1128,
	0, 1027, 0, 1128, 0, 0, 1418, 1428, 0, 0,
	1408, 1409, 1410, 178, 0, 0, 0, 0, 0, 0,
	1027, 0, 0, 1128, 0, 0, 0, 0, 0, 0,
	0, 1424, 1425, 0, 0, 0, 117, 0, 0, 1395,
	1396, 0, 0, 0, 1028, 0, 0, 0, 149, 1129,
	0, 0, 0, 0, 1416, 0, 177, 0, 1027, 0,
	0, 1401, 0, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 1426, 0,
	0, 1129, 1129, 1129, 1027, 0, 0, 0, 0, 0,
	0, 1415, 0, 0, 1270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1924, 0, 1028,
	0, 0, 0, 2387, 2388, 0, 2405, 2406, 2407, 0,
	1027, 0, 0, 0, 0, 0, 0, 0, 1450, 0,
	1027, 1407, 2652, 0, 0, 0, 0, 0, 2817, 0,
	0, 2820, 0, 0, 0, 0, 0, 0, 0, 1402,
	0, 0, 0, 2826, 0, 0, 0, 0, 0, 2387,
	2388, 0, 2405, 2406, 2407, 0, 0, 0, 0, 0,
	0, 0, 0, 2402, 1419, 0, 0, 0, 0, 0,
	0, 0, 1378, 1379, 1128, 1411, 1412, 1413, 1421, 1422,
	1423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1414, 0, 0, 2862, 0, 0, 0, 1381, 0,
	0, 1427, 0, 0, 0, 0, 0, 0, 0, 2402,
	0, 0, 0, 1028, 0, 1028, 0, 0, 0, 0,
	0, 0, 0, 0, 1380, 0, 0, 0, 0, 0,
	0, 0, 1400, 0, 2393, 954, 0, 0, 0, 1397,
	0, 0, 0, 954, 954, 1417, 0, 954, 1392, 1393,
	1399, 1398, 1394, 1420, 0, 1391, 1389, 1390, 1382, 1383,
	1384, 1385, 1387, 1388, 0, 0, 0, 1129, 1956, 1028,
	0, 1129, 1957, 1128, 0, 0, 0, 0, 0, 0,
	2393, 0, 1128, 1128, 2408, 0, 0, 0, 1028, 0,
	0, 1129, 0, 1403, 1404, 1405, 1406, 0, 1378, 1379,
	0, 0, 0, 1386, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2403, 0, 0, 0, 1027, 0,
	0, 0, 0, 0, 1381, 0, 1028, 0, 1418, 1428,
	2408, 0, 1408, 1409, 1410, 88, 0, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1380, 0, 1028, 1424, 1425, 0, 0, 0, 1400, 0,
	2403, 1395, 1396, 0, 2965, 88, 0, 88, 0, 0,
	0, 0, 0, 2202, 0, 0, 1416, 0, 0, 0,
	0, 0, 0, 1401, 0, 0, 0, 0, 1028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1028, 0,
	1426, 0, 2404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1415, 0, 0, 0, 0, 782, 1403,
	1404, 1405, 1406, 0, 0, 0, 0, 0, 0, 1386,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 88, 0, 0, 0, 0, 2404, 0,
	0, 0, 1129, 1407, 0, 0, 0, 0, 1408, 1409,
	1410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1401,
	0, 2399, 2400, 2401, 0, 3056, 0, 0, 2398, 2396,
	2397, 2389, 2390, 2391, 2392, 2394, 2395, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1129, 0, 0, 0, 3087, 0, 2399, 2400, 2401,
	1129, 1129, 0, 0, 2398, 2396, 2397, 2389, 2390, 2391,
	2392, 2394, 2395, 0, 0, 0, 0, 1417, 0, 1407,
	1392, 1393, 1399, 1398, 1394, 1420, 3110, 1391, 1389, 1390,
	1382, 1383, 1384, 1385, 1387, 1388, 1028, 1402, 0, 0,
	0, 0, 0, 0, 2899, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3149, 0,
	0, 0, 0, 0, 0, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3194, 1391, 1389, 1390, 1382, 1383, 1384, 1385,
	1387, 1388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 0, 0, 0, 0, 0, 0, 0, 783, 0,
	204, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 208, 209, 210,
	211, 0, 212, 0, 0, 0, 0, 442, 954, 0,
	0, 0, 213, 214, 215, 443, 444, 216, 445, 217,
	218, 446, 0, 219, 220, 221, 222, 223, 224, 0,
	0, 225, 447, 448, 449, 0, 226, 450, 0, 0,
	0, 227, 228, 229, 230, 231, 0, 233, 234, 235,
	232, 0, 236, 0, 237, 238, 239, 0, 0, 240,
	241, 0, 0, 0, 0, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 451, 452, 0, 248, 0, 249,
	0, 250, 0, 0, 251, 252, 253, 0, 254, 0,
	255, 256, 0, 453, 257, 258, 260, 263, 259, 264,
	265, 266, 454, 455, 0, 0, 0, 0, 0, 0,
	0, 267, 268, 269, 456, 270, 271, 0, 272, 0,
	273, 0, 0, 0, 274, 275, 0, 276, 457, 0,
	458, 277, 0, 278, 279, 280, 281, 282, 283, 459,
	460, 461, 0, 0, 465, 285, 0, 0, 0, 954,
	284, 286, 293, 0, 0, 287, 462, 289, 288, 290,
	291, 292, 463, 0, 464, 0, 294, 0, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 300, 301, 302,
	303, 0, 305, 304, 0, 306, 466, 0, 307, 308,
	0, 0, 309, 310, 0, 0, 311, 0, 312, 313,
	0, 0, 314, 315, 317, 318, 316, 0, 319, 320,
	322, 321, 0, 0, 0, 0, 467, 468, 323, 324,
	0, 325, 326, 0, 0, 328, 329, 0, 0, 330,
	469, 88, 331, 0, 470, 332, 327, 333, 334, 335,
	336, 337, 338, 0, 339, 471, 340, 472, 341, 0,
	342, 88, 343, 344, 345, 346, 347, 348, 473, 349,
	350, 0, 351, 352, 353, 354, 355, 0, 357, 358,
	359, 356, 360, 361, 362, 363, 0, 364, 0, 365,
	366, 367, 368, 474, 369, 0, 370, 374, 375, 376,
	377, 378, 379, 380, 176, 387, 388, 381, 383, 384,
	385, 382, 386, 389, 390, 0, 391, 371, 372, 392,
	0, 393, 475, 394, 395, 0, 405, 396, 397, 398,
	373, 399, 403, 404, 400, 401, 402, 476, 0, 407,
	408, 406, 178, 409, 410, 411, 412, 413, 261, 414,
	262, 415, 0, 477, 478, 479, 416, 0, 0, 417,
	418, 480, 419, 481, 0, 420, 421, 422, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 430, 0, 431,
	0, 429, 432, 433, 434, 1268, 483, 0, 436, 435,
	484, 0, 0, 0, 170, 437, 438, 485, 439, 440,
	441, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 1924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1025, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 208, 209, 210, 211, 1031, 212, 1032, 1033, 1034,
	1035, 442, 1036, 1037, 1038, 1039, 213, 214, 215, 443,
	444, 216, 445, 217, 218, 446, 1040, 219, 220, 221,
	222, 223, 224, 1041, 1042, 225, 447, 448, 449, 1043,
	226, 450, 1044, 1030, 1045, 227, 228, 229, 230, 231,
	0, 233, 234, 235, 232, 1046, 236, 88, 237, 238,
	239, 1047, 904, 240, 241, 1048, 1049, 1051, 1050, 1052,
	1053, 1054, 242, 243, 244, 245, 246, 247, 451, 452,
	1055, 248, 1056, 249, 1057, 250, 1058, 1059, 251, 252,
	253, 1060, 254, 1061, 255, 256, 1062, 453, 257, 258,
	260, 263, 259, 264, 265, 266, 454, 455, 1063, 905,
	1064, 0, 0, 0, 0, 267, 268, 269, 456, 270,
	271, 0, 272, 1065, 273, 1066, 1067, 906, 274, 275,
	1068, 276, 457, 1069, 458, 277, 1070, 278, 279, 280,
	281, 282, 283, 459, 460, 461, 908, 1071, 465, 285,
	0, 0, 0, 1072, 284, 286, 293, 1073, 907, 287,
	462, 289, 288, 290, 291, 292, 463, 1074, 464, 1075,
	294, 909, 910, 295, 296, 297, 911, 298, 299, 0,
	0, 300, 301, 302, 303, 1076, 305, 304, 1077, 306,
	466, 912, 307, 308, 913, 1078, 309, 310, 1079, 1080,
	311, 0, 312, 313, 970, 969, 314, 315, 317, 318,
	316, 914, 319, 320, 322, 321, 1081, 1082, 915, 1083,
	467, 468, 323, 324, 1084, 325, 326, 1085, 1086, 328,
	329, 1087, 1088, 330, 469, 916, 331, 917, 470, 332,
	327, 333, 334, 335, 336, 337, 338, 1089, 339, 471,
	340, 472, 341, 1090, 342, 0, 343, 344, 345, 346,
	347, 348, 473, 349, 350, 1091, 351, 352, 353, 354,
	355, 0, 357, 358, 359, 356, 360, 361, 362, 363,
	1092, 364, 918, 365, 366, 367, 368, 474, 369, 0,
	370, 374, 375, 376, 377, 378, 379, 380, 1093, 387,
	388, 381, 383, 384, 385, 382, 386, 389, 390, 1094,
	391, 371, 372, 392, 919, 393, 475, 394, 395, 1095,
	405, 396, 397, 398, 373, 399, 403, 404, 400, 401,
	402, 476, 1096, 407, 408, 406, 1097, 409, 410, 411,
	412, 413, 261, 414, 262, 415, 1098, 477, 478, 479,
	416, 1099, 1100, 417, 418, 480, 419, 481, 1101, 420,
	421, 422, 0, 423, 424, 1102, 1103, 425, 426, 427,
	428, 430, 1104, 431, 1105, 429, 432, 433, 434, 482,
	483, 1106, 436, 435, 484, 1107, 1108, 1109, 1110, 437,
	438, 485, 439, 440, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1025,
	0, 0, 0, 0, 0, 2065, 0, 0, 0, 0,
	0, 0, 0, 0, 2066, 207, 208, 209, 210, 211,
	1031, 212, 1032, 1033, 1034, 1035, 442, 1036, 1037, 1038,
	1039, 213, 214, 215, 443, 444, 216, 445, 217, 218,
	446, 1040, 219, 220, 221, 222, 223, 224, 1041, 1042,
	225, 447, 448, 449, 1043, 226, 450, 1044, 1030, 1045,
	227, 228, 229, 230, 231, 0, 233, 234, 235, 232,
	1046, 236, 0, 237, 238, 239, 1047, 904, 240, 241,
	1048, 1049, 1051, 1050, 1052, 1053, 1054, 242, 243, 244,
	245, 246, 247, 451, 452, 1055, 248, 1056, 249, 1057,
	250, 1058, 1059, 251, 252, 253, 1060, 254, 1061, 255,
	256, 1062, 453, 257, 258, 260, 263, 259, 264, 265,
	266, 454, 455, 1063, 905, 1064, 0, 0, 0, 0,
	267, 268, 269, 456, 270, 271, 0, 272, 1065, 273,
	1066, 1067, 906, 274, 275, 1068, 276, 457, 1069, 458,
	277, 1070, 278, 279, 280, 281, 282, 283, 459, 460,
	461, 908, 1071, 465, 285, 0, 0, 0, 1072, 284,
	286, 293, 1073, 907, 287, 462, 289, 288, 290, 291,
	292, 463, 1074, 464, 1075, 294, 909, 910, 295, 296,
	297, 911, 298, 299, 0, 0, 300, 301, 302, 303,
	1076, 305, 304, 1077, 306, 466, 912, 307, 308, 913,
	1078, 309, 310, 1079, 1080, 311, 0, 312, 313, 970,
	969, 314, 315, 317, 318, 316, 914, 319, 320, 322,
	321, 1081, 1082, 915, 1083, 467, 468, 323, 324, 1084,
	325, 326, 1085, 1086, 328, 329, 1087, 1088, 330, 469,
	916, 331, 917, 470, 332, 327, 333, 334, 335, 336,
	337, 338, 1089, 339, 471, 340, 472, 341, 1090, 342,
	0, 343, 344, 345, 346, 347, 348, 473, 349, 350,
	1091, 351, 352, 353, 354, 355, 0, 357, 358, 359,
	356, 360, 361, 362, 363, 1092, 364, 918, 365, 366,
	367, 368, 474, 369, 0, 370, 374, 375, 376, 377,
	378, 379, 380, 1093, 387, 388, 381, 383, 384, 385,
	382, 386, 389, 390, 1094, 391, 371, 372, 392, 919,
	393, 475, 394, 395, 1095, 405, 396, 397, 398, 373,
	399, 403, 404, 400, 401, 402, 476, 1096, 407, 408,
	406, 1097, 409, 410, 411, 412, 413, 261, 414, 262,
	415, 1098, 477, 478, 479, 416, 1099, 1100, 417, 418,
	480, 419, 481, 1101, 420, 421, 422, 0, 423, 424,
	1102, 1103, 425, 426, 427, 428, 430, 1104, 431, 1105,
	429, 432, 433, 434, 482, 483, 1106, 436, 435, 484,
	1107, 1108, 1109, 1110, 437, 438, 485, 439, 440, 441,
	0, 0, 0, 0, 0, 1025, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2923, 207, 208, 209, 210, 211, 1031, 212, 1032, 1033,
	1034, 1035, 442, 1036, 1037, 1038, 1039, 213, 214, 215,
	443, 444, 216, 445, 217, 218, 446, 1040, 219, 220,
	221, 222, 223, 224, 1041, 1042, 225, 447, 448, 449,
	1043, 226, 450, 1044, 1030, 1045, 227, 228, 229, 230,
	231, 0, 233, 234, 235, 232, 1046, 236, 0, 237,
	238, 239, 1047, 904, 240, 241, 1048, 1049, 1051, 1050,
	1052, 1053, 1054, 242, 243, 244, 245, 246, 247, 451,
	452, 1055, 248, 1056, 249, 1057, 250, 1058, 1059, 251,
	252, 253, 1060, 254, 1061, 255, 256, 1062, 453, 257,
	258, 260, 263, 259, 264, 265, 266, 454, 455, 1063,
	905, 1064, 0, 0, 0, 0, 267, 268, 269, 456,
	270, 271, 0, 272, 1065, 273, 1066, 1067, 906, 274,
	275, 1068, 276, 457, 1069, 458, 277, 1070, 278, 279,
	280, 281, 282, 283, 459, 460, 461, 908, 1071, 465,
	285, 0, 0, 0, 1072, 284, 286, 293, 1073, 907,
	287, 462, 289, 288, 290, 291, 292, 463, 1074, 464,
	1075, 294, 909, 910, 295, 296, 297, 911, 298, 299,
	0, 0, 300, 301, 302, 303, 1076, 305, 304, 1077,
	306, 466, 912, 307, 308, 913, 1078, 309, 310, 1079,
	1080, 311, 0, 312, 313, 970, 969, 314, 315, 317,
	318, 316, 914, 319, 320, 322, 321, 1081, 1082, 915,
	1083, 467, 468, 323, 324, 1084, 325, 326, 1085, 1086,
	328, 329, 1087, 1088, 330, 469, 916, 331, 917, 470,
	332, 327, 333, 334, 335, 336, 337, 338, 1089, 339,
	471, 340, 472, 341, 1090, 342, 0, 343, 344, 345,
	346, 347, 348, 473, 349, 350, 1091, 351, 352, 353,
	354, 355, 0, 357, 358, 359, 356, 360, 361, 362,
	363, 1092, 364, 918, 365, 366, 367, 368, 474, 369,
	0, 370, 374, 375, 376, 377, 378, 379, 380, 1093,
	387, 388, 381, 383, 384, 385, 382, 386, 389, 390,
	1094, 391, 371, 372, 392, 919, 393, 475, 394, 395,
	1095, 405, 396, 397, 398, 373, 399, 403, 404, 400,
	401, 402, 476, 1096, 407, 408, 406, 1097, 409, 410,
	411, 412, 413, 261, 414, 262, 415, 1098, 477, 478,
	479, 416, 1099, 1100, 417, 418, 480, 419, 481, 1101,
	420, 421, 422, 0, 423, 424, 1102, 1103, 425, 426,
	427, 428, 430, 1104, 431, 1105, 429, 432, 433, 434,
	482, 483, 1106, 436, 435, 484, 1107, 1108, 1109, 1110,
	437, 438, 485, 439, 440, 441, 1025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3025, 207, 208, 209, 210, 211, 1031, 212, 1032,
	1033, 1034, 1035, 442, 1036, 1037, 1038, 1039, 213, 214,
	215, 443, 444, 216, 445, 217, 218, 446, 1040, 219,
	220, 221, 222, 223, 224, 1041, 1042, 225, 447, 448,
	449, 1043, 226, 450, 1044, 1030, 1045, 227, 228, 229,
	230, 231, 0, 233, 234, 235, 232, 1046, 236, 0,
	237, 238, 239, 1047, 904, 240, 241, 1048, 1049, 1051,
	1050, 1052, 1053, 1054, 242, 243, 244, 245, 246, 247,
	451, 452, 1055, 248, 1056, 249, 1057, 250, 1058, 1059,
	251, 252, 253, 1060, 254, 1061, 255, 256, 1062, 453,
	257, 258, 260, 263, 259, 264, 265, 266, 454, 455,
	1063, 905, 1064, 0, 0, 0, 0, 267, 268, 269,
	456, 270, 271, 0, 272, 1065, 273, 1066, 1067, 906,
	274, 275, 1068, 276, 457, 1069, 458, 277, 1070, 278,
	279, 280, 281, 282, 283, 459, 460, 461, 908, 1071,
	465, 285, 0, 0, 0, 1072, 284, 286, 293, 1073,
	907, 287, 462, 289, 288, 290, 291, 292, 463, 1074,
	464, 1075, 294, 909, 910, 295, 296, 297, 911, 298,
	299, 0, 0, 300, 301, 302, 303, 1076, 305, 304,
	1077, 306, 466, 912, 307, 308, 913, 1078, 309, 310,
	1079, 1080, 311, 0, 312, 313, 970, 969, 314, 315,
	317, 318, 316, 914, 319, 320, 322, 321, 1081, 1082,
	915, 1083, 467, 468, 323, 324, 1084, 325, 326, 1085,
	1086, 328, 329, 1087, 1088, 330, 469, 916, 331, 917,
	470, 332, 327, 333, 334, 335, 336, 337, 338, 1089,
	339, 471, 340, 472, 341, 1090, 342, 0, 343, 344,
	345, 346, 347, 348, 473, 349, 350, 1091, 351, 352,
	353, 354, 355, 0, 357, 358, 359, 356, 360, 361,
	362, 363, 1092, 364, 918, 365, 366, 367, 368, 474,
	369, 0, 370, 374, 375, 376, 377, 378, 379, 380,
	1093, 387, 388, 381, 383, 384, 385, 382, 386, 389,
	390, 1094, 391, 371, 372, 392, 919, 393, 475, 394,
	395, 1095, 405, 396, 397, 398, 373, 399, 403, 404,
	400, 401, 402, 476, 1096, 407, 408, 406, 1097, 409,
	410, 411, 412, 413, 261, 414, 262, 415, 1098, 477,
	478, 479, 416, 1099, 1100, 417, 418, 480, 419, 481,
	1101, 420, 421, 422, 0, 423, 424, 1102, 1103, 425,
	426, 427, 428, 430, 1104, 431, 1105, 429, 432, 433,
	434, 482, 483, 1106, 436, 435, 484, 1107, 1108, 1109,
	1110, 437, 438, 485, 439, 440, 441, 1025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2680, 207, 208, 209, 210, 211, 1031, 212,
	1032, 1033, 1034, 1035, 442, 1036, 1037, 1038, 1039, 213,
	214, 215, 443, 444, 216, 445, 217, 218, 446, 1040,
	219, 220, 221, 222, 223, 224, 1041, 1042, 225, 447,
	448, 449, 1043, 226, 450, 1044, 1030, 1045, 227, 228,
	229, 230, 231, 0, 233, 234, 235, 232, 1046, 236,
	0, 237, 238, 239, 1047, 904, 240, 241, 1048, 1049,
	1051, 1050, 1052, 1053, 1054, 242, 243, 244, 245, 246,
	247, 451, 452, 1055, 248, 1056, 249, 1057, 250, 1058,
	1059, 251, 252, 253, 1060, 254, 1061, 255, 256, 1062,
	453, 257, 258, 260, 263, 259, 264, 265, 266, 454,
	455, 1063, 905, 1064, 0, 0, 0, 0, 267, 268,
	269, 456, 270, 271, 0, 272, 1065, 273, 1066, 1067,
	906, 274, 275, 1068, 276, 457, 1069, 458, 277, 1070,
	278, 279, 280, 281, 282, 283, 459, 460, 461, 908,
	1071, 465, 285, 0, 0, 0, 1072, 284, 286, 293,
	1073, 907, 287, 462, 289, 288, 290, 291, 292, 463,
	1074, 464, 1075, 294, 909, 910, 295, 296, 297, 911,
	298, 299, 0, 0, 300, 301, 302, 303, 1076, 305,
	304, 1077, 306, 466, 912, 307, 308, 913, 1078, 309,
	310, 1079, 1080, 311, 0, 312, 313, 970, 969, 314,
	315, 317, 318, 316, 914, 319, 320, 322, 321, 1081,
	1082, 915, 1083, 467, 468, 323, 324, 1084, 325, 326,
	1085, 1086, 328, 329, 1087, 1088, 330, 469, 916, 331,
	917, 470, 332, 327, 333, 334, 335, 336, 337, 338,
	1089, 339, 471, 340, 472, 341, 1090, 342, 0, 343,
	344, 345, 346, 347, 348, 473, 349, 350, 1091, 351,
	352, 353, 354, 355, 0, 357, 358, 359, 356, 360,
	361, 362, 363, 1092, 364, 918, 365, 366, 367, 368,
	474, 369, 0, 370, 374, 375, 376, 377, 378, 379,
	380, 1093, 387, 388, 381, 383, 384, 385, 382, 386,
	389, 390, 1094, 391, 371, 372, 392, 919, 393, 475,
	394, 395, 1095, 405, 396, 397, 398, 373, 399, 403,
	404, 400, 401, 402, 476, 1096, 407, 408, 406, 1097,
	409, 410, 411, 412, 413, 261, 414, 262, 415, 1098,
	477, 478, 479, 416, 1099, 1100, 417, 418, 480, 419,
	481, 1101, 420, 421, 422, 0, 423, 424, 1102, 1103,
	425, 426, 427, 428, 430, 1104, 431, 1105, 429, 432,
	433, 434, 482, 483, 1106, 436, 435, 484, 1107, 1108,
	1109, 1110, 437, 438, 485, 439, 440, 441, 1025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2672, 207, 208, 209, 210, 211, 1031,
	212, 1032, 1033, 1034, 1035, 442, 1036, 1037, 1038, 1039,
	213, 214, 215, 443, 444, 216, 445, 217, 218, 446,
	1040, 219, 220, 221, 222, 223, 224, 1041, 1042, 225,
	447, 448, 449, 1043, 226, 450, 1044, 1030, 1045, 227,
	228, 229, 230, 231, 0, 233, 234, 235, 232, 1046,
	236, 0, 237, 238, 239, 1047, 904, 240, 241, 1048,
	1049, 1051, 1050, 1052, 1053, 1054, 242, 243, 244, 245,
	246, 247, 451, 452, 1055, 248, 1056, 249, 1057, 250,
	1058, 1059, 251, 252, 253, 1060, 254, 1061, 255, 256,
	1062, 453, 257, 258, 260, 263, 259, 264, 265, 266,
	454, 455, 1063, 905, 1064, 0, 0, 0, 0, 267,
	268, 269, 456, 270, 271, 0, 272, 1065, 273, 1066,
	1067, 906, 274, 275, 1068, 276, 457, 1069, 458, 277,
	1070, 278, 279, 280, 281, 282, 283, 459, 460, 461,
	908, 1071, 465, 285, 0, 0, 0, 1072, 284, 286,
	293, 1073, 907, 287, 462, 289, 288, 290, 291, 292,
	463, 1074, 464, 1075, 294, 909, 910, 295, 296, 297,
	911, 298, 299, 0, 0, 300, 301, 302, 303, 1076,
	305, 304, 1077, 306, 466, 912, 307, 308, 913, 1078,
	309, 310, 1079, 1080, 311, 0, 312, 313, 970, 969,
	314, 315, 317, 318, 316, 914, 319, 320, 322, 321,
	1081, 1082, 915, 1083, 467, 468, 323, 324, 1084, 325,
	326, 1085, 1086, 328, 329, 1087, 1088, 330, 469, 916,
	331, 917, 470, 332, 327, 333, 334, 335, 336, 337,
	338, 1089, 339, 471, 340, 472, 341, 1090, 342, 0,
	343, 344, 345, 346, 347, 348, 473, 349, 350, 1091,
	351, 352, 353, 354, 355, 0, 357, 358, 359, 356,
	360, 361, 362, 363, 1092, 364, 918, 365, 366, 367,
	368, 474, 369, 0, 370, 374, 375, 376, 377, 378,
	379, 380, 1093, 387, 388, 381, 383, 384, 385, 382,
	386, 389, 390, 1094, 391, 371, 372, 392, 919, 393,
	475, 394, 395, 1095, 405, 396, 397, 398, 373, 399,
	403, 404, 400, 401, 402, 476, 1096, 407, 408, 406,
	1097, 409, 410, 411, 412, 413, 261, 414, 262, 415,
	1098, 477, 478, 479, 416, 1099, 1100, 417, 418, 480,
	419, 481, 1101, 420, 421, 422, 0, 423, 424, 1102,
	1103, 425, 426, 427, 428, 430, 1104, 431, 1105, 429,
	432, 433, 434, 482, 483, 1106, 436, 435, 484, 1107,
	1108, 1109, 1110, 437, 438, 485, 439, 440, 441, 1025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2551, 207, 208, 209, 210, 211,
	1031, 212, 1032, 1033, 1034, 1035, 442, 1036, 1037, 1038,
	1039, 213, 214, 215, 443, 444, 216, 445, 217, 218,
	446, 1040, 219, 220, 221, 222, 223, 224, 1041, 1042,
	225, 447, 448, 449, 1043, 226, 450, 1044, 1030, 1045,
	227, 228, 229, 230, 231, 0, 233, 234, 235, 232,
	1046, 236, 0, 237, 238, 239, 1047, 904, 240, 241,
	1048, 1049, 1051, 1050, 1052, 1053, 1054, 242, 243, 244,
	245, 246, 247, 451, 452, 1055, 248, 1056, 249, 1057,
	250, 1058, 1059, 251, 252, 253, 1060, 254, 1061, 255,
	256, 1062, 453, 257, 258, 260, 263, 259, 264, 265,
	266, 454, 455, 1063, 905, 1064, 0, 0, 0, 0,
	267, 268, 269, 456, 270, 271, 0, 272, 1065, 273,
	1066, 1067, 906, 274, 275, 1068, 276, 457, 1069, 458,
	277, 1070, 278, 279, 280, 281, 282, 283, 459, 460,
	461, 908, 1071, 465, 285, 0, 0, 0, 1072, 284,
	286, 293, 1073, 907, 287, 462, 289, 288, 290, 291,
	292, 463, 1074, 464, 1075, 294, 909, 910, 295, 296,
	297, 911, 298, 299, 0, 0, 300, 301, 302, 303,
	1076, 305, 304, 1077, 306, 466, 912, 307, 308, 913,
	1078, 309, 310, 1079, 1080, 311, 0, 312, 313, 970,
	969, 314, 315, 317, 318, 316, 914, 319, 320, 322,
	321, 1081, 1082, 915, 1083, 467, 468, 323, 324, 1084,
	325, 326, 1085, 1086, 328, 329, 1087, 1088, 330, 469,
	916, 331, 917, 470, 332, 327, 333, 334, 335, 336,
	337, 338, 1089, 339, 471, 340, 472, 341, 1090, 342,
	0, 343, 344, 345, 346, 347, 348, 473, 349, 350,
	1091, 351, 352, 353, 354, 355, 0, 357, 358, 359,
	356, 360, 361, 362, 363, 1092, 364, 918, 365, 366,
	367, 368, 474, 369, 0, 370, 374, 375, 376, 377,
	378, 379, 380, 1093, 387, 388, 381, 383, 384, 385,
	382, 386, 389, 390, 1094, 391, 371, 372, 392, 919,
	393, 475, 394, 395, 1095, 405, 396, 397, 398, 373,
	399, 403, 404, 400, 401, 402, 476, 1096, 407, 408,
	406, 1097, 409, 410, 411, 412, 413, 261, 414, 262,
	415, 1098, 477, 478, 479, 416, 1099, 1100, 417, 418,
	480, 419, 481, 1101, 420, 421, 422, 0, 423, 424,
	1102, 1103, 425, 426, 427, 428, 430, 1104, 431, 1105,
	429, 432, 433, 434, 482, 483, 1106, 436, 435, 484,
	1107, 1108, 1109, 1110, 437, 438, 485, 439, 440, 441,
	1025, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1969, 207, 208, 209, 210,
	211, 1031, 212, 1032, 1033, 1034, 1035, 442, 1036, 1037,
	1038, 1039, 213, 214, 215, 443, 444, 216, 445, 217,
	218, 446, 1040, 219, 220, 221, 222, 223, 224, 1041,
	1042, 225, 447, 448, 449, 1043, 226, 450, 1044, 1030,
	1045, 227, 228, 229, 230, 231, 0, 233, 234, 235,
	232, 1046, 236, 0, 237, 238, 239, 1047, 904, 240,
	241, 1048, 1049, 1051, 1050, 1052, 1053, 1054, 242, 243,
	244, 245, 246, 247, 451, 452, 1055, 248, 1056, 249,
	1057, 250, 1058, 1059, 251, 252, 253, 1060, 254, 1061,
	255, 256, 1062, 453, 257, 258, 260, 263, 259, 264,
	265, 266, 454, 455, 1063, 905, 1064, 0, 0, 0,
	0, 267, 268, 269, 456, 270, 271, 0, 272, 1065,
	273, 1066, 1067, 906, 274, 275, 1068, 276, 457, 1069,
	458, 277, 1070, 278, 279, 280, 281, 282, 283, 459,
	460, 461, 908, 1071, 465, 285, 0, 0, 0, 1072,
	284, 286, 293, 1073, 907, 287, 462, 289, 288, 290,
	291, 292, 463, 1074, 464, 1075, 294, 909, 910, 295,
	296, 297, 911, 298, 299, 0, 0, 300, 301, 302,
	303, 1076, 305, 304, 1077, 306, 466, 912, 307, 308,
	913, 1078, 309, 310, 1079, 1080, 311, 0, 312, 313,
	970, 969, 314, 315, 317, 318, 316, 914, 319, 320,
	322, 321, 1081, 1082, 915, 1083, 467, 468, 323, 324,
	1084, 325, 326, 1085, 1086, 328, 329, 1087, 1088, 330,
	469, 916, 331, 917, 470, 332, 327, 333, 334, 335,
	336, 337, 338, 1089, 339, 471, 340, 472, 341, 1090,
	342, 0, 343, 344, 345, 346, 347, 348, 473, 349,
	350, 1091, 351, 352, 353, 354, 355, 0, 357, 358,
	359, 356, 360, 361, 362, 363, 1092, 364, 918, 365,
	366, 367, 368, 474, 369, 0, 370, 374, 375, 376,
	377, 378, 379, 380, 1093, 387, 388, 381, 383, 384,
	385, 382, 386, 389, 390, 1094, 391, 371, 372, 392,
	919, 393, 475, 394, 395, 1095, 405, 396, 397, 398,
	373, 399, 403, 404, 400, 401, 402, 476, 1096, 407,
	408, 406, 1097, 409, 410, 411, 412, 413, 261, 414,
	262, 415, 1098, 477, 478, 479, 416, 1099, 1100, 417,
	418, 480, 419, 481, 1101, 420, 421, 422, 0, 423,
	424, 1102, 1103, 425, 426, 427, 428, 430, 1104, 431,
	1105, 429, 432, 433, 434, 482, 483, 1106, 436, 435,
	484, 1107, 1108, 1109, 1110, 437, 438, 485, 439, 440,
	441, 1133, 0, 1025, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1712, 0, 0, 207,
	208, 209, 210, 211, 1031, 212, 1032, 1033, 1034, 1035,
	442, 1036, 1037, 1038, 1039, 213, 214, 215, 443, 444,
	216, 445, 217, 218, 446, 1040, 219, 220, 221, 222,
	223, 224, 1041, 1042, 225, 447, 448, 449, 1043, 226,
	450, 1044, 1030, 1045, 227, 228, 229, 230, 231, 0,
	233, 234, 235, 232, 1046, 236, 0, 237, 238, 239,
	1047, 904, 240, 241, 1048, 1049, 1051, 1050, 1052, 1053,
	1054, 242, 243, 244, 245, 246, 247, 451, 452, 1055,
	248, 1056, 249, 1057, 250, 1058, 1059, 251, 252, 253,
	1060, 254, 1061, 255, 256, 1062, 453, 257, 258, 260,
	263, 259, 264, 265, 266, 454, 455, 1063, 905, 1064,
	0, 0, 0, 0, 267, 268, 269, 456, 270, 271,
	0, 272, 1065, 273, 1066, 1067, 906, 274, 275, 1068,
	276, 457, 1069, 458, 277, 1070, 278, 279, 280, 281,
	282, 283, 459, 460, 461, 908, 1071, 465, 285, 0,
	0, 0, 1072, 284, 286, 293, 1073, 907, 287, 462,
	289, 288, 290, 291, 292, 463, 1074, 464, 1075, 294,
	909, 910, 295, 296, 297, 911, 298, 299, 0, 0,
	300, 301, 302, 303, 1076, 305, 304, 1077, 306, 466,
	912, 307, 308, 913, 1078, 309, 310, 1079, 1080, 311,
	0, 312, 313, 970, 969, 314, 315, 317, 318, 316,
	914, 319, 320, 322, 321, 1081, 1082, 915, 1083, 467,
	468, 323, 324, 1084, 325, 326, 1085, 1086, 328, 329,
	1087, 1088, 330, 469, 916, 331, 917, 470, 332, 327,
	333, 334, 335, 336, 337, 338, 1089, 339, 471, 340,
	472, 341, 1090, 342, 0, 343, 344, 345, 346, 347,
	348, 473, 349, 350, 1091, 351, 352, 353, 354, 355,
	0, 357, 358, 359, 356, 360, 361, 362, 363, 1092,
	364, 918, 365, 366, 367, 368, 474, 369, 0, 370,
	374, 375, 376, 377, 378, 379, 380, 1093, 387, 388,
	381, 383, 384, 385, 382, 386, 389, 390, 1094, 391,
	371, 372, 392, 919, 393, 475, 394, 395, 1095, 405,
	396, 397, 398, 373, 399, 403, 404, 400, 401, 402,
	476, 1096, 407, 408, 406, 1097, 409, 410, 411, 412,
	413, 261, 414, 262, 415, 1098, 477, 478, 479, 416,
	1099, 1100, 417, 418, 480, 419, 481, 1101, 420, 421,
	422, 0, 423, 424, 1102, 1103, 425, 426, 427, 428,
	430, 1104, 431, 1105, 429, 432, 433, 434, 482, 483,
	1106, 436, 435, 484, 1107, 1108, 1109, 1110, 437, 438,
	485, 439, 440, 441, 1022, 0, 1025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 209, 210, 211, 1031, 212, 1032,
	1033, 1034, 1035, 442, 1036, 1037, 1038, 1039, 213, 214,
	215, 443, 444, 216, 445, 217, 218, 446, 1040, 219,
	220, 221, 222, 223, 224, 1041, 1042, 225, 447, 448,
	449, 1043, 226, 450, 1044, 1030, 1045, 227, 228, 229,
	230, 231, 0, 233, 234, 235, 232, 1046, 236, 0,
	237, 238, 239, 1047, 904, 240, 241, 1048, 1049, 1051,
	1050, 1052, 1053, 1054, 242, 243, 244, 245, 246, 247,
	451, 452, 1055, 248, 1056, 249, 1057, 250, 1058, 1059,
	251, 252, 253, 1060, 254, 1061, 255, 256, 1062, 453,
	257, 258, 260, 263, 259, 264, 265, 266, 454, 455,
	1063, 905, 1064, 0, 0, 0, 0, 267, 268, 269,
	456, 270, 271, 0, 272, 1065, 273, 1066, 1067, 906,
	274, 275, 1068, 276, 457, 1069, 458, 277, 1070, 278,
	279, 280, 281, 282, 283, 459, 460, 461, 908, 1071,
	465, 285, 0, 0, 0, 1072, 284, 286, 293, 1073,
	907, 287, 462, 289, 288, 290, 291, 292, 463, 1074,
	464, 1075, 294, 909, 910, 295, 296, 297, 911, 298,
	299, 0, 0, 300, 301, 302, 303, 1076, 305, 304,
	1077, 306, 466, 912, 307, 308, 913, 1078, 309, 310,
	1079, 1080, 311, 0, 312, 313, 970, 969, 314, 315,
	317, 318, 316, 914, 319, 320, 322, 321, 1081, 1082,
	915, 1083, 467, 468, 323, 324, 1084, 325, 326, 1085,
	1086, 328, 329, 1087, 1088, 330, 469, 916, 331, 917,
	470, 332, 327, 333, 334, 335, 336, 337, 338, 1089,
	339, 471, 340, 472, 341, 1090, 342, 0, 343, 344,
	345, 346, 347, 348, 473, 349, 350, 1091, 351, 352,
	353, 354, 355, 0, 357, 358, 359, 356, 360, 361,
	362, 363, 1092, 364, 918, 365, 366, 367, 368, 474,
	369, 0, 370, 374, 375, 376, 377, 378, 379, 380,
	1093, 387, 388, 381, 383, 384, 385, 382, 386, 389,
	390, 1094, 391, 371, 372, 392, 919, 393, 475, 394,
	395, 1095, 405, 396, 397, 398, 373, 399, 403, 404,
	400, 401, 402, 476, 1096, 407, 408, 406, 1097, 409,
	410, 411, 412, 413, 261, 414, 262, 415, 1098, 477,
	478, 479, 416, 1099, 1100, 417, 418, 480, 419, 481,
	1101, 420, 421, 422, 0, 423, 424, 1102, 1103, 425,
	426, 427, 428, 430, 1104, 431, 1105, 429, 432, 433,
	434, 482, 483, 1106, 436, 435, 484, 1107, 1108, 1109,
	1110, 437, 438, 485, 439, 440, 441, 1025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 208, 209, 210, 211, 1031, 212,
	1032, 1033, 1034, 1035, 442, 1036, 1037, 1038, 1039, 213,
	214, 215, 443, 444, 216, 445, 217, 218, 446, 1040,
	219, 220, 221, 222, 223, 224, 1041, 1042, 225, 447,
	448, 449, 1043, 226, 450, 1044, 1030, 1045, 227, 228,
	229, 230, 231, 0, 233, 234, 235, 232, 1046, 236,
	0, 237, 238, 239, 1047, 904, 240, 241, 1048, 1049,
	1051, 1050, 1052, 1053, 1054, 242, 243, 244, 245, 246,
	247, 451, 452, 1055, 248, 1056, 249, 1057, 250, 1058,
	1059, 251, 252, 253, 1060, 254, 1061, 255, 256, 1062,
	453, 257, 258, 260, 263, 259, 264, 265, 266, 454,
	455, 1063, 905, 1064, 0, 0, 0, 0, 267, 268,
	269, 456, 270, 271, 0, 272, 1065, 273, 1066, 1067,
	906, 274, 275, 1068, 276, 457, 1069, 458, 277, 1070,
	278, 279, 280, 281, 282, 283, 459, 460, 461, 908,
	1071, 465, 285, 0, 0, 0, 1072, 284, 286, 293,
	1073, 907, 287, 462, 289, 288, 290, 291, 292, 463,
	1074, 464, 1075, 294, 909, 910, 295, 296, 297, 911,
	298, 299, 0, 0, 300, 301, 302, 303, 1076, 305,
	304, 1077, 306, 466, 912, 307, 308, 913, 1078, 309,
	310, 1079, 1080, 311, 0, 312, 313, 970, 969, 314,
	315, 317, 318, 316, 914, 319, 320, 322, 321, 1081,
	1082, 915, 1083, 467, 468, 323, 324, 1084, 325, 326,
	1085, 1086, 328, 329, 1087, 1088, 330, 469, 916, 331,
	917, 470, 332, 327, 333, 334, 335, 336, 337, 338,
	1089, 339, 471, 340, 472, 341, 1090, 342, 0, 343,
	344, 345, 346, 347, 348, 473, 349, 350, 1091, 351,
	352, 353, 354, 355, 0, 357, 358, 359, 356, 360,
	361, 362, 363, 1092, 364, 918, 365, 366, 367, 368,
	474, 369, 0, 370, 374, 375, 376, 377, 378, 379,
	380, 1093, 387, 388, 381, 383, 384, 385, 382, 386,
	389, 390, 1094, 391, 371, 372, 392, 919, 393, 475,
	394, 395, 1095, 405, 396, 397, 398, 373, 399, 403,
	404, 400, 401, 402, 476, 1096, 407, 408, 406, 1097,
	409, 410, 411, 412, 413, 261, 414, 262, 415, 1098,
	477, 478, 479, 416, 1099, 1100, 417, 418, 480, 419,
	481, 1101, 420, 421, 422, 0, 423, 424, 1102, 1103,
	425, 426, 427, 428, 430, 1104, 431, 1105, 429, 432,
	433, 434, 482, 483, 1106, 436, 435, 484, 1107, 1108,
	1109, 1110, 437, 438, 485, 439, 440, 441, 1945, 0,
	849, 807, 808, 805, 806, 818, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 208, 209, 210,
	211, 1942, 212, 0, 0, 0, 0, 895, 823, 0,
	0, 0, 213, 214, 215, 443, 864, 843, 875, 833,
	874, 873, 0, 219, 835, 834, 222, 223, 224, 825,
	894, 225, 922, 923, 449, 0, 226, 901, 0, 884,
	0, 227, 228, 229, 230, 231, 0, 233, 234, 235,
	232, 0, 236, 0, 237, 238, 239, 0, 904, 240,
	241, 887, 885, 886, 891, 889, 888, 890, 242, 243,
	244, 245, 877, 247, 871, 870, 796, 248, 0, 249,
	0, 250, 1943, 0, 251, 869, 253, 0, 254, 0,
	255, 256, 0, 802, 257, 258, 260, 263, 259, 264,
	265, 266, 924, 925, 814, 905, 0, 0, 0, 0,
	0, 267, 268, 269, 868, 866, 867, 0, 272, 0,
	273, 0, 0, 906, 274, 275, 0, 276, 926, 0,
	824, 277, 0, 278, 279, 280, 281, 282, 283, 896,
	897, 900, 908, 0, 898, 845, 0, 0, 0, 0,
	284, 286, 293, 0, 907, 287, 857, 848, 859, 861,
	862, 863, 858, 0, 850, 0, 294, 909, 910, 295,
	296, 297, 911, 882, 883, 0, 0, 300, 301, 302,
	303, 0, 305, 304, 0, 306, 927, 912, 307, 308,
	913, 0, 309, 310, 0, 0, 311, 0, 312, 313,
	798, 797, 314, 315, 317, 837, 316, 914, 319, 320,
	322, 321, 793, 0, 915, 815, 899, 872, 323, 324,
	0, 846, 847, 0, 0, 328, 329, 0, 0, 330,
	469, 916, 331, 917, 928, 332, 327, 333, 334, 335,
	336, 337, 338, 0, 339, 929, 340, 472, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 865, 349,
	350, 0, 351, 352, 353, 354, 355, 0, 357, 358,
	359, 356, 360, 361, 362, 363, 0, 364, 918, 365,
	366, 367, 368, 803, 369, 0, 370, 374, 375, 376,
	377, 378, 379, 380, 0, 387, 388, 838, 839, 841,
	842, 382, 386, 389, 390, 892, 391, 371, 372, 392,
	919, 393, 860, 840, 395, 0, 405, 396, 397, 398,
	373, 399, 403, 903, 400, 401, 402, 930, 0, 407,
	408, 406, 0, 409, 410, 411, 412, 413, 261, 414,
	262, 836, 0, 878, 879, 880, 881, 0, 0, 417,
	418, 931, 419, 932, 813, 420, 421, 422, 0, 423,
	424, 0, 799, 425, 426, 427, 428, 430, 893, 431,
	0, 844, 432, 433, 434, 482, 921, 1941, 436, 435,
	484, 0, 0, 0, 0, 437, 438, 485, 439, 440,
	441, 794, 0, 0, 0, 0, 0, 0, 0, 792,
	0, 0, 0, 0, 790, 791, 1944, 0, 0, 0,
	0, 0, 0, 819, 1940, 0, 0, 0, 783, 817,
	849, 807, 808, 805, 806, 818, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 208, 209, 210,
	211, 0, 212, 0, 0, 0, 0, 895, 823, 0,
	0, 0, 213, 214, 215, 443, 864, 843, 875, 833,
	874, 873, 0, 219, 835, 834, 222, 223, 224, 825,
	894, 225, 922, 923, 449, 0, 226, 901, 0, 884,
	0, 227, 228, 229, 230, 231, 0, 233, 234, 235,
	232, 0, 236, 0, 237, 238, 239, 0, 904, 240,
	241, 887, 885, 886, 891, 889, 888, 890, 242, 243,
	244, 245, 877, 247, 871, 870, 796, 248, 0, 249,
	0, 250, 0, 0, 251, 869, 253, 0, 254, 0,
	255, 256, 0, 802, 257, 258, 260, 263, 259, 264,
	265, 266, 924, 925, 814, 905, 0, 0, 0, 0,
	0, 267, 268, 269, 868, 866, 867, 0, 272, 0,
	273, 0, 0, 906, 274, 275, 0, 276, 926, 0,
	824, 277, 0, 278, 279, 280, 281, 282, 283, 896,
	897, 900, 908, 0, 898, 845, 0, 0, 0, 0,
	284, 286, 293, 0, 907, 287, 857, 848, 859, 861,
	862, 863, 858, 0, 850, 0, 294, 909, 910, 295,
	296, 297, 911, 882, 883, 0, 0, 300, 301, 302,
	303, 0, 305, 304, 0, 306, 927, 912, 307, 308,
	913, 0, 309, 310, 0, 0, 311, 0, 312, 313,
	798, 797, 314, 315, 317, 837, 316, 914, 319, 320,
	322, 321, 793, 0, 915, 815, 899, 872, 323, 324,
	0, 846, 847, 0, 0, 328, 329, 0, 0, 330,
	469, 916, 331, 917, 928, 332, 327, 333, 334, 335,
	336, 337, 338, 0, 339, 929, 340, 472, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 865, 349,
	350, 0, 351, 352, 353, 354, 355, 0, 357, 358,
	359, 356, 360, 361, 362, 363, 0, 364, 918, 365,
	366, 367, 368, 803, 369, 0, 370, 374, 375, 376,
	377, 378, 379, 380, 176, 387, 388, 838, 839, 841,
	842, 382, 386, 389, 390, 892, 391, 371, 372, 392,
	919, 393, 860, 840, 395, 0, 405, 396, 397, 398,
	373, 399, 403, 903, 400, 401, 402, 930, 0, 407,
	408, 406, 178, 409, 410, 411, 412, 413, 261, 414,
	262, 836, 0, 878, 879, 880, 881, 0, 0, 417,
	418, 931, 419, 932, 813, 420, 421, 422, 0, 423,
	424, 0, 799, 425, 426, 427, 428, 430, 893, 431,
	0, 844, 432, 433, 434, 1268, 921, 0, 436, 435,
	484, 0, 0, 0, 170, 437, 438, 485, 439, 440,
	441, 794, 171, 0, 0, 0, 0, 0, 0, 792,
	0, 0, 0, 0, 790, 791, 849, 807, 808, 805,
	806, 818, 0, 1455, 1453, 0, 0, 0, 0, 817,
	0, 0, 207, 208, 209, 210, 211, 0, 212, 0,
	0, 0, 0, 895, 823, 0, 0, 0, 213, 214,
	215, 443, 864, 843, 875, 833, 874, 873, 0, 219,
	835, 834, 222, 223, 224, 825, 894, 225, 922, 923,
	449, 0, 226, 901, 0, 884, 0, 227, 228, 229,
	230, 231, 0, 233, 234, 235, 232, 0, 236, 0,
	237, 238, 239, 0, 904, 240, 241, 887, 885, 886,
	891, 889, 888, 890, 242, 243, 244, 245, 877, 247,
	871, 870, 796, 248, 0, 249, 0, 250, 0, 0,
	251, 869, 253, 0, 254, 0, 255, 256, 0, 802,
	257, 258, 260, 263, 259, 264, 265, 266, 924, 925,
	814, 905, 0, 0, 0, 0, 0, 267, 268, 269,
	868, 866, 867, 0, 272, 0, 273, 0, 0, 906,
	274, 275, 0, 276, 926, 0, 824, 277, 0, 278,
	279, 280, 281, 282, 283, 896, 897, 900, 908, 0,
	898, 845, 0, 0, 0, 0, 284, 286, 293, 0,
	907, 287, 857, 848, 859, 861, 862, 863, 858, 0,
	850, 0, 294, 909, 910, 295, 296, 297, 911, 882,
	883, 0, 0, 300, 301, 302, 303, 0, 305, 304,
	0, 306, 927, 912, 307, 308, 913, 0, 309, 310,
	0, 0, 311, 0, 312, 313, 798, 797, 314, 315,
	317, 837, 316, 914, 319, 320, 322, 321, 793, 0,
	915, 815, 899, 872, 323, 324, 0, 846, 847, 0,
	0, 328, 329, 0, 0, 330, 469, 916, 331, 917,
	928, 332, 327, 333, 334, 335, 336, 337, 338, 0,
	339, 929, 340, 472, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 865, 349, 350, 0, 351, 352,
	353, 354, 355, 0, 357, 358, 359, 356, 360, 361,
	362, 363, 0, 364, 918, 365, 366, 367, 368, 803,
	369, 0, 370, 374, 375, 376, 377, 378, 379, 380,
	176, 387, 388, 838, 839, 841, 842, 382, 386, 389,
	390, 892, 391, 371, 372, 392, 919, 393, 860, 840,
	395, 0, 405, 396, 397, 398, 373, 399, 403, 903,
	400, 401, 402, 930, 0, 407, 408, 406, 178, 409,
	410, 411, 412, 413, 261, 414, 262, 836, 0, 878,
	879, 880, 881, 0, 0, 417, 418, 931, 419, 932,
	813, 420, 421, 422, 0, 423, 424, 0, 799, 425,
	426, 427, 428, 430, 893, 431, 0, 844, 432, 433,
	434, 1268, 921, 0, 436, 435, 484, 0, 0, 0,
	170, 437, 438, 485, 439, 440, 441, 794, 171, 0,
	0, 0, 0, 0, 0, 792, 0, 0, 0, 0,
	790, 791, 849, 807, 808, 805, 806, 818, 0, 1455,
	2325, 0, 0, 0, 0, 817, 0, 0, 207, 208,
	209, 210, 211, 0, 212, 0, 0, 0, 0, 895,
	823, 0, 0, 0, 213, 214, 215, 443, 864, 843,
	875, 833, 874, 873, 0, 219, 835, 834, 222, 223,
	224, 825, 894, 225, 922, 923, 449, 0, 226, 901,
	0, 884, 0, 227, 228, 229, 230, 231, 0, 233,
	234, 235, 232, 0, 236, 0, 237, 238, 239, 0,
	904, 240, 241, 887, 885, 886, 891, 889, 888, 890,
	242, 243, 244, 245, 877, 247, 871, 870, 796, 248,
	0, 249, 0, 250, 0, 0, 251, 869, 253, 0,
	254, 0, 255, 256, 0, 802, 257, 258, 260, 263,
	259, 264, 265, 266, 924, 925, 814, 905, 0, 0,
	0, 0, 0, 267, 268, 269, 868, 866, 867, 0,
	272, 0, 273, 0, 0, 906, 274, 275, 0, 276,
	926, 0, 824, 277, 0, 278, 279, 280, 281, 282,
	283, 896, 897, 900, 908, 0, 898, 845, 0, 0,
	0, 0, 284, 286, 293, 0, 907, 287, 857, 848,
	859, 861, 862, 863, 858, 0, 850, 0, 294, 909,
	910, 295, 296, 297, 911, 882, 883, 0, 0, 300,
	301, 302, 303, 0, 305, 304, 0, 306, 927, 912,
	307, 308, 913, 0, 309, 310, 0, 0, 311, 0,
	312, 313, 798, 797, 314, 315, 317, 837, 316, 914,
	319, 320, 322, 321, 793, 0, 915, 815, 899, 872,
	323, 324, 0, 846, 847, 0, 0, 328, 329, 0,
	0, 330, 469, 916, 331, 917, 928, 332, 327, 333,
	334, 335, 336, 337, 338, 0, 339, 929, 340, 472,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	865, 349, 350, 0, 351, 352, 353, 354, 355, 0,
	357, 358, 359, 356, 360, 361, 362, 363, 0, 364,
	918, 365, 366, 367, 368, 803, 369, 0, 370, 374,
	375, 376, 377, 378, 379, 380, 176, 387, 388, 838,
	839, 841, 842, 382, 386, 389, 390, 892, 391, 371,
	372, 392, 919, 393, 860, 840, 395, 0, 405, 396,
	397, 398, 373, 399, 403, 903, 400, 401, 402, 930,
	0, 407, 408, 406, 178, 409, 410, 411, 412, 413,
	261, 414, 262, 836, 0, 878, 879, 880, 881, 0,
	0, 417, 418, 931, 419, 932, 813, 420, 421, 422,
	0, 423, 424, 0, 799, 425, 426, 427, 428, 430,
	893, 431, 0, 844, 432, 433, 434, 1268, 921, 0,
	436, 435, 484, 0, 0, 0, 170, 437, 438, 485,
	439, 440, 441, 794, 171, 0, 0, 0, 0, 0,
	0, 792, 0, 0, 0, 0, 790, 791, 849, 807,
	808, 805, 806, 818, 0, 1455, 1453, 0, 0, 0,
	0, 817, 0, 0, 207, 208, 209, 210, 211, 0,
	212, 0, 0, 0, 0, 895, 823, 0, 0, 0,
	213, 214, 215, 443, 864, 843, 875, 833, 874, 873,
	2031, 219, 835, 834, 222, 223, 224, 825, 894, 225,
	922, 923, 449, 0, 226, 901, 0, 884, 0, 227,
	228, 229, 230, 231, 0, 233, 234, 235, 232, 0,
	236, 0, 237, 238, 239, 0, 904, 240, 241, 887,
	885, 886, 891, 889, 888, 890, 242, 243, 244, 245,
	877, 247, 871, 870, 796, 248, 0, 249, 0, 250,
	0, 0, 251, 869, 253, 0, 254, 0, 255, 256,
	0, 802, 257, 258, 260, 263, 259, 264, 265, 266,
	924, 925, 814, 905, 0, 0, 0, 0, 0, 267,
	268, 269, 868, 866, 867, 0, 272, 0, 273, 0,
	2036, 906, 274, 275, 0, 276, 926, 0, 824, 277,
	0, 278, 279, 280, 281, 282, 283, 896, 897, 900,
	908, 0, 898, 845, 0, 0, 0, 0, 284, 286,
	293, 0, 907, 287, 857, 848, 859, 861, 862, 863,
	858, 0, 850, 0, 294, 909, 910, 295, 296, 297,
	911, 882, 883, 0, 0, 300, 301, 302, 303, 0,
	305, 304, 2032, 306, 927, 912, 307, 308, 913, 0,
	309, 310, 0, 0, 311, 0, 312, 313, 798, 797,
	314, 315, 317, 837, 316, 914, 319, 320, 322, 321,
	793, 0, 915, 815, 899, 872, 323, 324, 0, 846,
	847, 0, 0, 328, 329, 0, 0, 330, 469, 916,
	331, 917, 928, 332, 327, 333, 334, 335, 336, 337,
	338, 0, 339, 929, 340, 472, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 865, 349, 350, 0,
	351, 352, 353, 354, 355, 0, 357, 358, 359, 356,
	360, 361, 362, 363, 0, 364, 918, 365, 366, 367,
	368, 803, 369, 0, 370, 374, 375, 376, 377, 378,
	379, 380, 0, 387, 388, 838, 839, 841, 842, 382,
	386, 389, 390, 892, 391, 371, 372, 392, 919, 393,
	860, 840, 395, 0, 405, 396, 397, 398, 373, 399,
	403, 903, 400, 401, 402, 930, 0, 407, 408, 406,
	0, 409, 410, 411, 412, 413, 261, 414, 262, 836,
	0, 878, 879, 880, 881, 0, 2033, 417, 418, 931,
	419, 932, 813, 420, 421, 422, 0, 423, 424, 0,
	799, 425, 426, 427, 428, 430, 893, 431, 0, 844,
	432, 433, 434, 482, 921, 0, 436, 435, 484, 0,
	0, 0, 0, 437, 438, 485, 439, 440, 441, 794,
	0, 0, 0, 0, 0, 0, 0, 792, 0, 0,
	0, 0, 790, 791, 849, 807, 808, 805, 806, 818,
	0, 819, 0, 0, 0, 0, 0, 817, 0, 0,
	207, 208, 209, 210, 211, 0, 212, 0, 0, 0,
	0, 895, 823, 0, 0, 0, 213, 214, 215, 443,
	864, 843, 875, 833, 874, 873, 0, 219, 835, 834,
	222, 223, 224, 825, 894, 225, 922, 923, 449, 0,
	226, 901, 0, 884, 0, 227, 228, 229, 230, 231,
	0, 233, 234, 235, 232, 0, 236, 0, 237, 238,
	239, 0, 904, 240, 241, 887, 885, 886, 891, 889,
	888, 890, 242, 243, 244, 245, 877, 247, 871, 870,
	796, 248, 0, 249, 0, 250, 0, 0, 251, 869,
	253, 0, 254, 0, 255, 256, 0, 802, 257, 258,
	260, 263, 259, 264, 265, 266, 924, 925, 814, 905,
	0, 0, 0, 0, 0, 267, 268, 269, 868, 866,
	867, 0, 272, 0, 273, 0, 0, 906, 274, 275,
	0, 276, 926, 0, 824, 277, 0, 278, 279, 280,
	281, 282, 283, 896, 897, 900, 908, 0, 898, 845,
	0, 0, 0, 0, 284, 286, 293, 0, 907, 287,
	857, 848, 859, 861, 862, 863, 858, 0, 850, 0,
	294, 909, 910, 295, 296, 297, 911, 882, 883, 0,
	0, 300, 301, 302, 303, 0, 305, 304, 0, 306,
	927, 912, 307, 308, 913, 0, 309, 310, 0, 0,
	311, 0, 312, 313, 798, 797, 314, 315, 317, 837,
	316, 914, 319, 320, 322, 321, 793, 2837, 915, 815,
	899, 872, 323, 324, 0, 846, 847, 0, 0, 328,
	329, 0, 0, 330, 469, 916, 331, 917, 928, 332,
	327, 333, 334, 335, 336, 337, 338, 0, 339, 929,
	340, 472, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 865, 349, 350, 0, 351, 352, 353, 354,
	355, 0, 357, 358, 359, 356, 360, 361, 362, 363,
	0, 364, 918, 365, 366, 367, 368, 803, 369, 0,
	370, 374, 375, 376, 377, 378, 379, 380, 0, 387,
	388, 838, 839, 841, 842, 382, 386, 389, 390, 892,
	391, 371, 372, 392, 919, 393, 860, 840, 395, 0,
	405, 396, 397, 398, 373, 399, 403, 903, 400, 401,
	402, 930, 0, 407, 408, 406, 0, 409, 410, 411,
	412, 413, 261, 414, 262, 836, 0, 878, 879, 880,
	881, 0, 0, 417, 418, 931, 419, 932, 813, 420,
	421, 422, 0, 423, 424, 0, 799, 425, 426, 427,
	428, 430, 893, 431, 0, 844, 432, 433, 434, 482,
	921, 0, 436, 435, 484, 0, 0, 0, 0, 437,
	438, 485, 439, 440, 441, 794, 0, 0, 0, 0,
	0, 0, 0, 792, 0, 0, 0, 0, 790, 791,
	1512, 849, 807, 808, 805, 806, 818, 819, 0, 0,
	0, 0, 0, 817, 0, 0, 0, 207, 208, 209,
	210, 211, 0, 212, 0, 0, 0, 0, 895, 823,
	0, 0, 0, 213, 214, 215, 443, 864, 843, 875,
	833, 874, 873, 0, 219, 835, 834, 222, 223, 224,
	825, 894, 225, 922, 923, 449, 0, 226, 901, 0,
	884, 0, 227, 228, 229, 230, 231, 0, 233, 234,
	235, 232, 0, 236, 0, 237, 238, 239, 0, 904,
	240, 241, 887, 885, 886, 891, 889, 888, 890, 242,
	243, 244, 245, 877, 247, 871, 870, 796, 248, 0,
	249, 0, 250, 0, 0, 251, 869, 253, 0, 254,
	0, 255, 256, 0, 802, 257, 258, 260, 263, 259,
	264, 265, 266, 924, 925, 814, 905, 0, 0, 0,
	0, 0, 267, 268, 269, 868, 866, 867, 0, 272,
	0, 273, 0, 0, 906, 274, 275, 0, 276, 926,
	0, 824, 277, 0, 278, 279, 280, 281, 282, 283,
	896, 897, 900, 908, 0, 898, 845, 0, 0, 0,
	1859, 284, 286, 293, 0, 907, 287, 857, 848, 859,
	861, 862, 863, 858, 0, 850, 0, 294, 909, 910,
	295, 296, 297, 911, 882, 883, 0, 0, 300, 301,
	302, 303, 0, 305, 304, 0, 306, 927, 912, 307,
	308, 913, 0, 309, 310, 0, 0, 311, 0, 312,
	313, 798, 797, 314, 315, 317, 837, 316, 914, 319,
	320, 322, 321, 793, 0, 915, 815, 899, 872, 323,
	324, 0, 846, 847, 0, 0, 328, 329, 0, 0,
	330, 469, 916, 331, 917, 928, 332, 327, 333, 334,
	335, 336, 337, 338, 0, 339, 929, 340, 472, 341,
	1858, 342, 0, 343, 344, 345, 346, 347, 348, 865,
	349, 350, 0, 351, 352, 353, 354, 355, 0, 357,
	358, 359, 356, 360, 361, 362, 363, 0, 364, 918,
	365, 366, 367, 368, 803, 369, 0, 370, 374, 375,
	376, 377, 378, 379, 380, 0, 387, 388, 838, 839,
	841, 842, 382, 386, 389, 390, 892, 391, 371, 372,
	392, 919, 393, 860, 840, 395, 0, 405, 396, 397,
	398, 373, 399, 403, 903, 400, 401, 402, 930, 0,
	407, 408, 406, 0, 409, 410, 411, 412, 413, 261,
	414, 262, 836, 0, 878, 879, 880, 881, 0, 0,
	417, 418, 931, 419, 932, 813, 420, 421, 422, 0,
	423, 424, 0, 799, 425, 426, 427, 428, 430, 893,
	431, 0, 844, 432, 433, 434, 482, 921, 0, 436,
	435, 484, 0, 0, 0, 0, 437, 438, 485, 439,
	440, 441, 794, 0, 0, 0, 0, 0, 0, 0,
	792, 0, 0, 0, 0, 790, 791, 0, 0, 0,
	0, 0, 0, 0, 819, 0, 0, 0, 0, 786,
	817, 849, 807, 808, 805, 806, 818, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 208, 209,
	210, 211, 0, 212, 0, 0, 0, 0, 895, 823,
	0, 0, 0, 213, 214, 215, 443, 864, 843, 875,
	833, 874, 873, 0, 219, 835, 834, 222, 223, 224,
	825, 894, 225, 922, 923, 449, 0, 226, 901, 0,
	884, 0, 227, 228, 229, 230, 231, 0, 233, 234,
	235, 232, 0, 236, 0, 237, 238, 239, 0, 904,
	240, 241, 887, 885, 886, 891, 889, 888, 890, 242,
	243, 244, 245, 877, 247, 871, 870, 796, 248, 0,
	249, 0, 250, 0, 0, 251, 869, 253, 0, 254,
	0, 255, 256, 0, 802, 257, 258, 260, 263, 259,
	264, 265, 266, 924, 925, 814, 905, 0, 0, 0,
	0, 0, 267, 268, 269, 868, 866, 867, 0, 272,
	0, 273, 0, 0, 906, 274, 275, 0, 276, 926,
	0, 824, 277, 0, 278, 279, 280, 281, 282, 283,
	896, 897, 900, 908, 0, 898, 845, 0, 0, 0,
	0, 284, 286, 293, 0, 907, 287, 857, 848, 859,
	861, 862, 863, 858, 0, 850, 0, 294, 909, 910,
	295, 296, 297, 911, 882, 883, 0, 0, 300, 301,
	302, 303, 0, 305, 304, 0, 306, 927, 912, 307,
	308, 913, 0, 309, 310, 0, 0, 311, 0, 312,
	313, 798, 797, 314, 315, 317, 837, 316, 914, 319,
	320, 322, 321, 793, 0, 915, 815, 899, 872, 323,
	324, 0, 846, 847, 788, 0, 328, 329, 0, 0,
	330, 469, 916, 331, 917, 928, 332, 327, 333, 334,
	335, 336, 337, 338, 0, 339, 929, 340, 472, 341,
	0, 342, 0, 343, 344, 345, 346, 347, 348, 865,
	349, 350, 0, 351, 352, 353, 354, 355, 0, 357,
	358, 359, 356, 360, 361, 362, 363, 0, 364, 918,
	365, 366, 367, 368, 803, 369, 0, 370, 374, 375,
	376, 377, 378, 379, 380, 0, 387, 388, 838, 839,
	841, 842, 382, 386, 389, 390, 892, 391, 371, 372,
	392, 919, 393, 860, 840, 395, 0, 405, 396, 397,
	398, 373, 399, 403, 903, 400, 401, 402, 930, 0,
	407, 408, 406, 0, 409, 410, 411, 412, 413, 261,
	414, 262, 836, 0, 878, 879, 880, 881, 0, 0,
	417, 418, 931, 419, 932, 813, 420, 421, 422, 0,
	423, 424, 0, 799, 425, 426, 427, 428, 430, 893,
	431, 0, 844, 432, 433, 434, 482, 921, 0, 436,
	435, 484, 0, 0, 0, 0, 437, 438, 485, 439,
	440, 441, 794, 0, 0, 0, 0, 0, 0, 0,
	792, 0, 0, 0, 0, 790, 791, 849, 807, 808,
	805, 806, 818, 0, 819, 0, 0, 0, 0, 0,
	817, 0, 0, 207, 208, 209, 210, 211, 0, 212,
	0, 0, 0, 0, 895, 823, 0, 0, 0, 213,
	214, 215, 443, 864, 843, 875, 833, 874, 873, 0,
	219, 835, 834, 222, 223, 224, 825, 894, 225, 922,
	923, 449, 0, 226, 901, 0, 884, 0, 227, 228,
	229, 230, 231, 0, 233, 234, 235, 232, 0, 236,
	0, 237, 238, 239, 0, 904, 240, 241, 887, 885,
	886, 891, 889, 888, 890, 242, 243, 244, 245, 877,
	247, 871, 870, 796, 248, 0, 249, 0, 250, 0,
	0, 251, 869, 253, 0, 254, 0, 255, 256, 0,
	802, 257, 258, 260, 263, 259, 264, 265, 266, 924,
	925, 814, 905, 0, 0, 0, 0, 0, 267, 268,
	269, 868, 866, 867, 0, 272, 0, 273, 0, 0,
	906, 274, 275, 0, 276, 926, 0, 824, 277, 0,
	278, 279, 280, 281, 282, 283, 896, 897, 900, 908,
	0, 898, 845, 0, 0, 0, 0, 284, 286, 293,
	0, 907, 287, 857, 848, 859, 861, 862, 863, 858,
	0, 850, 0, 294, 909, 910, 295, 296, 297, 911,
	882, 883, 0, 0, 300, 301, 302, 303, 0, 305,
	304, 0, 306, 927, 912, 307, 308, 913, 0, 309,
	310, 0, 0, 311, 0, 312, 313, 798, 797, 314,
	315, 317, 837, 316, 914, 319, 320, 322, 321, 793,
	0, 915, 815, 899, 872, 323, 324, 0, 846, 847,
	788, 0, 328, 329, 0, 0, 330, 469, 916, 331,
	917, 928, 332, 327, 333, 334, 335, 336, 337, 338,
	0, 339, 929, 340, 472, 341, 0, 342, 0, 343,
	344, 345, 346, 347, 348, 865, 349, 350, 0, 351,
	352, 353, 354, 355, 0, 357, 358, 359, 356, 360,
	361, 362, 363, 0, 364, 918, 365, 366, 367, 368,
	803, 369, 0, 370, 374, 375, 376, 377, 378, 379,
	380, 0, 387, 388, 838, 839, 841, 842, 382, 386,
	389, 390, 892, 391, 371, 372, 392, 919, 393, 860,
	840, 395, 0, 405, 396, 397, 398, 373, 399, 403,
	903, 400, 401, 402, 930, 0, 407, 408, 406, 0,
	409, 410, 411, 412, 413, 261, 414, 262, 836, 0,
	878, 879, 880, 881, 0, 0, 417, 418, 931, 419,
	932, 813, 420, 421, 422, 0, 423, 424, 0, 799,
	425, 426, 427, 428, 430, 893, 431, 0, 844, 432,
	433, 434, 482, 921, 0, 436, 435, 484, 0, 0,
	0, 0, 437, 438, 485, 439, 440, 441, 794, 0,
	0, 0, 0, 0, 0, 0, 792, 0, 0, 0,
	0, 790, 791, 849, 807, 808, 805, 806, 818, 0,
	819, 0, 0, 0, 0, 0, 817, 0, 0, 207,
	208, 209, 210, 211, 0, 212, 0, 0, 0, 0,
	895, 823, 0, 0, 0, 213, 214, 215, 443, 864,
	843, 875, 833, 874, 873, 0, 219, 835, 834, 222,
	223, 224, 825, 894, 225, 922, 923, 449, 0, 226,
	901, 0, 884, 0, 227, 228, 229, 230, 231, 0,
	233, 234, 235, 232, 0, 236, 0, 237, 238, 239,
	0, 904, 240, 241, 887, 885, 886, 891, 889, 888,
	890, 242, 243, 244, 245, 877, 247, 871, 870, 796,
	248, 0, 249, 0, 250, 0, 0, 251, 869, 253,
	0, 254, 0, 255, 256, 0, 802, 257, 258, 260,
	263, 259, 264, 265, 266, 924, 925, 814, 905, 0,
	0, 0, 0, 0, 267, 268, 269, 868, 866, 867,
	0, 272, 0, 273, 0, 0, 906, 274, 275, 0,
	276, 926, 0, 824, 277, 0, 278, 279, 280, 281,
	282, 283, 896, 897, 900, 908, 0, 898, 845, 0,
	0, 0, 0, 284, 286, 293, 0, 907, 287, 857,
	848, 859, 861, 862, 863, 858, 0, 850, 0, 294,
	909, 910, 295, 296, 297, 911, 882, 883, 0, 0,
	300, 301, 302, 303, 0, 305, 304, 0, 306, 927,
	912, 307, 308, 913, 0, 309, 310, 0, 0, 311,
	0, 312, 313, 798, 797, 314, 315, 317, 837, 316,
	914, 319, 320, 322, 321, 793, 0, 915, 815, 899,
	872, 323, 324, 0, 846, 847, 0, 0, 328, 329,
	0, 0, 330, 469, 916, 331, 917, 928, 332, 327,
	333, 334, 335, 336, 337, 338, 0, 339, 929, 340,
	472, 341, 0, 342, 0, 343, 344, 345, 346, 347,
	348, 865, 349, 350, 0, 351, 352, 353, 354, 355,
	0, 357, 358, 359, 356, 360, 361, 362, 363, 0,
	364, 918, 365, 366, 367, 368, 803, 369, 0, 370,
	374, 375, 376, 377, 378, 379, 380, 0, 387, 388,
	838, 839, 841, 842, 382, 386, 389, 390, 892, 391,
	371, 372, 392, 919, 393, 860, 840, 395, 0, 405,
	396, 397, 398, 373, 399, 403, 903, 400, 401, 402,
	930, 0, 407, 408, 406, 0, 409, 410, 411, 412,
	413, 261, 414, 262, 836, 0, 878, 879, 880, 881,
	0, 0, 417, 418, 931, 419, 932, 813, 420, 421,
	422, 0, 423, 424, 0, 799, 425, 426, 427, 428,
	430, 893, 431, 0, 844, 432, 433, 434, 482, 921,
	2659, 436, 435, 484, 0, 0, 0, 0, 437, 438,
	485, 439, 440, 441, 794, 0, 0, 0, 0, 0,
	0, 0, 792, 0, 0, 0, 0, 790, 791, 849,
	807, 808, 805, 806, 818, 0, 819, 0, 0, 0,
	0, 0, 817, 0, 0, 207, 208, 209, 210, 211,
	0, 212, 0, 0, 0, 0, 895, 823, 0, 0,
	0, 213, 214, 215, 443, 864, 843, 875, 833, 874,
	873, 0, 219, 835, 834, 222, 223, 224, 825, 894,
	225, 922, 923, 449, 0, 226, 901, 0, 884, 0,
	227, 228, 229, 230, 231, 0, 233, 234, 235, 232,
	0, 236, 0, 237, 238, 239, 0, 904, 240, 241,
	887, 885, 886, 891, 889, 888, 890, 242, 243, 244,
	245, 877, 247, 871, 870, 796, 248, 0, 249, 0,
	250, 0, 0, 251, 869, 253, 0, 254, 0, 255,
	256, 0, 802, 257, 258, 260, 263, 259, 264, 265,
	266, 924, 925, 814, 905, 0, 0, 0, 0, 0,
	267, 268, 269, 868, 866, 867, 0, 272, 0, 273,
	0, 0, 906, 274, 275, 0, 276, 926, 0, 824,
	277, 0, 278, 279, 280, 281, 282, 283, 896, 897,
	900, 908, 0, 898, 845, 0, 0, 0, 0, 284,
	286, 293, 0, 907, 287, 857, 848, 859, 861, 862,
	863, 858, 0, 850, 0, 294, 909, 910, 295, 296,
	297, 911, 882, 883, 0, 0, 300, 301, 302, 303,
	0, 305, 304, 0, 306, 927, 912, 307, 308, 913,
	0, 309, 310, 0, 0, 311, 0, 312, 313, 798,
	797, 314, 315, 317, 837, 316, 914, 319, 320, 322,
	321, 793, 0, 915, 815, 899, 872, 323, 324, 0,
	846, 847, 0, 0, 328, 329, 0, 0, 330, 469,
	916, 331, 917, 928, 332, 327, 333, 334, 335, 336,
	337, 338, 0, 339, 929, 340, 472, 341, 0, 342,
	0, 343, 344, 345, 346, 347, 348, 865, 349, 350,
	0, 351, 352, 353, 354, 355, 0, 357, 358, 359,
	356, 360, 361, 362, 363, 0, 364, 918, 365, 366,
	367, 368, 803, 369, 0, 370, 374, 375, 376, 377,
	378, 379, 380, 0, 387, 388, 838, 839, 841, 842,
	382, 386, 389, 390, 892, 391, 371, 372, 392, 919,
	393, 860, 840, 395, 0, 405, 396, 397, 398, 373,
	399, 403, 903, 400, 401, 402, 930, 0, 407, 408,
	406, 0, 409, 410, 411, 412, 413, 261, 414, 262,
	836, 0, 878, 879, 880, 881, 0, 0, 417, 418,
	931, 419, 932, 813, 420, 421, 422, 0, 423, 424,
	0, 799, 425, 426, 427, 428, 430, 893, 431, 0,
	844, 432, 433, 434, 482, 921, 0, 436, 435, 484,
	0, 0, 0, 0, 437, 438, 485, 439, 440, 441,
	794, 0, 0, 0, 0, 0, 0, 0, 792, 0,
	0, 0, 0, 790, 791, 1512, 849, 807, 808, 805,
	806, 818, 819, 0, 0, 0, 0, 0, 817, 0,
	0, 0, 207, 208, 209, 210, 211, 0, 212, 0,
	0, 0, 0, 895, 823, 0, 0, 0, 213, 214,
	215, 443, 864, 843, 875, 833, 874, 873, 0, 219,
	835, 834, 222, 223, 224, 825, 894, 225, 922, 923,
	449, 0, 226, 901, 0, 884, 0, 227, 228, 229,
	230, 231, 0, 233, 234, 235, 232, 0, 236, 0,
	237, 238, 239, 0, 904, 240, 241, 887, 885, 886,
	891, 889, 888, 890, 242, 243, 244, 245, 877, 247,
	871, 870, 796, 248, 0, 249, 0, 250, 0, 0,
	251, 869, 253, 0, 254, 0, 255, 256, 0, 802,
	257, 258, 260, 263, 259, 264, 265, 266, 924, 925,
	814, 905, 0, 0, 0, 0, 0, 267, 268, 269,
	868, 866, 867, 0, 272, 0, 273, 0, 2036, 906,
	274, 275, 0, 276, 926, 0, 824, 277, 0, 278,
	279, 280, 281, 282, 283, 896, 897, 900, 908, 0,
	898, 845, 0, 0, 0, 0, 284, 286, 293, 0,
	907, 287, 857, 848, 859, 861, 862, 863, 858, 0,
	850, 0, 294, 909, 910, 295, 296, 297, 911, 882,
	883, 0, 0, 300, 301, 302, 303, 0, 305, 304,
	0, 306, 927, 912, 307, 308, 913, 0, 309, 310,
	0, 0, 311, 0, 312, 313, 798, 797, 314, 315,
	317, 837, 316, 914, 319, 320, 322, 321, 793, 0,
	915, 815, 899, 872, 323, 324, 0, 846, 847, 0,
	0, 328, 329, 0, 0, 330, 469, 916, 331, 917,
	928, 332, 327, 333, 334, 335, 336, 337, 338, 0,
	339, 929, 340, 472, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 865, 349, 350, 0, 351, 352,
	353, 354, 355, 0, 357, 358, 359, 356, 360, 361,
	362, 363, 0, 364, 918, 365, 366, 367, 368, 803,
	369, 0, 370, 374, 375, 376, 377, 378, 379, 380,
	0, 387, 388, 838, 839, 841, 842, 382, 386, 389,
	390, 892, 391, 371, 372, 392, 919, 393, 860, 840,
	395, 0, 405, 396, 397, 398, 373, 399, 403, 903,
	400, 401, 402, 930, 0, 407, 408, 406, 0, 409,
	410, 411, 412, 413, 261, 414, 262, 836, 0, 878,
	879, 880, 881, 0, 0, 417, 418, 931, 419, 932,
	813, 420, 421, 422, 0, 423, 424, 0, 799, 425,
	426, 427, 428, 430, 893, 431, 0, 844, 432, 433,
	434, 482, 921, 0, 436, 435, 484, 0, 0, 0,
	0, 437, 438, 485, 439, 440, 441, 794, 0, 0,
	0, 0, 0, 0, 0, 792, 0, 0, 0, 0,
	790, 791, 849, 807, 808, 805, 806, 818, 0, 819,
	0, 0, 0, 0, 0, 817, 0, 0, 207, 208,
	209, 210, 211, 0, 212, 0, 0, 0, 0, 895,
	823, 0, 0, 0, 213, 214, 215, 443, 864, 843,
	875, 833, 874, 873, 0, 219, 835, 834, 222, 223,
	224, 825, 894, 225, 922, 923, 449, 0, 226, 901,
	0, 884, 0, 227, 228, 229, 230, 231, 0, 233,
	234, 235, 232, 0, 236, 0, 237, 238, 239, 0,
	904, 240, 241, 887, 885, 886, 891, 889, 888, 890,
	242, 243, 244, 245, 877, 247, 871, 870, 796, 248,
	0, 249, 0, 250, 0, 0, 251, 869, 253, 0,
	254, 0, 255, 256, 0, 802, 257, 258, 260, 263,
	259, 264, 265, 266, 924, 925, 814, 905, 0, 0,
	0, 0, 0, 267, 268, 269, 868, 866, 867, 0,
	272, 0, 273, 0, 0, 906, 274, 275, 0, 276,
	926, 0, 824, 277, 0, 278, 279, 280, 281, 282,
	283, 896, 897, 900, 908, 0, 898, 845, 0, 0,
	0, 0, 284, 286, 293, 0, 907, 287, 857, 848,
	859, 861, 862, 863, 858, 0, 850, 0, 294, 909,
	910, 295, 296, 297, 911, 882, 883, 0, 0, 300,
	301, 302, 303, 0, 305, 304, 0, 306, 927, 912,
	307, 308, 913, 0, 309, 310, 0, 0, 311, 0,
	312, 313, 798, 797, 314, 315, 317, 837, 316, 914,
	319, 320, 322, 321, 793, 0, 915, 815, 899, 872,
	323, 324, 0, 846, 847, 0, 0, 328, 329, 0,
	0, 330, 469, 916, 331, 917, 928, 332, 327, 333,
	334, 335, 336, 337, 338, 0, 339, 929, 340, 472,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	865, 349, 350, 0, 351, 352, 353, 354, 355, 0,
	357, 358, 359, 356, 360, 361, 362, 363, 0, 364,
	918, 365, 366, 367, 368, 803, 369, 0, 370, 374,
	375, 376, 377, 378, 379, 380, 0, 387, 388, 838,
	839, 841, 842, 382, 386, 389, 390, 892, 391, 371,
	372, 392, 919, 393, 860, 840, 395, 0, 405, 396,
	397, 398, 373, 399, 403, 903, 400, 401, 402, 930,
	0, 407, 408, 406, 0, 409, 410, 411, 412, 413,
	261, 414, 262, 836, 0, 878, 879, 880, 881, 0,
	0, 417, 418, 931, 419, 932, 813, 420, 421, 422,
	0, 423, 424, 0, 799, 425, 426, 427, 428, 430,
	893, 431, 0, 844, 432, 433, 434, 482, 921, 0,
	436, 435, 484, 0, 0, 0, 0, 437, 438, 485,
	439, 440, 441, 794, 0, 0, 0, 0, 0, 0,
	0, 792, 0, 0, 0, 0, 790, 791, 0, 0,
	0, 0, 0, 0, 0, 819, 1453, 0, 0, 0,
	2027, 817, 849, 807, 808, 805, 806, 818, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	209, 210, 211, 0, 212, 0, 0, 0, 0, 895,
	823, 0, 0, 0, 213, 214, 215, 443, 864, 843,
	875, 833, 874, 873, 0, 219, 835, 834, 222, 223,
	224, 825, 894, 225, 922, 923, 449, 0, 226, 901,
	0, 884, 0, 227, 228, 229, 230, 231, 0, 233,
	234, 235, 232, 0, 236, 0, 237, 238, 239, 0,
	904, 240, 241, 887, 885, 886, 891, 889, 888, 890,
	242, 243, 244, 245, 877, 247, 871, 870, 796, 248,
	0, 249, 0, 250, 0, 0, 251, 869, 253, 0,
	254, 0, 255, 256, 0, 802, 257, 258, 260, 263,
	259, 264, 265, 266, 924, 925, 814, 905, 0, 0,
	0, 0, 0, 267, 268, 269, 868, 866, 867, 0,
	272, 0, 273, 0, 0, 906, 274, 275, 0, 276,
	926, 0, 824, 277, 0, 278, 279, 280, 281, 282,
	283, 896, 897, 900, 908, 0, 898, 845, 0, 0,
	0, 0, 284, 286, 293, 0, 907, 287, 857, 848,
	859, 861, 862, 863, 858, 0, 850, 0, 294, 909,
	910, 295, 296, 297, 911, 882, 883, 0, 0, 300,
	301, 302, 303, 0, 305, 304, 0, 306, 927, 912,
	307, 308, 913, 0, 309, 310, 0, 0, 311, 0,
	312, 313, 798, 797, 314, 315, 317, 837, 316, 914,
	319, 320, 322, 321, 793, 0, 915, 815, 899, 872,
	323, 324, 0, 846, 847, 0, 0, 328, 329, 0,
	0, 330, 469, 916, 331, 917, 928, 332, 327, 333,
	334, 335, 336, 337, 338, 0, 339, 929, 340, 472,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	865, 349, 350, 0, 351, 352, 353, 354, 355, 0,
	357, 358, 359, 356, 360, 361, 362, 363, 0, 364,
	918, 365, 366, 367, 368, 803, 369, 0, 370, 374,
	375, 376, 377, 378, 379, 380, 0, 387, 388, 838,
	839, 841, 842, 382, 386, 389, 390, 892, 391, 371,
	372, 392, 919, 393, 860, 840, 395, 0, 405, 396,
	397, 398, 373, 399, 403, 903, 400, 401, 402, 930,
	0, 407, 408, 406, 0, 409, 410, 411, 412, 413,
	261, 414, 262, 836, 0, 878, 879, 880, 881, 0,
	0, 417, 418, 931, 419, 932, 813, 420, 421, 422,
	0, 423, 424, 0, 799, 425, 426, 427, 428, 430,
	893, 431, 0, 844, 432, 433, 434, 482, 921, 0,
	436, 435, 484, 0, 0, 0, 0, 437, 438, 485,
	439, 440, 441, 794, 0, 0, 0, 0, 0, 0,
	0, 792, 0, 0, 0, 0, 790, 791, 0, 0,
	0, 0, 0, 0, 0, 819, 0, 0, 0, 0,
	2016, 817, 849, 807, 808, 805, 806, 818, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	209, 210, 211, 0, 212, 0, 0, 0, 0, 895,
	823, 0, 0, 0, 213, 214, 215, 443, 864, 843,
	875, 833, 874, 873, 0, 219, 835, 834, 222, 223,
	224, 825, 894, 225, 922, 923, 449, 0, 226, 901,
	0, 884, 0, 227, 228, 229, 230, 231, 0, 233,
	234, 235, 232, 0, 236, 0, 237, 238, 239, 0,
	904, 240, 241, 887, 885, 886, 891, 889, 888, 890,
	242, 243, 244, 245, 877, 247, 871, 870, 796, 248,
	0, 249, 0, 250, 0, 0, 251, 869, 253, 0,
	254, 0, 255, 256, 0, 802, 257, 258, 260, 263,
	259, 264, 265, 266, 924, 925, 814, 905, 0, 0,
	0, 0, 0, 267, 268, 269, 868, 866, 867, 0,
	272, 0, 273, 0, 0, 906, 274, 275, 0, 276,
	926, 0, 824, 277, 0, 278, 279, 280, 281, 282,
	283, 896, 897, 900, 908, 0, 898, 845, 0, 0,
	0, 0, 284, 286, 293, 0, 907, 287, 857, 848,
	859, 861, 862, 863, 858, 0, 850, 0, 294, 909,
	910, 295, 296, 297, 911, 882, 883, 0, 0, 300,
	301, 302, 303, 0, 305, 304, 0, 306, 927, 912,
	307, 308, 913, 0, 309, 310, 0, 0, 311, 0,
	312, 313, 798, 797, 314, 315, 317, 837, 316, 914,
	319, 320, 322, 321, 793, 0, 915, 815, 899, 872,
	323, 324, 0, 846, 847, 0, 0, 328, 329, 0,
	0, 330, 469, 916, 331, 917, 928, 332, 327, 333,
	334, 335, 336, 337, 338, 0, 339, 929, 340, 472,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	865, 349, 350, 0, 351, 352, 353, 354, 355, 0,
	357, 358, 359, 356, 360, 361, 362, 363, 0, 364,
	918, 365, 366, 367, 368, 803, 369, 0, 370, 374,
	375, 376, 377, 378, 379, 380, 0, 387, 388, 838,
	839, 841, 842, 382, 386, 389, 390, 892, 391, 371,
	372, 392, 919, 393, 860, 840, 395, 0, 405, 396,
	397, 398, 373, 399, 403, 903, 400, 401, 402, 930,
	0, 407, 408, 406, 0, 409, 410, 411, 412, 413,
	261, 414, 262, 836, 0, 878, 879, 880, 881, 0,
	0, 417, 418, 931, 419, 932, 813, 420, 421, 422,
	0, 423, 424, 0, 799, 425, 426, 427, 428, 430,
	893, 431, 0, 844, 432, 433, 434, 482, 921, 0,
	436, 435, 484, 0, 0, 0, 0, 437, 438, 485,
	439, 440, 441, 794, 0, 0, 0, 0, 0, 0,
	0, 792, 0, 0, 0, 0, 790, 791, 0, 0,
	0, 0, 0, 0, 0, 819, 0, 0, 0, 0,
	2014, 817, 849, 807, 808, 805, 806, 818, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	209, 210, 211, 0, 212, 0, 0, 0, 0, 895,
	823, 0, 0, 0, 213, 214, 215, 443, 864, 843,
	875, 833, 874, 873, 0, 219, 835, 834, 222, 223,
	224, 825, 894, 225, 922, 923, 449, 0, 226, 901,
	0, 884, 0, 227, 228, 229, 230, 231, 0, 233,
	234, 235, 232, 0, 236, 0, 237, 238, 239, 0,
	904, 240, 241, 887, 885, 886, 891, 889, 888, 890,
	242, 243, 244, 245, 877, 247, 871, 870, 796, 248,
	0, 249, 0, 250, 0, 0, 251, 869, 253, 0,
	254, 0, 255, 256, 0, 802, 257, 258, 260, 263,
	259, 264, 265, 266, 924, 925, 814, 905, 0, 0,
	0, 0, 0, 267, 268, 269, 868, 866, 867, 0,
	272, 0, 273, 0, 0, 906, 274, 275, 0, 276,
	926, 0, 824, 277, 0, 278, 279, 280, 281, 282,
	283, 896, 897, 900, 908, 0, 898, 845, 0, 0,
	0, 0, 284, 286, 293, 0, 907, 287, 857, 848,
	859, 861, 862, 863, 858, 0, 850, 0, 294, 909,
	910, 295, 296, 297, 911, 882, 883, 0, 0, 300,
	301, 302, 303, 0, 305, 304, 0, 306, 927, 912,
	307, 308, 913, 0, 309, 310, 0, 0, 311, 0,
	312, 313, 798, 797, 314, 315, 317, 837, 316, 914,
	319, 320, 322, 321, 793, 0, 915, 815, 899, 872,
	323, 324, 0, 846, 847, 0, 0, 328, 329, 0,
	0, 330, 469, 916, 331, 917, 928, 332, 327, 333,
	334, 335, 336, 337, 338, 0, 339, 929, 340, 472,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	865, 349, 350, 0, 351, 352, 353, 354, 355, 0,
	357, 358, 359, 356, 360, 361, 362, 363, 0, 364,
	918, 365, 366, 367, 368, 803, 369, 0, 370, 374,
	375, 376, 377, 378, 379, 380, 0, 387, 388, 838,
	839, 841, 842, 382, 386, 389, 390, 892, 391, 371,
	372, 392, 919, 393, 860, 840, 395, 0, 405, 396,
	397, 398, 373, 399, 403, 903, 400, 401, 402, 930,
	0, 407, 408, 406, 0, 409, 410, 411, 412, 413,
	261, 414, 262, 836, 0, 878, 879, 880, 881, 0,
	0, 417, 418, 931, 419, 932, 813, 420, 421, 422,
	0, 423, 424, 0, 799, 425, 426, 427, 428, 430,
	893, 431, 0, 844, 432, 433, 434, 482, 921, 0,
	436, 435, 484, 0, 0, 0, 0, 437, 438, 485,
	439, 440, 441, 794, 0, 0, 0, 0, 0, 0,
	0, 792, 0, 0, 0, 0, 790, 791, 0, 0,
	0, 0, 0, 0, 0, 819, 0, 0, 0, 0,
	2012, 817, 849, 807, 808, 805, 806, 818, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	209, 210, 211, 0, 212, 0, 0, 0, 0, 895,
	823, 0, 0, 0, 213, 214, 215, 443, 864, 843,
	875, 833, 874, 873, 0, 219, 835, 834, 222, 223,
	224, 825, 894, 225, 922, 923, 449, 0, 226, 901,
	0, 884, 0, 227, 228, 229, 230, 231, 0, 233,
	234, 235, 232, 0, 236, 0, 237, 238, 239, 0,
	904, 240, 241, 887, 885, 886, 891, 889, 888, 890,
	242, 243, 244, 245, 877, 247, 871, 870, 796, 248,
	0, 249, 0, 250, 0, 0, 251, 869, 253, 0,
	254, 0, 255, 256, 0, 802, 257, 258, 260, 263,
	259, 264, 265, 266, 924, 925, 814, 905, 0, 0,
	0, 0, 0, 267, 268, 269, 868, 866, 867, 0,
	272, 0, 273, 0, 0, 906, 274, 275, 0, 276,
	926, 0, 824, 277, 0, 278, 279, 280, 281, 282,
	283, 896, 897, 900, 908, 0, 898, 845, 0, 0,
	0, 0, 284, 286, 293, 0, 907, 287, 857, 848,
	859, 861, 862, 863, 858, 0, 850, 0, 294, 909,
	910, 295, 296, 297, 911, 882, 883, 0, 0, 300,
	301, 302, 303, 0, 305, 304, 0, 306, 927, 912,
	307, 308, 913, 0, 309, 310, 0, 0, 311, 0,
	312, 313, 798, 797, 314, 315, 317, 837, 316, 914,
	319, 320, 322, 321, 793, 0, 915, 815, 899, 872,
	323, 324, 0, 846, 847, 0, 0, 328, 329, 0,
	0, 330, 469, 916, 331, 917, 928, 332, 327, 333,
	334, 335, 336, 337, 338, 0, 339, 929, 340, 472,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	865, 349, 350, 0, 351, 352, 353, 354, 355, 0,
	357, 358, 359, 356, 360, 361, 362, 363, 0, 364,
	918, 365, 366, 367, 368, 803, 369, 0, 370, 374,
	375, 376, 377, 378, 379, 380, 0, 387, 388, 838,
	839, 841, 842, 382, 386, 389, 390, 892, 391, 371,
	372, 392, 919, 393, 860, 840, 395, 0, 405, 396,
	397, 398, 373, 399, 403, 903, 400, 401, 402, 930,
	0, 407, 408, 406, 0, 409, 410, 411, 412, 413,
	261, 414, 262, 836, 0, 878, 879, 880, 881, 0,
	0, 417, 418, 931, 419, 932, 813, 420, 421, 422,
	0, 423, 424, 0, 799, 425, 426, 427, 428, 430,
	893, 431, 0, 844, 432, 433, 434, 482, 921, 0,
	436, 435, 484, 0, 0, 0, 0, 437, 438, 485,
	439, 440, 441, 794, 0, 0, 0, 0, 0, 0,
	0, 792, 0, 0, 0, 0, 790, 791, 0, 0,
	0, 0, 0, 0, 0, 819, 0, 0, 0, 0,
	2010, 817, 2002, 807, 808, 805, 806, 818, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	209, 210, 211, 0, 212, 0, 0, 0, 0, 895,
	823, 0, 0, 0, 213, 214, 215, 443, 864, 843,
	875, 833, 874, 873, 0, 219, 835, 834, 222, 223,
	224, 825, 894, 225, 922, 923, 449, 0, 226, 901,
	0, 884, 0, 227, 228, 229, 230, 231, 0, 233,
	234, 235, 232, 0, 236, 0, 237, 238, 239, 0,
	904, 240, 241, 887, 885, 886, 891, 889, 888, 890,
	242, 243, 244, 245, 877, 2005, 871, 870, 796, 248,
	0, 249, 0, 250, 0, 0, 251, 869, 253, 0,
	254, 0, 255, 256, 0, 802, 257, 258, 260, 263,
	259, 264, 265, 266, 924, 925, 814, 905, 0, 0,
	0, 0, 0, 267, 268, 269, 868, 866, 867, 0,
	272, 0, 273, 0, 0, 906, 274, 275, 0, 276,
	926, 0, 824, 277, 0, 278, 279, 2006, 281, 282,
	283, 896, 897, 900, 908, 0, 898, 845, 0, 0,
	0, 0, 284, 286, 293, 0, 907, 287, 857, 848,
	859, 861, 862, 863, 858, 0, 850, 0, 294, 909,
	910, 295, 296, 297, 911, 882, 883, 0, 0, 300,
	301, 302, 303, 0, 305, 304, 0, 306, 927, 912,
	307, 308, 913, 0, 309, 310, 0, 0, 311, 0,
	312, 313, 798, 797, 2007, 2004, 317, 837, 316, 914,
	319, 320, 322, 321, 793, 0, 915, 815, 899, 872,
	323, 324, 0, 846, 847, 0, 0, 328, 329, 0,
	0, 330, 469, 916, 331, 917, 928, 332, 327, 333,
	334, 335, 336, 337, 338, 0, 339, 929, 340, 472,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	865, 349, 350, 0, 351, 352, 353, 354, 355, 0,
	357, 358, 359, 356, 360, 361, 362, 363, 0, 364,
	918, 365, 366, 367, 368, 803, 369, 0, 370, 374,
	375, 376, 377, 378, 379, 2008, 0, 387, 388, 838,
	839, 841, 842, 382, 386, 389, 390, 892, 391, 371,
	372, 392, 919, 393, 860, 840, 395, 0, 405, 396,
	397, 398, 373, 399, 403, 903, 400, 401, 402, 930,
	0, 407, 408, 406, 0, 409, 410, 411, 412, 413,
	261, 414, 262, 836, 0, 878, 879, 880, 881, 0,
	0, 417, 418, 931, 419, 932, 813, 420, 421, 422,
	0, 423, 424, 0, 799, 425, 426, 427, 428, 430,
	893, 431, 0, 844, 432, 433, 434, 482, 921, 0,
	436, 435, 484, 0, 0, 0, 0, 437, 438, 485,
	439, 2003, 441, 794, 0, 0, 0, 0, 0, 0,
	0, 792, 0, 0, 0, 0, 790, 791, 0, 0,
	0, 0, 0, 0, 0, 819, 0, 0, 0, 0,
	1999, 817, 2002, 807, 808, 805, 806, 818, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	209, 210, 211, 0, 212, 0, 0, 0, 0, 895,
	823, 0, 0, 0, 213, 214, 215, 443, 864, 843,
	875, 833, 874, 873, 0, 219, 835, 834, 222, 223,
	224, 825, 894, 225, 922, 923, 449, 0, 226, 901,
	0, 884, 0, 227, 228, 229, 230, 231, 0, 233,
	234, 235, 232, 0, 236, 0, 237, 238, 239, 0,
	904, 240, 241, 887, 885, 886, 891, 889, 888, 890,
	242, 243, 244, 245, 877, 2005, 871, 870, 796, 248,
	0, 249, 0, 250, 0, 0, 251, 869, 253, 0,
	254, 0, 255, 256, 0, 802, 257, 258, 260, 263,
	259, 264, 265, 266, 924, 925, 814, 905, 0, 0,
	0, 0, 0, 267, 268, 269, 868, 866, 867, 0,
	272, 0, 273, 0, 0, 906, 274, 275, 0, 276,
	926, 0, 824, 277, 0, 278, 279, 2006, 281, 282,
	283, 896, 897, 900, 908, 0, 898, 845, 0, 0,
	0, 0, 284, 286, 293, 0, 907, 287, 857, 848,
	859, 861, 862, 863, 858, 0, 850, 0, 294, 909,
	910, 295, 296, 297, 911, 882, 883, 0, 0, 300,
	301, 302, 303, 0, 305, 304, 0, 306, 927, 912,
	307, 308, 913, 0, 309, 310, 0, 0, 311, 0,
	312, 313, 798, 797, 2007, 2004, 317, 837, 316, 914,
	319, 320, 322, 321, 793, 0, 915, 815, 899, 872,
	323, 324, 0, 846, 847, 0, 0, 328, 329, 0,
	0, 330, 469, 916, 331, 917, 928, 332, 327, 333,
	334, 335, 336, 337, 338, 0, 339, 929, 340, 472,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	865, 349, 350, 0, 351, 352, 353, 354, 355, 0,
	357, 358, 359, 356, 360, 361, 362, 363, 0, 364,
	918, 365, 366, 367, 368, 803, 369, 0, 370, 374,
	375, 376, 377, 378, 379, 2008, 0, 387, 388, 838,
	839, 841, 842, 382, 386, 389, 390, 892, 391, 371,
	372, 392, 919, 393, 860, 840, 395, 0, 405, 396,
	397, 398, 373, 399, 403, 903, 400, 401, 402, 930,
	0, 407, 408, 406, 0, 409, 410, 411, 412, 413,
	261, 414, 262, 836, 0, 878, 879, 880, 881, 0,
	0, 417, 418, 931, 419, 932, 813, 420, 421, 422,
	0, 423, 424, 0, 799, 425, 426, 427, 428, 430,
	893, 431, 0, 844, 432, 433, 434, 482, 921, 0,
	436, 435, 484, 0, 0, 0, 0, 437, 438, 485,
	439, 2003, 441, 794, 0, 0, 0, 0, 0, 0,
	0, 792, 0, 0, 0, 0, 790, 791, 849, 807,
	808, 805, 806, 818, 0, 819, 0, 0, 0, 0,
	0, 817, 0, 0, 207, 208, 209, 210, 211, 0,
	212, 0, 0, 0, 0, 895, 823, 0, 0, 0,
	213, 214, 215, 443, 864, 843, 875, 833, 874, 873,
	0, 219, 835, 834, 222, 223, 224, 825, 894, 225,
	922, 923, 449, 0, 226, 901, 0, 884, 0, 227,
	228, 229, 230, 231, 0, 233, 234, 235, 232, 0,
	236, 0, 237, 238, 239, 0, 904, 240, 241, 887,
	885, 886, 891, 889, 888, 890, 242, 243, 244, 245,
	877, 247, 871, 870, 796, 248, 0, 249, 0, 250,
	0, 0, 251, 869, 253, 0, 254, 0, 255, 256,
	0, 802, 257, 258, 260, 263, 259, 264, 265, 266,
	924, 925, 814, 905, 0, 0, 0, 0, 0, 267,
	268, 269, 868, 866, 867, 0, 272, 0, 273, 0,
	0, 906, 274, 275, 0, 276, 926, 0, 824, 277,
	0, 278, 279, 280, 281, 282, 283, 896, 897, 900,
	908, 0, 898, 845, 0, 0, 0, 0, 284, 286,
	293, 0, 907, 287, 857, 848, 859, 861, 862, 863,
	858, 0, 850, 0, 294, 909, 910, 295, 296, 297,
	911, 882, 883, 0, 0, 300, 301, 302, 303, 0,
	305, 304, 0, 306, 927, 912, 307, 308, 913, 0,
	309, 310, 0, 0, 311, 0, 312, 313, 798, 797,
	314, 315, 317, 837, 316, 914, 319, 320, 322, 321,
	793, 0, 915, 815, 899, 872, 323, 324, 0, 846,
	847, 0, 0, 328, 329, 0, 0, 330, 469, 916,
	331, 917, 928, 332, 327, 333, 334, 335, 336, 337,
	338, 0, 339, 929, 340, 472, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 865, 349, 350, 0,
	351, 352, 353, 354, 355, 0, 357, 358, 359, 356,
	360, 361, 362, 363, 0, 364, 918, 365, 366, 367,
	368, 803, 369, 0, 370, 374, 375, 376, 377, 378,
	379, 380, 0, 387, 388, 838, 839, 841, 842, 382,
	386, 389, 390, 892, 391, 371, 372, 392, 919, 393,
	860, 840, 395, 0, 405, 396, 397, 398, 373, 399,
	403, 903, 400, 401, 402, 930, 0, 407, 408, 406,
	0, 409, 410, 411, 412, 413, 261, 414, 262, 836,
	0, 878, 879, 880, 881, 0, 0, 417, 418, 931,
	419, 932, 813, 420, 421, 422, 0, 423, 424, 0,
	799, 425, 426, 427, 428, 430, 893, 431, 0, 844,
	432, 433, 434, 482, 921, 0, 436, 435, 484, 0,
	0, 0, 0, 437, 438, 485, 439, 440, 441, 794,
	0, 0, 0, 0, 0, 0, 0, 792, 0, 0,
	0, 0, 790, 791, 0, 0, 0, 0, 0, 1461,
	0, 819, 0, 0, 0, 0, 0, 817, 849, 807,
	808, 805, 806, 818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 209, 210, 211, 1846,
	212, 0, 0, 0, 0, 895, 823, 0, 0, 0,
	213, 214, 215, 443, 864, 843, 875, 833, 874, 873,
	0, 219, 835, 834, 222, 223, 224, 825, 894, 225,
	922, 923, 449, 0, 226, 901, 0, 884, 0, 227,
	228, 229, 230, 231, 0, 233, 234, 235, 232, 0,
	236, 0, 237, 238, 239, 0, 904, 240, 241, 887,
	885, 886, 891, 889, 888, 890, 242, 243, 244, 245,
	877, 247, 871, 870, 796, 248, 0, 249, 0, 250,
	0, 0, 251, 869, 253, 0, 254, 0, 255, 256,
	0, 802, 257, 258, 260, 263, 259, 264, 265, 266,
	924, 925, 814, 905, 0, 0, 0, 0, 0, 267,
	268, 269, 868, 866, 867, 0, 272, 0, 273, 0,
	0, 906, 274, 275, 0, 276, 926, 0, 824, 277,
	0, 278, 279, 280, 281, 282, 283, 896, 897, 900,
	908, 0, 898, 845, 0, 0, 0, 0, 284, 286,
	293, 0, 907, 287, 857, 848, 859, 861, 862, 863,
	858, 0, 850, 0, 294, 909, 910, 295, 296, 297,
	911, 882, 883, 0, 0, 300, 301, 302, 303, 0,
	305, 304, 0, 306, 927, 912, 307, 308, 913, 0,
	309, 310, 0, 0, 311, 0, 312, 313, 798, 797,
	314, 315, 317, 837, 316, 914, 319, 320, 322, 321,
	793, 0, 915, 815, 899, 872, 323, 324, 0, 846,
	847, 0, 0, 328, 329, 0, 0, 330, 469, 916,
	331, 917, 928, 332, 327, 333, 334, 335, 336, 337,
	338, 0, 339, 929, 340, 472, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 865, 349, 350, 0,
	351, 352, 353, 354, 355, 0, 357, 358, 359, 356,
	360, 361, 362, 363, 0, 364, 918, 365, 366, 367,
	368, 803, 369, 0, 370, 374, 375, 376, 377, 378,
	379, 380, 0, 387, 388, 838, 839, 841, 842, 382,
	386, 389, 390, 892, 391, 371, 372, 392, 919, 393,
	860, 840, 395, 0, 405, 396, 397, 398, 373, 399,
	403, 903, 400, 401, 402, 930, 0, 407, 408, 406,
	0, 409, 410, 411, 412, 413, 261, 414, 262, 836,
	0, 878, 879, 880, 881, 0, 0, 417, 418, 931,
	419, 932, 813, 420, 421, 422, 0, 423, 424, 0,
	799, 425, 426, 427, 428, 430, 893, 431, 0, 844,
	432, 433, 434, 482, 921, 0, 436, 435, 484, 0,
	0, 0, 0, 437, 438, 485, 439, 440, 441, 794,
	0, 0, 0, 0, 0, 0, 0, 792, 0, 0,
	0, 0, 790, 791, 0, 0, 0, 0, 0, 0,
	0, 819, 0, 0, 0, 0, 1160, 817, 849, 807,
	808, 805, 806, 818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 209, 210, 211, 0,
	212, 0, 0, 0, 0, 895, 823, 0, 0, 0,
	213, 214, 215, 443, 864, 843, 875, 833, 874, 873,
	0, 219, 835, 834, 222, 223, 224, 825, 894, 225,
	922, 923, 449, 0, 226, 901, 0, 884, 0, 227,
	228, 229, 230, 231, 0, 233, 234, 235, 232, 0,
	236, 0, 237, 238, 239, 0, 904, 240, 241, 887,
	885, 886, 891, 889, 888, 890, 242, 243, 244, 245,
	877, 247, 871, 870, 796, 248, 0, 249, 0, 250,
	0, 0, 251, 869, 253, 0, 254, 0, 255, 256,
	0, 802, 257, 258, 260, 263, 259, 264, 265, 266,
	924, 925, 814, 905, 0, 0, 0, 0, 0, 267,
	268, 269, 868, 866, 867, 0, 272, 0, 273, 0,
	0, 906, 274, 275, 0, 276, 926, 0, 824, 277,
	0, 278, 279, 280, 281, 282, 283, 1159, 897, 900,
	908, 0, 898, 845, 0, 0, 0, 0, 284, 286,
	293, 0, 907, 287, 857, 848, 859, 861, 862, 863,
	858, 0, 850, 0, 294, 909, 910, 295, 296, 297,
	911, 882, 883, 0, 0, 300, 301, 302, 303, 0,
	305, 304, 0, 306, 927, 912, 307, 308, 913, 0,
	309, 310, 0, 0, 311, 0, 312, 313, 798, 797,
	314, 315, 317, 837, 316, 914, 319, 320, 322, 321,
	793, 0, 915, 815, 899, 872, 323, 324, 0, 846,
	847, 0, 0, 328, 329, 0, 0, 330, 469, 916,
	331, 917, 928, 332, 327, 333, 334, 335, 336, 337,
	338, 0, 339, 929, 340, 472, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 865, 349, 350, 0,
	351, 352, 353, 354, 355, 0, 357, 358, 359, 356,
	360, 361, 362, 363, 0, 364, 918, 365, 366, 367,
	368, 803, 369, 0, 370, 374, 375, 376, 377, 378,
	379, 380, 0, 387, 388, 838, 839, 841, 842, 382,
	386, 389, 390, 892, 391, 371, 372, 392, 919, 393,
	860, 840, 395, 0, 405, 396, 397, 398, 373, 399,
	403, 903, 400, 401, 402, 930, 0, 407, 408, 406,
	0, 409, 410, 411, 412, 413, 261, 414, 262, 836,
	0, 878, 879, 880, 881, 0, 0, 417, 418, 931,
	419, 932, 813, 420, 421, 422, 0, 423, 424, 0,
	799, 425, 426, 427, 428, 430, 893, 431, 0, 844,
	432, 433, 434, 482, 921, 0, 436, 435, 484, 0,
	0, 0, 0, 437, 438, 485, 439, 440, 441, 794,
	0, 0, 0, 0, 0, 0, 0, 792, 0, 0,
	0, 0, 790, 791, 0, 0, 0, 0, 0, 0,
	0, 819, 0, 0, 0, 0, 1154, 817, 849, 807,
	808, 805, 806, 818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 209, 210, 211, 0,
	212, 0, 0, 0, 0, 895, 823, 0, 0, 0,
	213, 214, 215, 443, 864, 843, 875, 833, 874, 873,
	0, 219, 835, 834, 222, 223, 224, 825, 894, 225,
	922, 923, 449, 0, 226, 901, 0, 884, 0, 227,
	228, 229, 230, 231, 0, 233, 234, 235, 232, 0,
	236, 0, 237, 238, 239, 0, 904, 240, 241, 887,
	885, 886, 891, 889, 888, 890, 242, 243, 244, 245,
	877, 247, 871, 870, 796, 248, 0, 249, 0, 250,
	0, 0, 251, 869, 253, 0, 254, 0, 255, 256,
	0, 802, 257, 258, 260, 263, 259, 264, 265, 266,
	924, 925, 814, 905, 0, 0, 0, 0, 0, 267,
	268, 269, 868, 866, 867, 0, 272, 0, 273, 0,
	0, 906, 274, 275, 0, 276, 926, 0, 824, 277,
	0, 278, 279, 280, 281, 282, 283, 1153, 897, 900,
	908, 0, 898, 845, 0, 0, 0, 0, 284, 286,
	293, 0, 907, 287, 857, 848, 859, 861, 862, 863,
	858, 0, 850, 0, 294, 909, 910, 295, 296, 297,
	911, 882, 883, 0, 0, 300, 301, 302, 303, 0,
	305, 304, 0, 306, 927, 912, 307, 308, 913, 0,
	309, 310, 0, 0, 311, 0, 312, 313, 798, 797,
	314, 315, 317, 837, 316, 914, 319, 320, 322, 321,
	793, 0, 915, 815, 899, 872, 323, 324, 0, 846,
	847, 0, 0, 328, 329, 0, 0, 330, 469, 916,
	331, 917, 928, 332, 327, 333, 334, 335, 336, 337,
	338, 0, 339, 929, 340, 472, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 865, 349, 350, 0,
	351, 352, 353, 354, 355, 0, 357, 358, 359, 356,
	360, 361, 362, 363, 0, 364, 918, 365, 366, 367,
	368, 803, 369, 0, 370, 374, 375, 376, 377, 378,
	379, 380, 0, 387, 388, 838, 839, 841, 842, 382,
	386, 389, 390, 892, 391, 371, 372, 392, 919, 393,
	860, 840, 395, 0, 405, 396, 397, 398, 373, 399,
	403, 903, 400, 401, 402, 930, 0, 407, 408, 406,
	0, 409, 410, 411, 412, 413, 261, 414, 262, 836,
	0, 878, 879, 880, 881, 0, 0, 417, 418, 931,
	419, 932, 813, 420, 421, 422, 0, 423, 424, 0,
	799, 425, 426, 427, 428, 430, 893, 431, 0, 844,
	432, 433, 434, 482, 921, 0, 436, 435, 484, 0,
	0, 0, 0, 437, 438, 485, 439, 440, 441, 794,
	0, 0, 0, 0, 0, 0, 0, 792, 0, 0,
	0, 0, 790, 791, 0, 0, 0, 0, 0, 0,
	0, 819, 0, 0, 0, 0, 1149, 817, 849, 807,
	808, 805, 806, 818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 209, 210, 211, 0,
	212, 0, 0, 0, 0, 895, 823, 0, 0, 0,
	213, 214, 215, 443, 864, 843, 875, 833, 874, 873,
	0, 219, 835, 834, 222, 223, 224, 825, 894, 225,
	922, 923, 449, 0, 226, 901, 0, 884, 0, 227,
	228, 229, 230, 231, 0, 233, 234, 235, 232, 0,
	236, 0, 237, 238, 239, 0, 904, 240, 241, 887,
	885, 886, 891, 889, 888, 890, 242, 243, 244, 245,
	877, 247, 871, 870, 796, 248, 0, 249, 0, 250,
	0, 0, 251, 869, 253, 0, 254, 0, 255, 256,
	0, 802, 257, 258, 260, 263, 259, 264, 265, 266,
	924, 925, 814, 905, 0, 0, 0, 0, 0, 267,
	268, 269, 868, 866, 867, 0, 272, 0, 273, 0,
	0, 906, 274, 275, 0, 276, 926, 0, 824, 277,
	0, 278, 279, 280, 281, 282, 283, 896, 897, 900,
	908, 0, 898, 845, 0, 0, 0, 0, 284, 286,
	293, 0, 907, 287, 857, 848, 859, 861, 862, 863,
	858, 0, 850, 0, 294, 909, 910, 295, 296, 297,
	911, 882, 883, 0, 0, 300, 301, 302, 303, 0,
	305, 304, 0, 306, 927, 912, 307, 308, 913, 0,
	309, 310, 0, 0, 311, 0, 312, 313, 798, 797,
	314, 315, 317, 837, 316, 914, 319, 320, 322, 321,
	793, 0, 915, 815, 899, 872, 323, 324, 0, 846,
	847, 0, 0, 328, 329, 0, 0, 330, 469, 916,
	331, 917, 928, 332, 327, 333, 334, 335, 336, 337,
	338, 0, 339, 929, 340, 472, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 865, 349, 350, 0,
	351, 352, 353, 354, 355, 0, 357, 358, 359, 356,
	360, 361, 362, 363, 0, 364, 918, 365, 366, 367,
	368, 803, 369, 0, 370, 374, 375, 376, 377, 378,
	379, 380, 0, 387, 388, 838, 839, 841, 842, 382,
	386, 389, 390, 892, 391, 371, 372, 392, 919, 393,
	860, 840, 395, 0, 405, 396, 397, 398, 373, 399,
	403, 903, 400, 401, 402, 930, 0, 407, 408, 406,
	0, 409, 410, 411, 412, 413, 261, 414, 262, 836,
	0, 878, 879, 880, 881, 0, 0, 417, 418, 931,
	419, 932, 813, 420, 421, 422, 0, 423, 424, 0,
	799, 425, 426, 427, 428, 430, 893, 431, 0, 844,
	432, 433, 434, 482, 921, 0, 436, 435, 484, 0,
	0, 0, 0, 437, 438, 485, 439, 440, 441, 794,
	0, 0, 0, 0, 0, 0, 0, 792, 0, 0,
	0, 0, 790, 791, 849, 807, 808, 805, 806, 818,
	0, 819, 0, 0, 0, 0, 0, 817, 0, 0,
	207, 208, 209, 210, 211, 0, 212, 0, 0, 0,
	0, 895, 823, 0, 0, 0, 213, 214, 215, 443,
	864, 843, 875, 833, 874, 873, 0, 219, 835, 834,
	222, 223, 224, 825, 894, 225, 922, 923, 449, 0,
	226, 901, 0, 884, 0, 227, 228, 229, 230, 231,
	0, 233, 234, 235, 232, 0, 236, 0, 237, 238,
	239, 0, 904, 240, 241, 887, 885, 886, 891, 889,
	888, 890, 242, 243, 244, 245, 877, 247, 871, 870,
	796, 248, 0, 249, 0, 250, 0, 0, 251, 869,
	253, 0, 254, 0, 255, 256, 0, 802, 257, 258,
	260, 263, 259, 264, 265, 266, 924, 925, 814, 905,
	0, 0, 0, 0, 0, 267, 268, 269, 868, 866,
	867, 0, 272, 0, 273, 0, 0, 906, 274, 275,
	0, 276, 926, 0, 824, 277, 0, 278, 279, 280,
	281, 282, 283, 896, 897, 900, 908, 0, 898, 845,
	0, 0, 0, 0, 284, 286, 293, 0, 907, 287,
	857, 848, 859, 861, 862, 863, 858, 0, 850, 0,
	294, 909, 910, 295, 296, 297, 911, 882, 883, 0,
	0, 300, 301, 302, 303, 0, 305, 304, 0, 306,
	927, 912, 307, 308, 913, 0, 309, 310, 0, 0,
	311, 0, 312, 313, 798, 797, 314, 315, 317, 837,
	316, 914, 319, 320, 322, 321, 793, 0, 915, 815,
	899, 872, 323, 324, 0, 846, 847, 0, 0, 328,
	329, 0, 0, 330, 469, 916, 331, 917, 928, 332,
	327, 333, 334, 335, 336, 337, 338, 0, 339, 929,
	340, 472, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 865, 349, 350, 0, 351, 352, 353, 354,
	355, 0, 357, 358, 359, 356, 360, 361, 362, 363,
	0, 364, 918, 365, 366, 367, 368, 803, 369, 0,
	370, 374, 375, 376, 377, 378, 379, 380, 0, 387,
	388, 838, 839, 841, 842, 382, 386, 389, 390, 892,
	391, 371, 372, 392, 919, 393, 860, 840, 395, 0,
	405, 396, 397, 398, 373, 399, 403, 903, 400, 401,
	402, 930, 0, 407, 408, 406, 0, 409, 410, 411,
	412, 413, 261, 414, 262, 836, 0, 878, 879, 880,
	881, 0, 0, 417, 418, 931, 419, 932, 813, 420,
	421, 422, 0, 423, 424, 0, 799, 425, 426, 427,
	428, 430, 893, 431, 0, 844, 432, 433, 434, 482,
	921, 0, 436, 435, 484, 0, 0, 0, 0, 437,
	438, 485, 439, 440, 441, 794, 0, 0, 0, 0,
	0, 0, 0, 792, 0, 0, 0, 0, 790, 791,
	849, 807, 808, 805, 806, 818, 0, 819, 0, 0,
	0, 0, 0, 817, 0, 0, 207, 208, 209, 210,
	211, 0, 212, 0, 0, 0, 0, 895, 823, 0,
	0, 0, 213, 214, 215, 443, 864, 843, 875, 833,
	874, 873, 0, 219, 835, 834, 222, 223, 224, 825,
	894, 225, 922, 923, 449, 0, 226, 901, 0, 884,
	0, 227, 228, 229, 230, 231, 0, 233, 234, 235,
	232, 0, 236, 0, 237, 238, 239, 0, 904, 240,
	3214, 887, 885, 886, 891, 889, 888, 890, 242, 243,
	244, 245, 877, 247, 871, 870, 796, 248, 0, 249,
	0, 250, 0, 0, 251, 869, 253, 0, 254, 0,
	255, 256, 0, 802, 257, 258, 260, 263, 259, 264,
	265, 266, 924, 925, 814, 905, 0, 0, 0, 0,
	0, 267, 268, 269, 868, 866, 867, 0, 272, 0,
	273, 0, 0, 906, 274, 275, 0, 276, 926, 0,
	824, 277, 0, 278, 279, 280, 281, 282, 283, 896,
	897, 900, 908, 0, 898, 845, 0, 0, 0, 0,
	284, 286, 293, 0, 907, 287, 857, 848, 859, 861,
	862, 863, 858, 0, 850, 0, 294, 909, 910, 295,
	296, 297, 911, 882, 883, 0, 0, 300, 301, 302,
	303, 0, 305, 304, 0, 306, 927, 912, 307, 308,
	913, 0, 309, 310, 0, 0, 311, 0, 312, 313,
	798, 797, 314, 315, 317, 837, 316, 914, 319, 320,
	322, 321, 793, 0, 915, 815, 899, 872, 323, 324,
	0, 846, 847, 0, 0, 328, 329, 0, 0, 330,
	469, 916, 331, 917, 928, 332, 327, 333, 334, 335,
	336, 337, 338, 0, 339, 929, 340, 472, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 865, 349,
	350, 0, 351, 352, 353, 354, 355, 0, 357, 358,
	359, 356, 360, 361, 362, 363, 0, 364, 918, 365,
	366, 367, 368, 803, 369, 0, 370, 374, 375, 376,
	377, 378, 379, 380, 0, 387, 388, 838, 839, 841,
	842, 382, 386, 389, 390, 892, 391, 371, 372, 392,
	919, 393, 860, 840, 395, 0, 405, 396, 397, 398,
	373, 399, 403, 903, 400, 401, 402, 930, 0, 407,
	408, 406, 0, 409, 410, 411, 412, 413, 261, 414,
	262, 836, 0, 878, 879, 880, 881, 0, 0, 417,
	418, 931, 419, 932, 813, 420, 421, 422, 0, 3213,
	424, 0, 799, 425, 426, 427, 428, 430, 893, 431,
	0, 844, 432, 433, 434, 482, 921, 0, 436, 435,
	484, 0, 0, 0, 0, 437, 438, 485, 439, 440,
	441, 794, 0, 0, 0, 0, 0, 0, 0, 792,
	0, 0, 0, 0, 790, 791, 849, 807, 808, 805,
	806, 818, 0, 819, 0, 0, 0, 0, 0, 817,
	0, 0, 207, 208, 209, 210, 211, 0, 212, 0,
	0, 0, 0, 895, 823, 0, 0, 0, 213, 214,
	215, 3212, 864, 843, 875, 833, 874, 873, 0, 219,
	835, 834, 222, 223, 224, 825, 894, 225, 922, 923,
	449, 0, 226, 901, 0, 884, 0, 227, 228, 229,
	230, 231, 0, 233, 234, 235, 232, 0, 236, 0,
	237, 238, 239, 0, 904, 240, 3214, 887, 885, 886,
	891, 889, 888, 890, 242, 243, 244, 245, 877, 247,
	871, 870, 796, 248, 0, 249, 0, 250, 0, 0,
	251, 869, 253, 0, 254, 0, 255, 256, 0, 802,
	257, 258, 260, 263, 259, 264, 265, 266, 924, 925,
	814, 905, 0, 0, 0, 0, 0, 267, 268, 269,
	868, 866, 867, 0, 272, 0, 273, 0, 0, 906,
	274, 275, 0, 276, 926, 0, 824, 277, 0, 278,
	279, 280, 281, 282, 283, 896, 897, 900, 908, 0,
	898, 845, 0, 0, 0, 0, 284, 286, 293, 0,
	907, 287, 857, 848, 859, 861, 862, 863, 858, 0,
	850, 0, 294, 909, 910, 295, 296, 297, 911, 882,
	883, 0, 0, 300, 301, 302, 303, 0, 305, 304,
	0, 306, 927, 912, 307, 308, 913, 0, 309, 310,
	0, 0, 311, 0, 312, 313, 798, 797, 314, 315,
	317, 837, 316, 914, 319, 320, 322, 321, 793, 0,
	915, 815, 899, 872, 323, 324, 0, 846, 847, 0,
	0, 328, 329, 0, 0, 330, 469, 916, 331, 917,
	928, 332, 327, 333, 334, 335, 336, 337, 338, 0,
	339, 929, 340, 472, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 865, 349, 350, 0, 351, 352,
	353, 354, 355, 0, 357, 358, 359, 356, 360, 361,
	362, 363, 0, 364, 918, 365, 366, 367, 368, 803,
	369, 0, 370, 374, 375, 376, 377, 378, 379, 380,
	0, 387, 388, 838, 839, 841, 842, 382, 386, 389,
	390, 892, 391, 371, 372, 392, 919, 393, 860, 840,
	395, 0, 405, 396, 397, 398, 373, 399, 403, 903,
	400, 401, 402, 930, 0, 407, 408, 406, 0, 409,
	410, 411, 412, 413, 261, 414, 262, 836, 0, 878,
	879, 880, 881, 0, 0, 417, 418, 931, 419, 932,
	813, 420, 421, 422, 0, 3213, 424, 0, 799, 425,
	426, 427, 428, 430, 893, 431, 0, 844, 432, 433,
	434, 482, 921, 0, 436, 435, 484, 0, 0, 0,
	0, 437, 438, 485, 439, 440, 441, 794, 0, 0,
	0, 0, 0, 0, 0, 792, 0, 0, 0, 0,
	790, 791, 849, 807, 808, 805, 806, 818, 0, 819,
	0, 0, 0, 0, 0, 817, 0, 0, 207, 208,
	209, 210, 211, 0, 212, 0, 0, 0, 0, 895,
	823, 0, 0, 0, 213, 214, 215, 443, 864, 843,
	875, 833, 874, 873, 0, 219, 835, 834, 222, 223,
	224, 825, 894, 225, 922, 923, 449, 0, 226, 901,
	0, 884, 0, 227, 228, 229, 230, 231, 0, 233,
	234, 235, 232, 0, 236, 0, 237, 238, 239, 0,
	904, 240, 241, 887, 885, 886, 891, 889, 888, 890,
	242, 243, 244, 245, 877, 247, 871, 870, 0, 248,
	0, 249, 0, 250, 0, 0, 251, 869, 253, 0,
	254, 0, 255, 256, 0, 802, 257, 258, 260, 263,
	259, 264, 265, 266, 924, 925, 814, 905, 0, 0,
	0, 0, 0, 267, 268, 269, 868, 866, 867, 0,
	272, 0, 273, 0, 0, 906, 274, 275, 0, 276,
	926, 0, 824, 277, 0, 278, 279, 280, 281, 282,
	283, 896, 897, 900, 908, 0, 898, 845, 0, 0,
	0, 0, 284, 286, 293, 0, 907, 287, 857, 848,
	859, 861, 862, 863, 858, 0, 850, 0, 294, 909,
	910, 295, 296, 297, 911, 882, 883, 0, 0, 300,
	301, 302, 303, 0, 305, 304, 0, 306, 927, 912,
	307, 308, 913, 0, 309, 310, 0, 0, 311, 0,
	312, 313, 970, 969, 314, 315, 317, 837, 316, 914,
	319, 320, 322, 321, 0, 0, 915, 815, 899, 872,
	323, 324, 0, 846, 847, 0, 0, 328, 329, 0,
	0, 330, 469, 916, 331, 917, 928, 332, 327, 333,
	334, 335, 336, 337, 338, 0, 339, 929, 340, 472,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	865, 349, 350, 0, 351, 352, 353, 354, 355, 0,
	357, 358, 359, 356, 360, 361, 362, 363, 0, 364,
	918, 365, 366, 367, 368, 803, 369, 0, 370, 374,
	375, 376, 377, 378, 379, 380, 0, 387, 388, 838,
	839, 841, 842, 382, 386, 389, 390, 892, 391, 371,
	372, 392, 919, 393, 860, 840, 395, 0, 405, 396,
	397, 398, 373, 399, 403, 903, 400, 401, 402, 930,
	0, 407, 408, 406, 0, 409, 410, 411, 412, 413,
	261, 414, 262, 836, 0, 878, 879, 880, 881, 0,
	0, 417, 418, 931, 419, 932, 813, 420, 421, 422,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 430,
	893, 431, 0, 844, 432, 433, 434, 482, 921, 0,
	436, 435, 484, 0, 0, 0, 0, 437, 438, 485,
	439, 440, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 2024, 0, 0, 0, 0, 2022, 2023, 849, 807,
	808, 805, 806, 818, 0, 819, 0, 0, 0, 0,
	0, 817, 0, 0, 207, 208, 209, 210, 211, 0,
	212, 0, 0, 0, 0, 895, 823, 0, 0, 0,
	213, 214, 215, 0, 864, 843, 875, 833, 874, 873,
	0, 219, 835, 834, 222, 223, 224, 825, 894, 225,
	922, 923, 449, 0, 226, 901, 0, 884, 0, 227,
	228, 229, 230, 231, 0, 233, 234, 235, 232, 0,
	236, 0, 237, 238, 239, 0, 904, 240, 3214, 887,
	885, 886, 891, 889, 888, 890, 242, 243, 244, 245,
	877, 247, 871, 870, 796, 248, 0, 249, 0, 250,
	0, 0, 251, 869, 253, 0, 254, 0, 255, 256,
	0, 802, 257, 258, 260, 263, 259, 264, 265, 266,
	924, 925, 814, 905, 0, 0, 0, 0, 0, 267,
	268, 269, 868, 866, 867, 0, 272, 0, 273, 0,
	0, 906, 274, 275, 0, 276, 926, 0, 824, 277,
	0, 278, 279, 280, 281, 282, 283, 896, 897, 900,
	0, 0, 898, 845, 0, 0, 0, 0, 284, 286,
	293, 0, 907, 287, 857, 848, 859, 861, 862, 863,
	858, 0, 850, 0, 294, 0, 0, 295, 296, 297,
	911, 882, 883, 0, 0, 300, 301, 302, 303, 0,
	305, 304, 0, 306, 927, 912, 307, 308, 0, 0,
	309, 310, 0, 0, 311, 0, 312, 313, 798, 797,
	314, 315, 317, 837, 316, 914, 319, 320, 322, 321,
	793, 0, 0, 815, 899, 872, 323, 324, 0, 846,
	847, 0, 0, 328, 329, 0, 0, 330, 469, 916,
	331, 917, 928, 332, 327, 333, 334, 335, 336, 337,
	338, 0, 339, 929, 340, 472, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 865, 349, 350, 0,
	351, 352, 353, 354, 355, 0, 357, 358, 359, 356,
	360, 361, 362, 363, 0, 364, 918, 365, 366, 367,
	368, 803, 369, 0, 370, 374, 375, 376, 377, 378,
	379, 380, 0, 387, 388, 838, 839, 841, 842, 382,
	386, 389, 390, 892, 391, 371, 372, 392, 0, 393,
	860, 840, 395, 0, 405, 396, 397, 398, 373, 399,
	403, 903, 400, 401, 402, 930, 0, 407, 408, 406,
	0, 409, 410, 411, 412, 413, 261, 414, 262, 836,
	0, 878, 879, 880, 881, 0, 0, 417, 418, 931,
	419, 932, 813, 420, 421, 422, 0, 3213, 424, 0,
	799, 425, 426, 427, 428, 430, 893, 431, 0, 844,
	432, 433, 434, 482, 921, 0, 436, 435, 484, 0,
	0, 0, 0, 437, 438, 485, 439, 440, 441, 0,
	0, 0, 0, 0, 783, 0, 968, 0, 0, 0,
	0, 0, 790, 791, 0, 0, 0, 0, 0, 0,
	0, 819, 207, 208, 209, 210, 211, 817, 212, 0,
	0, 0, 0, 895, 0, 0, 0, 0, 213, 214,
	215, 443, 444, 216, 445, 217, 218, 446, 0, 219,
	220, 221, 222, 223, 224, 0, 894, 225, 447, 448,
	449, 0, 226, 901, 0, 884, 0, 227, 228, 229,
	230, 231, 0, 233, 234, 235, 232, 0, 236, 0,
	237, 238, 239, 0, 904, 240, 241, 887, 885, 886,
	891, 889, 888, 890, 242, 243, 244, 245, 246, 247,
	451, 452, 0, 248, 0, 249, 0, 250, 0, 0,
	251, 252, 253, 0, 254, 0, 255, 256, 0, 453,
	257, 258, 260, 263, 259, 264, 265, 266, 924, 925,
	0, 905, 0, 0, 0, 0, 0, 267, 268, 269,
	456, 270, 271, 0, 272, 0, 273, 0, 0, 906,
	274, 275, 0, 276, 926, 0, 458, 277, 0, 278,
	279, 280, 281, 282, 283, 896, 897, 900, 908, 0,
	898, 285, 0, 0, 0, 0, 284, 286, 293, 0,
	907, 287, 462, 289, 288, 290, 291, 292, 463, 0,
	464, 0, 294, 909, 910, 295, 296, 297, 911, 298,
	299, 0, 0, 300, 301, 302, 303, 955, 305, 304,
	0, 306, 927, 912, 307, 308, 913, 0, 309, 310,
	0, 0, 311, 0, 312, 313, 970, 969, 314, 315,
	317, 318, 316, 914, 319, 320, 322, 321, 0, 0,
	915, 0, 899, 468, 323, 324, 0, 325, 326, 0,
	960, 328, 329, 0, 0, 330, 469, 916, 331, 917,
	928, 332, 327, 333, 334, 335, 336, 337, 338, 0,
	339, 929, 340, 472, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 473, 349, 350, 0, 351, 352,
	353, 354, 355, 0, 357, 358, 359, 356, 360, 361,
	362, 363, 0, 364, 918, 365, 366, 367, 368, 474,
	962, 0, 370, 374, 375, 376, 377, 378, 379, 380,
	176, 387, 388, 381, 383, 384, 385, 382, 386, 389,
	390, 892, 391, 371, 372, 392, 919, 393, 475, 394,
	395, 0, 405, 396, 397, 398, 373, 399, 403, 404,
	400, 401, 402, 930, 0, 407, 408, 406, 178, 409,
	410, 411, 412, 413, 261, 414, 262, 415, 0, 477,
	478, 479, 416, 0, 0, 417, 418, 931, 419, 932,
	0, 420, 421, 422, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 430, 893, 431, 0, 429, 432, 433,
	434, 1268, 483, 0, 436, 435, 484, 0, 968, 0,
	170, 437, 438, 485, 439, 440, 441, 0, 171, 0,
	0, 0, 0, 0, 207, 208, 209, 210, 211, 0,
	212, 0, 0, 0, 0, 895, 0, 952, 0, 1537,
	213, 214, 215, 443, 444, 216, 445, 217, 218, 446,
	0, 219, 220, 221, 222, 223, 224, 0, 894, 225,
	447, 448, 449, 0, 226, 901, 0, 884, 0, 227,
	228, 229, 230, 231, 0, 233, 234, 235, 232, 0,
	236, 0, 237, 238, 239, 0, 904, 240, 241, 887,
	885, 886, 891, 889, 888, 890, 242, 243, 244, 245,
	246, 247, 451, 452, 0, 248, 0, 249, 0, 250,
	0, 0, 251, 252, 253, 0, 254, 0, 255, 256,
	0, 453, 257, 258, 260, 263, 259, 264, 265, 266,
	924, 925, 0, 905, 0, 0, 0, 0, 0, 267,
	268, 269, 456, 270, 271, 0, 272, 0, 273, 0,
	0, 906, 274, 275, 0, 276, 926, 0, 458, 277,
	0, 278, 279, 280, 281, 282, 283, 896, 897, 900,
	908, 0, 898, 285, 0, 0, 0, 0, 284, 286,
	293, 0, 907, 287, 462, 289, 288, 290, 291, 292,
	463, 0, 464, 0, 294, 909, 910, 295, 296, 297,
	911, 298, 299, 0, 0, 300, 301, 302, 303, 955,
	305, 304, 0, 306, 927, 912, 307, 308, 913, 0,
	309, 310, 0, 0, 311, 0, 312, 313, 970, 969,
	314, 315, 317, 318, 316, 914, 319, 320, 322, 321,
	0, 0, 915, 0, 899, 468, 323, 324, 0, 325,
	326, 0, 960, 328, 329, 0, 0, 330, 469, 916,
	331, 917, 928, 332, 327, 333, 334, 335, 336, 337,
	338, 0, 339, 929, 340, 472, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 473, 349, 350, 0,
	351, 352, 353, 354, 355, 0, 357, 358, 359, 356,
	360, 361, 362, 363, 0, 364, 918, 365, 366, 367,
	368, 474, 962, 0, 370, 374, 375, 376, 377, 378,
	379, 380, 176, 387, 388, 381, 383, 384, 385, 382,
	386, 389, 390, 892, 391, 371, 372, 392, 919, 393,
	475, 394, 395, 0, 405, 396, 397, 398, 373, 399,
	403, 404, 400, 401, 402, 930, 0, 407, 408, 406,
	178, 409, 410, 411, 412, 413, 261, 414, 262, 415,
	0, 477, 478, 479, 416, 0, 0, 417, 418, 931,
	419, 932, 0, 420, 421, 422, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 430, 893, 431, 0, 429,
	432, 433, 434, 1268, 483, 0, 436, 435, 484, 2430,
	0, 968, 170, 437, 438, 485, 439, 440, 441, 0,
	171, 0, 0, 0, 0, 0, 0, 207, 208, 209,
	210, 211, 0, 212, 0, 0, 0, 0, 895, 952,
	0, 1537, 0, 213, 214, 215, 443, 444, 216, 445,
	217, 218, 446, 0, 219, 220, 221, 222, 223, 224,
	0, 894, 225, 447, 448, 449, 0, 226, 901, 0,
	884, 0, 227, 228, 229, 230, 231, 0, 233, 234,
	235, 232, 0, 236, 0, 237, 238, 239, 0, 904,
	240, 241, 887, 885, 886, 891, 889, 888, 890, 242,
	243, 244, 245, 246, 247, 451, 452, 0, 248, 0,
	249, 0, 250, 0, 0, 251, 252, 253, 0, 254,
	0, 255, 256, 0, 453, 257, 258, 260, 263, 259,
	264, 265, 266, 924, 925, 0, 905, 0, 0, 0,
	0, 0, 267, 268, 269, 456, 270, 271, 0, 272,
	0, 273, 0, 0, 906, 274, 275, 0, 276, 926,
	0, 458, 277, 0, 278, 279, 280, 281, 282, 283,
	896, 897, 900, 908, 0, 898, 285, 0, 0, 0,
	0, 284, 286, 293, 0, 907, 287, 462, 289, 288,
	290, 291, 292, 463, 0, 464, 0, 294, 909, 910,
	295, 296, 297, 911, 298, 299, 0, 0, 300, 301,
	302, 303, 955, 305, 304, 0, 306, 927, 912, 307,
	308, 913, 0, 309, 310, 0, 0, 311, 0, 312,
	313, 970, 969, 314, 315, 317, 318, 316, 914, 319,
	320, 322, 321, 0, 0, 915, 0, 899, 468, 323,
	324, 0, 325, 326, 0, 960, 328, 329, 0, 0,
	330, 469, 916, 331, 917, 928, 332, 327, 333, 334,
	335, 336, 337, 338, 0, 339, 929, 340, 472, 341,
	0, 342, 0, 343, 344, 345, 346, 347, 348, 473,
	349, 350, 0, 351, 352, 353, 354, 355, 0, 357,
	358, 359, 356, 360, 361, 362, 363, 0, 364, 918,
	365, 366, 367, 368, 474, 962, 0, 370, 374, 375,
	376, 377, 378, 379, 380, 0, 387, 388, 381, 383,
	384, 385, 382, 386, 389, 390, 892, 391, 371, 372,
	392, 919, 393, 475, 394, 395, 0, 405, 396, 397,
	398, 373, 399, 403, 404, 400, 401, 402, 930, 0,
	407, 408, 406, 0, 409, 410, 411, 412, 413, 261,
	414, 262, 415, 0, 477, 478, 479, 416, 0, 0,
	417, 418, 931, 419, 932, 0, 420, 421, 422, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 430, 893,
	431, 0, 429, 432, 433, 434, 482, 483, 0, 436,
	435, 484, 951, 0, 968, 0, 437, 438, 485, 439,
	440, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 208, 209, 210, 211, 0, 212, 0, 0, 0,
	0, 895, 952, 0, 957, 0, 213, 214, 215, 443,
	444, 216, 445, 217, 218, 446, 0, 219, 220, 221,
	222, 223, 224, 0, 894, 225, 447, 448, 449, 0,
	226, 901, 0, 884, 0, 227, 228, 229, 230, 231,
	0, 233, 234, 235, 232, 0, 236, 0, 237, 238,
	239, 0, 904, 240, 241, 887, 885, 886, 891, 889,
	888, 890, 242, 243, 244, 245, 246, 247, 451, 452,
	0, 248, 0, 249, 0, 250, 0, 0, 251, 252,
	253, 0, 254, 0, 255, 256, 0, 453, 257, 258,
	260, 263, 259, 264, 265, 266, 924, 925, 0, 905,
	0, 0, 0, 0, 0, 267, 268, 269, 456, 270,
	271, 0, 272, 0, 273, 0, 0, 906, 274, 275,
	0, 276, 926, 0, 458, 277, 0, 278, 279, 280,
	281, 282, 283, 896, 897, 900, 908, 0, 898, 285,
	0, 0, 0, 0, 284, 286, 293, 0, 907, 287,
	462, 289, 288, 290, 291, 292, 463, 0, 464, 0,
	294, 909, 910, 295, 296, 297, 911, 298, 299, 0,
	0, 300, 301, 302, 303, 955, 305, 304, 0, 306,
	927, 912, 307, 308, 913, 0, 309, 310, 0, 0,
	311, 0, 312, 313, 970, 969, 314, 315, 317, 318,
	316, 914, 319, 320, 322, 321, 0, 0, 915, 0,
	899, 468, 323, 324, 0, 325, 326, 0, 960, 328,
	329, 0, 0, 330, 469, 916, 331, 917, 928, 332,
	327, 333, 334, 335, 336, 337, 338, 0, 339, 929,
	340, 472, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 473, 349, 350, 0, 351, 352, 353, 354,
	355, 0, 357, 358, 359, 356, 360, 361, 362, 363,
	0, 364, 918, 365, 366, 367, 368, 474, 962, 0,
	370, 374, 375, 376, 377, 378, 379, 380, 0, 387,
	388, 381, 383, 384, 385, 382, 386, 389, 390, 892,
	391, 371, 372, 392, 919, 393, 475, 394, 395, 0,
	405, 396, 397, 398, 373, 399, 403, 404, 400, 401,
	402, 930, 0, 407, 408, 406, 0, 409, 410, 411,
	412, 413, 261, 414, 262, 415, 0, 477, 478, 479,
	416, 0, 0, 417, 418, 931, 419, 932, 0, 420,
	421, 422, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 430, 893, 431, 0, 429, 432, 433, 434, 482,
	483, 0, 436, 435, 484, 0, 968, 0, 0, 437,
	438, 485, 439, 440, 441, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 209, 210, 211, 0, 212, 0,
	0, 0, 0, 895, 0, 952, 0, 957, 213, 214,
	215, 443, 444, 216, 445, 217, 218, 446, 0, 219,
	220, 221, 222, 223, 224, 0, 894, 225, 447, 448,
	449, 0, 226, 901, 0, 884, 0, 227, 228, 229,
	230, 231, 0, 233, 234, 235, 232, 0, 236, 0,
	237, 238, 239, 0, 904, 240, 241, 887, 885, 886,
	891, 889, 888, 890, 242, 243, 244, 245, 246, 247,
	451, 452, 0, 248, 0, 249, 0, 250, 0, 0,
	251, 252, 253, 0, 254, 0, 255, 256, 0, 453,
	257, 258, 260, 263, 259, 264, 265, 266, 924, 925,
	0, 905, 0, 0, 0, 0, 0, 267, 268, 269,
	456, 270, 271, 0, 272, 0, 273, 0, 0, 906,
	274, 275, 0, 276, 926, 0, 458, 277, 0, 278,
	279, 280, 281, 282, 283, 896, 897, 900, 908, 0,
	898, 285, 0, 0, 0, 0, 284, 286, 293, 0,
	907, 287, 462, 289, 288, 290, 291, 292, 463, 0,
	464, 0, 294, 909, 910, 295, 296, 297, 911, 298,
	299, 0, 0, 300, 301, 302, 303, 955, 305, 304,
	0, 306, 927, 912, 307, 308, 913, 0, 309, 310,
	0, 0, 311, 0, 312, 313, 970, 969, 314, 315,
	317, 318, 316, 914, 319, 320, 322, 321, 0, 0,
	915, 0, 899, 468, 323, 324, 0, 325, 326, 0,
	960, 328, 329, 0, 0, 330, 469, 916, 331, 917,
	928, 332, 327, 333, 334, 335, 336, 337, 338, 0,
	339, 929, 340, 472, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 473, 349, 350, 0, 351, 352,
	353, 354, 355, 0, 357, 358, 359, 356, 360, 361,
	362, 363, 0, 364, 918, 365, 366, 367, 368, 474,
	962, 0, 370, 374, 375, 376, 377, 378, 379, 380,
	0, 387, 388, 381, 383, 384, 385, 382, 386, 389,
	390, 892, 391, 371, 372, 392, 919, 393, 475, 394,
	395, 0, 405, 396, 397, 398, 373, 399, 403, 404,
	400, 401, 402, 930, 0, 407, 408, 406, 0, 409,
	410, 411, 412, 413, 261, 414, 262, 415, 0, 477,
	478, 479, 416, 0, 0, 417, 418, 931, 419, 932,
	0, 420, 421, 422, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 430, 893, 431, 0, 429, 432, 433,
	434, 482, 483, 0, 436, 435, 484, 0, 968, 0,
	0, 437, 438, 485, 439, 440, 441, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 209, 210, 211, 0,
	212, 0, 0, 0, 0, 895, 0, 952, 0, 957,
	213, 214, 215, 443, 444, 216, 445, 217, 218, 446,
	0, 219, 220, 221, 222, 223, 224, 0, 894, 225,
	447, 448, 449, 0, 226, 901, 0, 884, 0, 227,
	228, 229, 230, 231, 0, 233, 234, 235, 232, 0,
	236, 0, 237, 238, 239, 0, 904, 240, 241, 887,
	885, 886, 891, 889, 888, 890, 242, 243, 244, 245,
	246, 247, 451, 452, 0, 248, 0, 249, 0, 250,
	0, 0, 251, 252, 253, 0, 254, 0, 255, 256,
	0, 453, 257, 258, 260, 263, 259, 264, 265, 266,
	924, 925, 0, 905, 0, 0, 0, 0, 0, 267,
	268, 269, 456, 270, 271, 0, 272, 0, 273, 0,
	0, 906, 274, 275, 0, 276, 926, 0, 458, 277,
	0, 278, 279, 280, 281, 282, 283, 896, 897, 900,
	908, 0, 898, 285, 0, 0, 0, 0, 284, 286,
	293, 0, 907, 287, 462, 289, 288, 290, 291, 292,
	463, 0, 464, 0, 294, 909, 910, 295, 296, 297,
	911, 298, 299, 0, 0, 300, 301, 302, 303, 0,
	305, 304, 0, 306, 927, 912, 307, 308, 913, 0,
	309, 310, 0, 0, 311, 0, 312, 313, 970, 969,
	314, 315, 317, 318, 316, 914, 319, 320, 322, 321,
	0, 0, 915, 0, 899, 468, 323, 324, 0, 325,
	326, 0, 0, 328, 329, 0, 0, 330, 469, 916,
	331, 917, 928, 332, 327, 333, 334, 335, 336, 337,
	338, 0, 339, 929, 340, 472, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 473, 349, 350, 0,
	351, 352, 353, 354, 355, 0, 357, 358, 359, 356,
	360, 361, 362, 363, 0, 364, 918, 365, 366, 367,
	368, 474, 962, 0, 370, 374, 375, 376, 377, 378,
	379, 380, 0, 387, 388, 381, 383, 384, 385, 382,
	386, 389, 390, 892, 391, 371, 372, 392, 919, 393,
	475, 394, 395, 0, 405, 396, 397, 398, 373, 399,
	403, 404, 400, 401, 402, 930, 0, 407, 408, 406,
	0, 409, 410, 411, 412, 413, 261, 414, 262, 415,
	0, 477, 478, 479, 416, 0, 0, 417, 418, 931,
	419, 932, 0, 420, 421, 422, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 430, 893, 431, 0, 429,
	432, 433, 434, 482, 483, 0, 436, 435, 484, 783,
	0, 1126, 0, 437, 438, 485, 439, 440, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 208, 209,
	210, 211, 0, 212, 0, 0, 0, 0, 442, 0,
	0, 1442, 0, 213, 214, 215, 443, 444, 216, 445,
	217, 218, 446, 0, 219, 220, 221, 222, 223, 224,
	0, 0, 225, 447, 448, 449, 0, 226, 450, 0,
	1030, 0, 227, 228, 229, 230, 231, 0, 233, 234,
	235, 232, 0, 236, 0, 237, 238, 239, 0, 904,
	240, 241, 0, 0, 0, 0, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 451, 452, 0, 248, 0,
	249, 0, 250, 0, 0, 251, 252, 253, 0, 254,
	0, 255, 256, 0, 453, 257, 258, 260, 263, 259,
	264, 265, 266, 454, 455, 0, 905, 0, 0, 0,
	0, 0, 267, 268, 269, 456, 270, 271, 0, 272,
	0, 273, 0, 0, 906, 274, 275, 0, 276, 457,
	0, 458, 277, 0, 278, 279, 280, 281, 282, 283,
	459, 460, 461, 908, 0, 465, 285, 0, 0, 0,
	0, 284, 286, 293, 0, 907, 287, 462, 289, 288,
	290, 291, 292, 463, 0, 464, 0, 294, 909, 910,
	295, 296, 297, 911, 298, 299, 0, 0, 300, 301,
	302, 303, 0, 305, 304, 0, 306, 466, 912, 307,
	308, 913, 0, 309, 310, 0, 0, 311, 0, 312,
	313, 970, 969, 314, 315, 317, 318, 316, 914, 319,
	320, 322, 321, 0, 0, 915, 0, 467, 468, 323,
	324, 0, 325, 326, 0, 0, 328, 329, 0, 0,
	330, 469, 916, 331, 917, 470, 332, 327, 333, 334,
	335, 336, 337, 338, 0, 339, 471, 340, 472, 341,
	0, 342, 0, 343, 344, 345, 346, 347, 348, 473,
	349, 350, 0, 351, 352, 353, 354, 355, 0, 357,
	358, 359, 356, 360, 361, 362, 363, 0, 364, 918,
	365, 366, 367, 368, 474, 369, 0, 370, 374, 375,
	376, 377, 378, 379, 380, 176, 387, 388, 381, 383,
	384, 385, 382, 386, 389, 390, 0, 391, 371, 372,
	392, 919, 393, 475, 394, 395, 0, 405, 396, 397,
	398, 373, 399, 403, 404, 400, 401, 402, 476, 0,
	407, 408, 406, 178, 409, 410, 411, 412, 413, 261,
	414, 262, 415, 0, 477, 478, 479, 416, 0, 0,
	417, 418, 480, 419, 481, 0, 420, 421, 422, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 430, 0,
	431, 0, 429, 432, 433, 434, 1268, 483, 0, 436,
	435, 484, 1265, 0, 1126, 170, 437, 438, 485, 439,
	440, 441, 0, 171, 0, 0, 0, 0, 0, 0,
	207, 208, 209, 210, 211, 0, 212, 0, 0, 0,
	0, 442, 0, 0, 148, 0, 213, 214, 215, 443,
	444, 216, 445, 217, 218, 446, 0, 219, 220, 221,
	222, 223, 224, 0, 0, 225, 447, 448, 449, 0,
	226, 450, 0, 1030, 0, 227, 228, 229, 230, 231,
	0, 233, 234, 235, 232, 0, 236, 0, 237, 238,
	239, 0, 904, 240, 241, 0, 0, 0, 0, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 451, 452,
	0, 248, 0, 249, 0, 250, 0, 0, 251, 252,
	253, 0, 254, 0, 255, 256, 0, 453, 257, 258,
	260, 263, 259, 264, 265, 266, 454, 455, 0, 905,
	0, 0, 0, 0, 0, 267, 268, 269, 456, 270,
	271, 0, 272, 0, 273, 0, 0, 906, 274, 275,
	0, 276, 457, 0, 458, 277, 0, 278, 279, 280,
	281, 282, 283, 459, 460, 461, 908, 0, 465, 285,
	0, 0, 0, 0, 284, 286, 293, 0, 907, 287,
	462, 289, 288, 290, 291, 292, 463, 0, 464, 0,
	294, 909, 910, 295, 296, 297, 911, 298, 299, 0,
	0, 300, 301, 302, 303, 0, 305, 304, 0, 306,
	466, 912, 307, 308, 913, 0, 309, 310, 0, 0,
	311, 0, 312, 313, 970, 969, 314, 315, 317, 318,
	316, 914, 319, 320, 322, 321, 0, 0, 915, 0,
	467, 468, 323, 324, 0, 325, 326, 0, 0, 328,
	329, 0, 0, 330, 469, 916, 331, 917, 470, 332,
	327, 333, 334, 335, 336, 337, 338, 0, 339, 471,
	340, 472, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 473, 349, 350, 0, 351, 352, 353, 354,
	355, 0, 357, 358, 359, 356, 360, 361, 362, 363,
	0, 364, 918, 365, 366, 367, 368, 474, 369, 0,
	370, 374, 375, 376, 377, 378, 379, 380, 176, 387,
	388, 381, 383, 384, 385, 382, 386, 389, 390, 0,
	391, 371, 372, 392, 919, 393, 475, 394, 395, 0,
	405, 396, 397, 398, 373, 399, 403, 404, 400, 401,
	402, 476, 0, 407, 408, 406, 178, 409, 410, 411,
	412, 413, 261, 414, 262, 415, 0, 477, 478, 479,
	416, 0, 0, 417, 418, 480, 419, 481, 0, 420,
	421, 422, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 430, 0, 431, 0, 429, 432, 433, 434, 1268,
	483, 0, 436, 435, 484, 0, 0, 0, 170, 437,
	438, 485, 439, 440, 441, 0, 171, 0, 0, 0,
	0, 0, 1126, 1125, 0, 0, 0, 1123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 148, 207, 208,
	209, 210, 211, 0, 212, 0, 0, 0, 0, 442,
	0, 0, 0, 0, 213, 214, 215, 443, 444, 216,
	445, 217, 218, 446, 0, 219, 220, 221, 222, 223,
	224, 0, 0, 225, 447, 448, 449, 0, 226, 450,
	0, 1030, 0, 227, 228, 229, 230, 231, 0, 233,
	234, 235, 232, 0, 236, 0, 237, 238, 239, 0,
	904, 240, 241, 0, 0, 0, 0, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 451, 452, 0, 248,
	0, 249, 0, 250, 0, 0, 251, 252, 253, 0,
	254, 0, 255, 256, 0, 453, 257, 258, 260, 263,
	259, 264, 265, 266, 454, 455, 0, 905, 0, 0,
	0, 0, 0, 267, 268, 269, 456, 270, 271, 0,
	272, 0, 273, 0, 0, 906, 274, 275, 0, 276,
	457, 0, 458, 277, 0, 278, 279, 280, 281, 282,
	283, 459, 460, 461, 908, 0, 465, 285, 0, 0,
	0, 0, 284, 286, 293, 0, 907, 287, 462, 289,
	288, 290, 291, 292, 463, 0, 464, 0, 294, 909,
	910, 295, 296, 297, 911, 298, 299, 0, 0, 300,
	301, 302, 303, 0, 305, 304, 0, 306, 466, 912,
	307, 308, 913, 0, 309, 310, 0, 0, 311, 0,
	312, 313, 970, 969, 314, 315, 317, 318, 316, 914,
	319, 320, 322, 321, 0, 0, 915, 0, 467, 468,
	323, 324, 0, 325, 326, 0, 0, 328, 329, 0,
	0, 330, 469, 916, 331, 917, 470, 332, 327, 333,
	334, 335, 336, 337, 338, 0, 339, 471, 340, 472,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	473, 349, 350, 0, 351, 352, 353, 354, 355, 0,
	357, 358, 359, 356, 360, 361, 362, 363, 0, 364,
	918, 365, 366, 367, 368, 474, 369, 0, 370, 374,
	375, 376, 377, 378, 379, 380, 0, 387, 388, 381,
	383, 384, 385, 382, 386, 389, 390, 0, 391, 371,
	372, 392, 919, 393, 475, 394, 395, 0, 405, 396,
	397, 398, 373, 399, 403, 404, 400, 401, 402, 476,
	0, 407, 408, 406, 0, 409, 410, 411, 412, 413,
	261, 414, 262, 415, 0, 477, 478, 479, 416, 0,
	0, 417, 418, 480, 419, 481, 0, 420, 421, 422,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 430,
	0, 431, 0, 429, 432, 433, 434, 482, 483, 0,
	436, 435, 484, 0, 0, 0, 0, 437, 438, 485,
	439, 440, 441, 0, 1126, 1125, 0, 0, 0, 1123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 208, 209, 210, 211, 2612, 212, 0, 0, 0,
	0, 442, 0, 0, 0, 0, 213, 214, 215, 443,
	444, 216, 445, 217, 218, 446, 0, 219, 220, 221,
	222, 223, 224, 0, 0, 225, 447, 448, 449, 0,
	226, 450, 0, 1030, 0, 227, 228, 229, 230, 231,
	0, 233, 234, 235, 232, 0, 236, 0, 237, 238,
	239, 0, 904, 240, 241, 0, 0, 0, 0, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 451, 452,
	0, 248, 0, 249, 0, 250, 0, 0, 251, 252,
	253, 0, 254, 0, 255, 256, 0, 453, 257, 258,
	260, 263, 259, 264, 265, 266, 454, 455, 0, 905,
	0, 0, 0, 0, 0, 267, 268, 269, 456, 270,
	271, 0, 272, 0, 273, 0, 0, 906, 274, 275,
	0, 276, 457, 0, 458, 277, 0, 278, 279, 280,
	281, 282, 283, 459, 460, 461, 908, 0, 465, 285,
	0, 0, 0, 0, 284, 286, 293, 0, 907, 287,
	462, 289, 288, 290, 291, 292, 463, 0, 464, 0,
	294, 909, 910, 295, 296, 297, 911, 298, 299, 0,
	0, 300, 301, 302, 303, 0, 305, 304, 0, 306,
	466, 912, 307, 308, 913, 0, 309, 310, 0, 0,
	311, 0, 312, 313, 970, 969, 314, 315, 317, 318,
	316, 914, 319, 320, 322, 321, 0, 0, 915, 0,
	467, 468, 323, 324, 0, 325, 326, 0, 0, 328,
	329, 0, 0, 330, 469, 916, 331, 917, 470, 332,
	327, 333, 334, 335, 336, 337, 338, 0, 339, 471,
	340, 472, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 473, 349, 350, 0, 351, 352, 353, 354,
	355, 0, 357, 358, 359, 356, 360, 361, 362, 363,
	0, 364, 918, 365, 366, 367, 368, 474, 369, 0,
	370, 374, 375, 376, 377, 378, 379, 380, 0, 387,
	388, 381, 383, 384, 385, 382, 386, 389, 390, 0,
	391, 371, 372, 392, 919, 393, 475, 394, 395, 0,
	405, 396, 397, 398, 373, 399, 403, 404, 400, 401,
	402, 476, 0, 407, 408, 406, 0, 409, 410, 411,
	412, 413, 261, 414, 262, 415, 0, 477, 478, 479,
	416, 0, 0, 417, 418, 480, 419, 481, 0, 420,
	421, 422, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 430, 0, 431, 0, 429, 432, 433, 434, 482,
	483, 0, 436, 435, 484, 0, 968, 0, 0, 437,
	438, 485, 439, 440, 441, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 209, 210, 211, 0, 212, 0,
	0, 0, 0, 895, 0, 0, 0, 1272, 213, 214,
	215, 443, 444, 216, 445, 217, 218, 446, 0, 219,
	220, 221, 222, 223, 224, 0, 894, 225, 447, 448,
	449, 0, 226, 901, 0, 884, 0, 227, 228, 229,
	230, 231, 0, 233, 234, 235, 232, 0, 236, 0,
	237, 238, 239, 0, 904, 240, 241, 887, 885, 886,
	891, 889, 888, 890, 242, 243, 244, 245, 246, 247,
	451, 452, 0, 248, 0, 249, 0, 250, 0, 0,
	251, 252, 253, 0, 254, 0, 255, 256, 0, 453,
	257, 258, 260, 263, 259, 264, 265, 266, 924, 925,
	0, 905, 0, 0, 0, 0, 0, 267, 268, 269,
	456, 270, 271, 0, 272, 0, 273, 0, 0, 906,
	274, 275, 0, 276, 926, 0, 458, 277, 0, 278,
	279, 280, 281, 282, 283, 896, 897, 900, 908, 0,
	898, 285, 0, 0, 0, 0, 284, 286, 293, 0,
	907, 287, 462, 289, 288, 290, 291, 292, 463, 0,
	464, 0, 294, 909, 910, 295, 296, 297, 911, 298,
	299, 0, 0, 300, 301, 302, 303, 0, 305, 304,
	0, 306, 927, 912, 307, 308, 913, 0, 309, 310,
	0, 0, 311, 0, 312, 313, 970, 969, 314, 315,
	317, 318, 316, 914, 319, 320, 322, 321, 0, 0,
	915, 0, 899, 468, 323, 324, 0, 325, 326, 0,
	0, 328, 329, 0, 0, 330, 469, 916, 331, 917,
	928, 332, 327, 333, 334, 335, 336, 337, 338, 0,
	339, 929, 340, 472, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 473, 349, 350, 0, 351, 352,
	353, 354, 355, 0, 357, 358, 359, 356, 360, 361,
	362, 363, 0, 364, 918, 365, 366, 367, 368, 474,
	369, 0, 370, 374, 375, 376, 377, 378, 379, 380,
	0, 387, 388, 381, 383, 384, 385, 382, 386, 389,
	390, 892, 391, 371, 372, 392, 919, 393, 475, 394,
	395, 0, 405, 396, 397, 398, 373, 399, 403, 404,
	400, 401, 402, 930, 0, 407, 408, 406, 0, 409,
	410, 411, 412, 413, 261, 414, 262, 415, 0, 477,
	478, 479, 416, 0, 0, 417, 418, 931, 419, 932,
	0, 420, 421, 422, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 430, 893, 431, 0, 429, 432, 433,
	434, 482, 483, 204, 436, 435, 484, 0, 0, 0,
	0, 437, 438, 485, 439, 440, 441, 0, 0, 207,
	208, 209, 210, 211, 0, 212, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 213, 214, 215, 443, 444,
	216, 445, 217, 218, 446, 0, 219, 220, 221, 222,
	223, 224, 0, 0, 225, 447, 448, 449, 0, 226,
	450, 0, 0, 0, 227, 228, 229, 230, 231, 0,
	233, 234, 235, 232, 0, 236, 0, 237, 238, 239,
	0, 0, 240, 241, 0, 0, 0, 0, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 451, 452, 0,
	248, 0, 249, 0, 250, 0, 0, 251, 252, 253,
	0, 254, 0, 255, 256, 0, 453, 257, 258, 260,
	263, 259, 264, 265, 266, 454, 455, 0, 0, 0,
	0, 0, 0, 0, 267, 268, 269, 456, 270, 271,
	0, 272, 0, 273, 0, 0, 0, 274, 275, 0,
	276, 457, 0, 458, 277, 0, 278, 279, 280, 281,
	282, 283, 459, 460, 461, 0, 0, 465, 285, 0,
	0, 0, 0, 284, 286, 293, 0, 0, 287, 462,
	289, 288, 290, 291, 292, 463, 0, 464, 0, 294,
	0, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	300, 301, 302, 303, 0, 305, 304, 0, 306, 466,
	0, 307, 308, 0, 0, 309, 310, 0, 0, 311,
	0, 312, 313, 0, 0, 314, 315, 317, 318, 316,
	0, 319, 320, 322, 321, 0, 0, 0, 0, 467,
	468, 323, 324, 0, 325, 326, 0, 0, 328, 329,
	0, 0, 330, 469, 0, 331, 0, 470, 332, 327,
	333, 334, 335, 336, 337, 338, 0, 339, 471, 340,
	472, 341, 0, 342, 0, 343, 344, 345, 346, 347,
	348, 473, 349, 350, 0, 351, 352, 353, 354, 355,
	0, 357, 358, 359, 356, 360, 361, 362, 363, 0,
	364, 0, 365, 366, 367, 368, 474, 369, 0, 370,
	374, 375, 376, 377, 378, 379, 380, 0, 387, 388,
	381, 383, 384, 385, 382, 386, 389, 390, 0, 391,
	371, 372, 392, 0, 393, 475, 394, 395, 0, 405,
	396, 397, 398, 373, 399, 403, 404, 400, 401, 402,
	476, 0, 407, 408, 406, 0, 409, 410, 411, 412,
	413, 261, 414, 262, 415, 0, 477, 478, 479, 416,
	0, 0, 417, 418, 480, 419, 481, 0, 420, 421,
	422, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	430, 0, 431, 0, 429, 432, 433, 434, 482, 483,
	0, 436, 435, 484, 0, 204, 0, 0, 437, 438,
	485, 439, 440, 441, 0, 0, 0, 0, 0, 0,
	0, 207, 208, 209, 210, 211, 0, 212, 0, 0,
	0, 0, 442, 0, 0, 0, 2235, 213, 214, 215,
	443, 444, 216, 445, 217, 218, 446, 0, 219, 220,
	221, 222, 223, 224, 0, 0, 225, 447, 448, 449,
	0, 226, 450, 0, 0, 0, 227, 228, 229, 230,
	231, 0, 233, 234, 235, 232, 0, 236, 0, 237,
	238, 239, 0, 0, 240, 241, 0, 0, 0, 0,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 451,
	452, 0, 248, 0, 249, 0, 250, 0, 0, 251,
	252, 253, 0, 254, 0, 255, 256, 0, 453, 257,
	258, 260, 263, 259, 264, 265, 266, 454, 455, 0,
	0, 0, 0, 0, 0, 0, 267, 268, 269, 456,
	270, 271, 0, 272, 0, 273, 0, 0, 0, 274,
	275, 0, 276, 457, 0, 458, 277, 0, 278, 279,
	280, 281, 282, 283, 459, 460, 461, 0, 0, 465,
	285, 0, 0, 0, 0, 284, 286, 293, 0, 0,
	287, 462, 289, 288, 290, 291, 292, 463, 0, 464,
	0, 294, 0, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 300, 301, 302, 303, 0, 305, 304, 0,
	306, 466, 0, 307, 308, 0, 0, 309, 310, 0,
	0, 311, 0, 312, 313, 0, 0, 314, 315, 317,
	318, 316, 0, 319, 320, 322, 321, 0, 0, 0,
	0, 467, 468, 323, 324, 0, 325, 326, 0, 0,
	328, 329, 0, 0, 330, 469, 0, 331, 0, 470,
	332, 327, 333, 334, 335, 336, 337, 338, 0, 339,
	471, 340, 472, 341, 0, 342, 0, 343, 344, 345,
	346, 347, 348, 473, 349, 350, 0, 351, 352, 353,
	354, 355, 0, 357, 358, 359, 356, 360, 361, 362,
	363, 0, 364, 0, 365, 366, 367, 368, 474, 369,
	0, 370, 374, 375, 376, 377, 378, 379, 380, 0,
	387, 388, 381, 383, 384, 385, 382, 386, 389, 390,
	0, 391, 371, 372, 392, 0, 393, 475, 394, 395,
	0, 405, 396, 397, 398, 373, 399, 403, 404, 400,
	401, 402, 476, 0, 407, 408, 406, 0, 409, 410,
	411, 412, 413, 261, 414, 262, 415, 0, 477, 478,
	479, 416, 0, 0, 417, 418, 480, 419, 481, 0,
	420, 421, 422, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 430, 0, 431, 0, 429, 432, 433, 434,
	482, 483, 0, 436, 435, 484, 0, 204, 0, 0,
	437, 438, 485, 439, 440, 441, 0, 0, 0, 0,
	0, 0, 0, 207, 208, 209, 210, 211, 0, 212,
	0, 0, 0, 0, 442, 0, 0, 0, 2683, 213,
	214, 215, 443, 444, 216, 445, 217, 218, 446, 0,
	219, 220, 221, 222, 223, 224, 0, 0, 225, 447,
	448, 449, 0, 226, 450, 0, 0, 0, 227, 228,
	229, 230, 231, 0, 233, 234, 235, 232, 0, 236,
	0, 237, 238, 239, 0, 0, 240, 241, 0, 0,
	0, 0, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 451, 452, 0, 248, 0, 249, 0, 250, 0,
	0, 251, 252, 253, 0, 254, 0, 255, 256, 0,
	453, 257, 258, 260, 263, 259, 264, 265, 266, 454,
	455, 0, 0, 0, 0, 0, 0, 0, 267, 268,
	269, 456, 270, 271, 0, 272, 0, 273, 0, 0,
	0, 274, 275, 0, 276, 457, 0, 458, 277, 0,
	278, 279, 280, 281, 282, 283, 459, 460, 461, 0,
	0, 465, 285, 0, 0, 0, 0, 284, 286, 293,
	0, 0, 287, 462, 289, 288, 290, 291, 292, 463,
	0, 464, 0, 294, 0, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 300, 301, 302, 303, 0, 305,
	304, 0, 306, 466, 0, 307, 308, 0, 0, 309,
	310, 0, 0, 311, 0, 312, 313, 0, 0, 314,
	315, 317, 318, 316, 0, 319, 320, 322, 321, 0,
	0, 0, 0, 467, 468, 323, 324, 0, 325, 326,
	0, 0, 328, 329, 0, 0, 330, 469, 0, 331,
	0, 470, 332, 327, 333, 334, 335, 336, 337, 338,
	0, 339, 471, 340, 472, 341, 0, 342, 0, 343,
	344, 345, 346, 347, 348, 473, 349, 350, 0, 351,
	352, 353, 354, 355, 0, 357, 358, 359, 356, 360,
	361, 362, 363, 0, 364, 0, 365, 366, 367, 368,
	474, 369, 0, 370, 374, 375, 376, 377, 378, 379,
	380, 0, 387, 388, 381, 383, 384, 385, 382, 386,
	389, 390, 0, 391, 371, 372, 392, 0, 393, 475,
	394, 395, 0, 405, 396, 397, 398, 373, 399, 403,
	404, 400, 401, 402, 476, 0, 407, 408, 406, 0,
	409, 410, 411, 412, 413, 261, 414, 262, 415, 0,
	477, 478, 479, 416, 0, 0, 417, 418, 480, 419,
	481, 0, 420, 421, 422, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 430, 0, 431, 0, 429, 432,
	433, 434, 482, 483, 0, 436, 435, 484, 0, 0,
	0, 0, 437, 438, 485, 439, 440, 441, 0, 0,
	0, 0, 0, 1293, 0, 1126, 1125, 0, 0, 0,
	1123, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1542, 207, 208, 209, 210, 211, 0, 212, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 213, 214, 215,
	443, 444, 216, 445, 217, 218, 446, 0, 219, 220,
	221, 222, 223, 224, 0, 0, 225, 447, 448, 449,
	0, 226, 450, 0, 1030, 0, 227, 228, 229, 230,
	231, 0, 233, 234, 235, 232, 0, 236, 0, 237,
	238, 239, 0, 904, 240, 241, 0, 0, 0, 0,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 451,
	452, 0, 248, 0, 249, 0, 250, 0, 0, 251,
	252, 253, 0, 254, 0, 255, 256, 0, 453, 257,
	258, 260, 263, 259, 264, 265, 266, 454, 455, 0,
	905, 0, 0, 0, 0, 0, 1292, 268, 269, 456,
	270, 271, 0, 272, 0, 273, 0, 0, 906, 274,
	275, 0, 276, 457, 0, 458, 277, 0, 278, 279,
	280, 281, 282, 283, 459, 460, 461, 908, 0, 465,
	285, 0, 0, 0, 0, 284, 286, 293, 0, 907,
	287, 462, 289, 288, 290, 291, 292, 463, 0, 464,
	0, 294, 909, 910, 295, 296, 297, 911, 298, 299,
	0, 0, 300, 301, 302, 303, 0, 305, 304, 0,
	306, 466, 912, 307, 308, 913, 0, 309, 310, 0,
	0, 311, 0, 312, 313, 970, 969, 314, 315, 317,
	318, 316, 914, 319, 320, 322, 321, 0, 0, 915,
	0, 467, 468, 323, 324, 0, 325, 326, 0, 0,
	328, 329, 0, 0, 330, 469, 916, 331, 917, 470,
	332, 327, 333, 334, 335, 336, 337, 338, 0, 339,
	471, 340, 472, 341, 0, 342, 0, 343, 344, 345,
	346, 1291, 348, 473, 349, 350, 0, 351, 352, 353,
	354, 355, 0, 357, 358, 359, 356, 360, 361, 362,
	363, 0, 364, 918, 365, 366, 367, 368, 474, 369,
	0, 370, 374, 375, 376, 377, 378, 379, 380, 0,
	387, 388, 381, 383, 384, 385, 382, 386, 389, 390,
	0, 391, 371, 372, 392, 919, 393, 475, 394, 395,
	0, 405, 396, 397, 398, 373, 399, 403, 404, 400,
	401, 402, 476, 0, 407, 408, 406, 0, 409, 410,
	411, 412, 413, 261, 414, 262, 415, 0, 477, 478,
	479, 416, 0, 0, 417, 418, 480, 419, 481, 0,
	420, 421, 422, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 430, 0, 431, 0, 429, 432, 433, 434,
	482, 483, 0, 436, 435, 484, 0, 0, 0, 0,
	437, 438, 485, 439, 440, 441, 1263, 0, 1126, 1125,
	0, 0, 0, 1123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 209, 210, 211, 0,
	212, 0, 0, 0, 0, 442, 0, 0, 0, 0,
	213, 214, 215, 443, 444, 216, 445, 217, 218, 446,
	0, 219, 220, 221, 222, 223, 224, 0, 0, 225,
	447, 448, 449, 0, 226, 450, 0, 1030, 0, 227,
	228, 229, 230, 231, 0, 233, 234, 235, 232, 0,
	236, 0, 237, 238, 239, 0, 904, 240, 241, 0,
	0, 0, 0, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 451, 452, 0, 248, 0, 249, 0, 250,
	0, 0, 251, 252, 253, 0, 254, 0, 255, 256,
	0, 453, 257, 258, 260, 263, 259, 264, 265, 266,
	454, 455, 0, 905, 0, 0, 0, 0, 0, 267,
	268, 269, 456, 270, 271, 0, 272, 0, 273, 0,
	0, 906, 274, 275, 0, 276, 457, 0, 458, 277,
	0, 278, 279, 280, 281, 282, 283, 1262, 460, 461,
	908, 0, 465, 285, 0, 0, 0, 0, 284, 286,
	293, 0, 907, 287, 462, 289, 288, 290, 291, 292,
	463, 0, 464, 0, 294, 909, 910, 295, 296, 297,
	911, 298, 299, 0, 0, 300, 301, 302, 303, 0,
	305, 304, 0, 306, 466, 912, 307, 308, 913, 0,
	309, 310, 0, 0, 311, 0, 312, 313, 970, 969,
	314, 315, 317, 318, 316, 914, 319, 320, 322, 321,
	0, 0, 915, 0, 467, 468, 323, 324, 0, 325,
	326, 0, 0, 328, 329, 0, 0, 330, 469, 916,
	331, 917, 470, 332, 327, 333, 334, 335, 336, 337,
	338, 0, 339, 471, 340, 472, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 473, 349, 350, 0,
	351, 352, 353, 354, 355, 0, 357, 358, 359, 356,
	360, 361, 362, 363, 0, 364, 918, 365, 366, 367,
	368, 474, 369, 0, 370, 374, 375, 376, 377, 378,
	379, 380, 0, 387, 388, 381, 383, 384, 385, 382,
	386, 389, 390, 0, 391, 371, 372, 392, 919, 393,
	475, 394, 395, 0, 405, 396, 397, 398, 373, 399,
	403, 404, 400, 401, 402, 476, 0, 407, 408, 406,
	0, 409, 410, 411, 412, 413, 261, 414, 262, 415,
	0, 477, 478, 479, 416, 0, 0, 417, 418, 480,
	419, 481, 0, 420, 421, 422, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 430, 0, 431, 0, 429,
	432, 433, 434, 482, 483, 0, 436, 435, 484, 0,
	0, 0, 0, 437, 438, 485, 439, 440, 441, 1259,
	0, 1126, 1125, 0, 0, 0, 1123, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 208, 209,
	210, 211, 0, 212, 0, 0, 0, 0, 442, 0,
	0, 0, 0, 213, 214, 215, 443, 444, 216, 445,
	217, 218, 446, 0, 219, 220, 221, 222, 223, 224,
	0, 0, 225, 447, 448, 449, 0, 226, 450, 0,
	1030, 0, 227, 228, 229, 230, 231, 0, 233, 234,
	235, 232, 0, 236, 0, 237, 238, 239, 0, 904,
	240, 241, 0, 0, 0, 0, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 451, 452, 0, 248, 0,
	249, 0, 250, 0, 0, 251, 252, 253, 0, 254,
	0, 255, 256, 0, 453, 257, 258, 260, 263, 259,
	264, 265, 266, 454, 455, 0, 905, 0, 0, 0,
	0, 0, 267, 268, 269, 456, 270, 271, 0, 272,
	0, 273, 0, 0, 906, 274, 275, 0, 276, 457,
	0, 458, 277, 0, 278, 279, 280, 281, 282, 283,
	1258, 460, 461, 908, 0, 465, 285, 0, 0, 0,
	0, 284, 286, 293, 0, 907, 287, 462, 289, 288,
	290, 291, 292, 463, 0, 464, 0, 294, 909, 910,
	295, 296, 297, 911, 298, 299, 0, 0, 300, 301,
	302, 303, 0, 305, 304, 0, 306, 466, 912, 307,
	308, 913, 0, 309, 310, 0, 0, 311, 0, 312,
	313, 970, 969, 314, 315, 317, 318, 316, 914, 319,
	320, 322, 321, 0, 0, 915, 0, 467, 468, 323,
	324, 0, 325, 326, 0, 0, 328, 329, 0, 0,
	330, 469, 916, 331, 917, 470, 332, 327, 333, 334,
	335, 336, 337, 338, 0, 339, 471, 340, 472, 341,
	0, 342, 0, 343, 344, 345, 346, 347, 348, 473,
	349, 350, 0, 351, 352, 353, 354, 355, 0, 357,
	358, 359, 356, 360, 361, 362, 363, 0, 364, 918,
	365, 366, 367, 368, 474, 369, 0, 370, 374, 375,
	376, 377, 378, 379, 380, 0, 387, 388, 381, 383,
	384, 385, 382, 386, 389, 390, 0, 391, 371, 372,
	392, 919, 393, 475, 394, 395, 0, 405, 396, 397,
	398, 373, 399, 403, 404, 400, 401, 402, 476, 0,
	407, 408, 406, 0, 409, 410, 411, 412, 413, 261,
	414, 262, 415, 0, 477, 478, 479, 416, 0, 0,
	417, 418, 480, 419, 481, 0, 420, 421, 422, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 430, 0,
	431, 0, 429, 432, 433, 434, 482, 483, 0, 436,
	435, 484, 0, 0, 0, 0, 437, 438, 485, 439,
	440, 441, 1198, 0, 1126, 1125, 0, 0, 0, 1123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 208, 209, 210, 211, 0, 212, 0, 0, 0,
	0, 442, 0, 0, 0, 0, 213, 214, 215, 443,
	444, 216, 445, 217, 218, 446, 0, 219, 220, 221,
	222, 223, 224, 0, 0, 225, 447, 448, 449, 0,
	226, 450, 0, 1030, 0, 227, 228, 229, 230, 231,
	0, 233, 234, 235, 232, 0, 236, 0, 237, 238,
	239, 0, 904, 240, 241, 0, 0, 0, 0, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 451, 452,
	0, 248, 0, 249, 0, 250, 0, 0, 251, 252,
	253, 0, 254, 0, 255, 256, 0, 453, 257, 258,
	260, 263, 259, 264, 265, 266, 454, 455, 0, 905,
	0, 0, 0, 0, 0, 267, 268, 269, 456, 270,
	271, 0, 272, 0, 273, 0, 0, 906, 274, 275,
	0, 276, 457, 0, 458, 277, 0, 278, 279, 280,
	281, 282, 283, 1197, 460, 461, 908, 0, 465, 285,
	0, 0, 0, 0, 284, 286, 293, 0, 907, 287,
	462, 289, 288, 290, 291, 292, 463, 0, 464, 0,
	294, 909, 910, 295, 296, 297, 911, 298, 299, 0,
	0, 300, 301, 302, 303, 0, 305, 304, 0, 306,
	466, 912, 307, 308, 913, 0, 309, 310, 0, 0,
	311, 0, 312, 313, 970, 969, 314, 315, 317, 318,
	316, 914, 319, 320, 322, 321, 0, 0, 915, 0,
	467, 468, 323, 324, 0, 325, 326, 0, 0, 328,
	329, 0, 0, 330, 469, 916, 331, 917, 470, 332,
	327, 333, 334, 335, 336, 337, 338, 0, 339, 471,
	340, 472, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 473, 349, 350, 0, 351, 352, 353, 354,
	355, 0, 357, 358, 359, 356, 360, 361, 362, 363,
	0, 364, 918, 365, 366, 367, 368, 474, 369, 0,
	370, 374, 375, 376, 377, 378, 379, 380, 0, 387,
	388, 381, 383, 384, 385, 382, 386, 389, 390, 0,
	391, 371, 372, 392, 919, 393, 475, 394, 395, 0,
	405, 396, 397, 398, 373, 399, 403, 404, 400, 401,
	402, 476, 0, 407, 408, 406, 0, 409, 410, 411,
	412, 413, 261, 414, 262, 415, 0, 477, 478, 479,
	416, 0, 0, 417, 418, 480, 419, 481, 0, 420,
	421, 422, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 430, 0, 431, 0, 429, 432, 433, 434, 482,
	483, 0, 436, 435, 484, 0, 0, 0, 0, 437,
	438, 485, 439, 440, 441, 1195, 0, 1126, 1125, 0,
	0, 0, 1123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 208, 209, 210, 211, 0, 212,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 213,
	214, 215, 443, 444, 216, 445, 217, 218, 446, 0,
	219, 220, 221, 222, 223, 224, 0, 0, 225, 447,
	448, 449, 0, 226, 450, 0, 1030, 0, 227, 228,
	229, 230, 231, 0, 233, 234, 235, 232, 0, 236,
	0, 237, 238, 239, 0, 904, 240, 241, 0, 0,
	0, 0, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 451, 452, 0, 248, 0, 249, 0, 250, 0,
	0, 251, 252, 253, 0, 254, 0, 255, 256, 0,
	453, 257, 258, 260, 263, 259, 264, 265, 266, 454,
	455, 0, 905, 0, 0, 0, 0, 0, 267, 268,
	269, 456, 270, 271, 0, 272, 0, 273, 0, 0,
	906, 274, 275, 0, 276, 457, 0, 458, 277, 0,
	278, 279, 280, 281, 282, 283, 1194, 460, 461, 908,
	0, 465, 285, 0, 0, 0, 0, 284, 286, 293,
	0, 907, 287, 462, 289, 288, 290, 291, 292, 463,
	0, 464, 0, 294, 909, 910, 295, 296, 297, 911,
	298, 299, 0, 0, 300, 301, 302, 303, 0, 305,
	304, 0, 306, 466, 912, 307, 308, 913, 0, 309,
	310, 0, 0, 311, 0, 312, 313, 970, 969, 314,
	315, 317, 318, 316, 914, 319, 320, 322, 321, 0,
	0, 915, 0, 467, 468, 323, 324, 0, 325, 326,
	0, 0, 328, 329, 0, 0, 330, 469, 916, 331,
	917, 470, 332, 327, 333, 334, 335, 336, 337, 338,
	0, 339, 471, 340, 472, 341, 0, 342, 0, 343,
	344, 345, 346, 347, 348, 473, 349, 350, 0, 351,
	352, 353, 354, 355, 0, 357, 358, 359, 356, 360,
	361, 362, 363, 0, 364, 918, 365, 366, 367, 368,
	474, 369, 0, 370, 374, 375, 376, 377, 378, 379,
	380, 0, 387, 388, 381, 383, 384, 385, 382, 386,
	389, 390, 0, 391, 371, 372, 392, 919, 393, 475,
	394, 395, 0, 405, 396, 397, 398, 373, 399, 403,
	404, 400, 401, 402, 476, 0, 407, 408, 406, 0,
	409, 410, 411, 412, 413, 261, 414, 262, 415, 0,
	477, 478, 479, 416, 0, 0, 417, 418, 480, 419,
	481, 0, 420, 421, 422, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 430, 0, 431, 0, 429, 432,
	433, 434, 482, 483, 0, 436, 435, 484, 0, 0,
	0, 0, 437, 438, 485, 439, 440, 441, 1119, 0,
	1126, 1125, 0, 0, 0, 1123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 208, 209, 210,
	211, 0, 212, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 213, 214, 215, 443, 444, 216, 445, 217,
	218, 446, 0, 219, 220, 221, 222, 223, 224, 0,
	0, 225, 447, 448, 449, 0, 226, 450, 0, 1030,
	0, 227, 228, 229, 230, 231, 0, 233, 234, 235,
	232, 0, 236, 0, 237, 238, 239, 0, 904, 240,
	241, 0, 0, 0, 0, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 451, 452, 0, 248, 0, 249,
	0, 250, 0, 0, 251, 252, 253, 0, 254, 0,
	255, 256, 0, 453, 257, 258, 260, 263, 259, 264,
	265, 266, 454, 455, 0, 905, 0, 0, 0, 0,
	0, 267, 268, 269, 456, 270, 271, 0, 272, 0,
	273, 0, 0, 906, 274, 275, 0, 276, 457, 0,
	458, 277, 0, 278, 279, 280, 281, 282, 283, 1121,
	460, 461, 908, 0, 465, 285, 0, 0, 0, 0,
	284, 286, 293, 0, 907, 287, 462, 289, 288, 290,
	291, 292, 463, 0, 464, 0, 294, 909, 910, 295,
	296, 297, 911, 298, 299, 0, 0, 300, 301, 302,
	303, 0, 305, 304, 0, 306, 466, 912, 307, 308,
	913, 0, 309, 310, 0, 0, 311, 0, 312, 313,
	970, 969, 314, 315, 317, 318, 316, 914, 319, 320,
	322, 321, 0, 0, 915, 0, 467, 468, 323, 324,
	0, 325, 326, 0, 0, 328, 329, 0, 0, 330,
	469, 916, 331, 917, 470, 332, 327, 333, 334, 335,
	336, 337, 338, 0, 339, 471, 340, 472, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 473, 349,
	350, 0, 351, 352, 353, 354, 355, 0, 357, 358,
	359, 356, 360, 361, 362, 363, 0, 364, 918, 365,
	366, 367, 368, 474, 369, 0, 370, 374, 375, 376,
	377, 378, 379, 380, 0, 387, 388, 381, 383, 384,
	385, 382, 386, 389, 390, 0, 391, 371, 372, 392,
	919, 393, 475, 394, 395, 0, 405, 396, 397, 398,
	373, 399, 403, 404, 400, 401, 402, 476, 0, 407,
	408, 406, 0, 409, 410, 411, 412, 413, 261, 414,
	262, 415, 0, 477, 478, 479, 416, 0, 0, 417,
	418, 480, 419, 481, 0, 420, 421, 422, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 430, 0, 431,
	0, 429, 432, 433, 434, 482, 483, 0, 436, 435,
	484, 0, 0, 0, 0, 437, 438, 485, 439, 440,
	441, 1126, 1125, 0, 0, 0, 1123, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 208, 209,
	210, 211, 0, 212, 0, 0, 0, 0, 442, 0,
	0, 0, 0, 213, 214, 215, 443, 444, 216, 445,
	217, 218, 446, 0, 219, 220, 221, 222, 223, 224,
	0, 0, 225, 447, 448, 449, 0, 226, 450, 0,
	1030, 0, 227, 228, 229, 230, 231, 0, 233, 234,
	235, 232, 0, 236, 0, 237, 238, 239, 0, 904,
	240, 241, 0, 0, 0, 0, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 451, 452, 0, 248, 0,
	249, 0, 250, 0, 0, 251, 252, 253, 0, 254,
	0, 255, 256, 0, 453, 257, 258, 260, 263, 259,
	264, 265, 266, 454, 455, 0, 905, 0, 0, 0,
	0, 0, 267, 268, 269, 456, 270, 271, 0, 272,
	0, 273, 0, 0, 906, 274, 275, 0, 276, 457,
	0, 458, 277, 0, 278, 279, 280, 281, 282, 283,
	459, 460, 461, 908, 0, 465, 285, 0, 0, 0,
	0, 284, 286, 293, 0, 907, 287, 462, 289, 288,
	290, 291, 292, 463, 0, 464, 0, 294, 909, 910,
	295, 296, 297, 911, 298, 299, 0, 0, 300, 301,
	302, 303, 0, 305, 304, 0, 306, 466, 912, 307,
	308, 913, 0, 309, 310, 0, 0, 311, 0, 312,
	313, 970, 969, 314, 315, 317, 318, 316, 914, 319,
	320, 322, 321, 0, 0, 915, 0, 467, 468, 323,
	324, 0, 325, 326, 0, 0, 328, 329, 0, 0,
	330, 469, 916, 331, 917, 470, 332, 327, 333, 334,
	335, 336, 337, 338, 0, 339, 471, 340, 472, 341,
	0, 342, 0, 343, 344, 345, 346, 347, 348, 473,
	349, 350, 0, 351, 352, 353, 354, 355, 0, 357,
	358, 359, 356, 360, 361, 362, 363, 0, 364, 918,
	365, 366, 367, 368, 474, 369, 0, 370, 374, 375,
	376, 377, 378, 379, 380, 0, 387, 388, 381, 383,
	384, 385, 382, 386, 389, 390, 0, 391, 371, 372,
	392, 919, 393, 475, 394, 395, 0, 405, 396, 397,
	398, 373, 399, 403, 404, 400, 401, 402, 476, 0,
	407, 408, 406, 0, 409, 410, 411, 412, 413, 261,
	414, 262, 415, 0, 477, 478, 479, 416, 0, 0,
	417, 418, 480, 419, 481, 0, 420, 421, 422, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 430, 0,
	431, 0, 429, 432, 433, 434, 482, 483, 0, 436,
	435, 484, 1126, 1125, 0, 0, 437, 438, 485, 439,
	440, 441, 0, 0, 0, 0, 0, 0, 207, 208,
	209, 210, 211, 0, 212, 0, 0, 0, 0, 442,
	0, 0, 0, 0, 213, 214, 215, 443, 444, 216,
	445, 217, 218, 446, 0, 219, 220, 221, 222, 223,
	224, 0, 0, 225, 447, 448, 449, 0, 226, 450,
	0, 1030, 0, 227, 228, 229, 230, 231, 0, 233,
	234, 235, 232, 0, 236, 0, 237, 238, 239, 0,
	904, 240, 241, 0, 0, 0, 0, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 451, 452, 0, 248,
	0, 249, 0, 250, 0, 0, 251, 252, 253, 0,
	254, 0, 255, 256, 0, 453, 257, 258, 260, 263,
	259, 264, 265, 266, 454, 455, 0, 905, 0, 0,
	0, 0, 0, 267, 268, 269, 456, 270, 271, 0,
	272, 0, 273, 0, 0, 906, 274, 275, 0, 276,
	457, 0, 458, 277, 0, 278, 279, 280, 281, 282,
	283, 459, 460, 461, 908, 0, 465, 285, 0, 0,
	0, 0, 284, 286, 293, 0, 907, 287, 462, 289,
	288, 290, 291, 292, 463, 0, 464, 0, 294, 909,
	910, 295, 296, 297, 911, 298, 299, 0, 0, 300,
	301, 302, 303, 0, 305, 304, 0, 306, 466, 912,
	307, 308, 913, 0, 309, 310, 0, 0, 311, 0,
	312, 313, 970, 969, 314, 315, 317, 318, 316, 914,
	319, 320, 322, 321, 0, 0, 915, 0, 467, 468,
	323, 324, 0, 325, 326, 0, 0, 328, 329, 0,
	0, 330, 469, 916, 331, 917, 470, 332, 327, 333,
	334, 335, 336, 337, 338, 0, 339, 471, 340, 472,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	473, 349, 350, 0, 351, 352, 353, 354, 355, 0,
	357, 358, 359, 356, 360, 361, 362, 363, 0, 364,
	918, 365, 366, 367, 368, 474, 369, 0, 370, 374,
	375, 376, 377, 378, 379, 380, 0, 387, 388, 381,
	383, 384, 385, 382, 386, 389, 390, 0, 391, 371,
	372, 392, 919, 393, 475, 394, 395, 0, 405, 396,
	397, 398, 373, 399, 403, 404, 400, 401, 402, 476,
	0, 407, 408, 406, 0, 409, 410, 411, 412, 413,
	261, 414, 262, 415, 0, 477, 478, 479, 416, 0,
	0, 417, 418, 480, 419, 481, 0, 420, 421, 422,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 430,
	0, 431, 0, 429, 432, 433, 434, 482, 483, 1126,
	436, 435, 484, 0, 0, 0, 0, 437, 438, 485,
	439, 440, 441, 0, 0, 207, 208, 209, 210, 211,
	0, 212, 0, 0, 0, 0, 442, 0, 0, 0,
	0, 213, 214, 215, 443, 444, 216, 445, 217, 218,
	446, 0, 219, 220, 221, 222, 223, 224, 0, 0,
	225, 447, 448, 449, 0, 226, 450, 0, 1030, 0,
	227, 228, 229, 230, 231, 0, 233, 234, 235, 232,
	0, 236, 0, 237, 238, 239, 0, 904, 240, 241,
	0, 0, 0, 0, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 451, 452, 0, 248, 0, 249, 0,
	250, 0, 0, 251, 252, 253, 0, 254, 0, 255,
	256, 0, 453, 257, 258, 260, 263, 259, 264, 265,
	266, 454, 455, 0, 905, 0, 0, 0, 0, 0,
	267, 268, 269, 456, 270, 271, 0, 272, 0, 273,
	0, 0, 906, 274, 275, 0, 276, 457, 0, 458,
	277, 0, 278, 279, 280, 281, 282, 283, 459, 460,
	461, 908, 0, 465, 285, 0, 0, 0, 0, 284,
	286, 293, 0, 907, 287, 462, 289, 288, 290, 291,
	292, 463, 0, 464, 0, 294, 909, 910, 295, 296,
	297, 911, 298, 299, 0, 0, 300, 301, 302, 303,
	0, 305, 304, 0, 306, 466, 912, 307, 308, 913,
	0, 309, 310, 0, 0, 311, 0, 312, 313, 970,
	969, 314, 315, 317, 318, 316, 914, 319, 320, 322,
	321, 0, 0, 915, 0, 467, 468, 323, 324, 0,
	325, 326, 0, 0, 328, 329, 0, 0, 330, 469,
	916, 331, 917, 470, 332, 327, 333, 334, 335, 336,
	337, 338, 0, 339, 471, 340, 472, 341, 0, 342,
	0, 343, 344, 345, 346, 347, 348, 473, 349, 350,
	0, 351, 352, 353, 354, 355, 0, 357, 358, 359,
	356, 360, 361, 362, 363, 0, 364, 918, 365, 366,
	367, 368, 474, 369, 0, 370, 374, 375, 376, 377,
	378, 379, 380, 0, 387, 388, 381, 383, 384, 385,
	382, 386, 389, 390, 0, 391, 371, 372, 392, 919,
	393, 475, 394, 395, 0, 405, 396, 397, 398, 373,
	399, 403, 404, 400, 401, 402, 476, 0, 407, 408,
	406, 0, 409, 410, 411, 412, 413, 261, 414, 262,
	415, 0, 477, 478, 479, 416, 0, 0, 417, 418,
	480, 419, 481, 0, 420, 421, 422, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 430, 0, 431, 0,
	429, 432, 433, 434, 482, 483, 0, 436, 435, 484,
	660, 0, 554, 0, 437, 438, 485, 439, 440, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	209, 210, 211, 0, 212, 0, 0, 0, 0, 442,
	0, 0, 0, 0, 213, 214, 215, 443, 444, 216,
	445, 217, 218, 446, 0, 219, 220, 221, 222, 223,
	224, 0, 0, 225, 447, 448, 449, 0, 226, 450,
	0, 0, 0, 227, 228, 229, 230, 231, 0, 233,
	234, 235, 232, 0, 236, 0, 237, 238, 239, 0,
	0, 240, 241, 0, 0, 0, 0, 0, 0, 0,
	242, 243, 560, 245, 246, 247, 451, 452, 0, 248,
	0, 249, 0, 250, 0, 0, 251, 252, 253, 0,
	254, 0, 255, 256, 0, 453, 257, 258, 260, 263,
	259, 264, 265, 266, 454, 455, 0, 0, 0, 0,
	0, 0, 0, 267, 268, 269, 456, 270, 271, 0,
	272, 0, 273, 0, 0, 0, 274, 275, 0, 276,
	457, 0, 458, 277, 0, 278, 279, 280, 281, 282,
	283, 459, 460, 461, 0, 0, 465, 285, 0, 0,
	0, 0, 284, 286, 293, 0, 0, 287, 462, 289,
	288, 290, 291, 292, 463, 0, 464, 0, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 300,
	301, 302, 303, 0, 305, 304, 0, 306, 466, 0,
	307, 308, 0, 0, 309, 310, 0, 0, 311, 0,
	312, 313, 0, 0, 314, 315, 317, 318, 316, 0,
	319, 320, 322, 321, 0, 0, 0, 0, 467, 468,
	323, 324, 0, 325, 326, 0, 0, 328, 329, 0,
	0, 330, 469, 0, 331, 0, 470, 332, 327, 333,
	334, 335, 336, 337, 338, 0, 339, 471, 340, 472,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	473, 349, 350, 0, 351, 352, 353, 354, 355, 0,
	357, 358, 359, 356, 360, 361, 362, 363, 0, 364,
	0, 365, 366, 367, 368, 474, 369, 0, 370, 374,
	375, 376, 377, 378, 379, 380, 0, 387, 388, 381,
	383, 384, 385, 382, 386, 389, 390, 0, 391, 371,
	372, 392, 0, 393, 475, 394, 395, 0, 405, 396,
	397, 398, 373, 399, 403, 404, 400, 401, 402, 476,
	0, 407, 408, 406, 559, 409, 410, 411, 412, 413,
	261, 414, 262, 415, 0, 477, 478, 479, 416, 0,
	0, 417, 418, 480, 419, 481, 0, 420, 421, 422,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 430,
	0, 431, 0, 429, 432, 433, 434, 482, 483, 0,
	436, 435, 484, 553, 0, 554, 0, 437, 438, 485,
	439, 440, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 208, 209, 210, 211, 0, 212, 563, 0,
	0, 0, 442, 0, 0, 0, 0, 213, 214, 215,
	443, 444, 216, 445, 217, 218, 446, 0, 219, 220,
	221, 222, 223, 224, 0, 0, 225, 447, 448, 449,
	0, 226, 450, 0, 0, 0, 227, 228, 229, 230,
	231, 0, 233, 234, 235, 232, 0, 236, 0, 237,
	238, 239, 0, 0, 240, 241, 0, 0, 0, 0,
	0, 0, 0, 242, 243, 560, 245, 246, 247, 451,
	452, 0, 248, 0, 249, 0, 250, 0, 0, 251,
	252, 253, 0, 254, 0, 255, 256, 0, 453, 257,
	258, 260, 263, 259, 264, 265, 266, 454, 455, 0,
	0, 0, 0, 0, 0, 0, 267, 268, 269, 456,
	270, 271, 0, 272, 0, 273, 0, 0, 0, 274,
	275, 0, 276, 457, 0, 458, 277, 0, 278, 279,
	280, 281, 282, 283, 459, 460, 461, 0, 0, 465,
	285, 0, 0, 0, 0, 284, 286, 293, 0, 0,
	287, 462, 289, 288, 290, 291, 292, 463, 0, 464,
	0, 294, 0, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 300, 301, 302, 303, 0, 305, 304, 0,
	306, 466, 0, 307, 308, 0, 0, 309, 310, 0,
	0, 311, 0, 312, 313, 0, 0, 314, 315, 317,
	318, 316, 0, 319, 320, 322, 321, 0, 0, 0,
	0, 467, 468, 323, 324, 0, 325, 326, 0, 0,
	328, 329, 0, 0, 330, 469, 0, 331, 0, 470,
	332, 327, 333, 334, 335, 336, 337, 338, 0, 339,
	471, 340, 472, 341, 0, 342, 0, 343, 344, 345,
	346, 347, 348, 473, 349, 350, 0, 351, 352, 353,
	354, 355, 0, 357, 358, 359, 356, 360, 361, 362,
	363, 0, 364, 0, 365, 366, 367, 368, 474, 369,
	0, 370, 374, 375, 376, 377, 378, 379, 380, 0,
	387, 388, 381, 383, 384, 385, 382, 386, 389, 390,
	0, 391, 371, 372, 392, 0, 393, 475, 394, 395,
	0, 405, 396, 397, 398, 373, 399, 403, 404, 400,
	401, 402, 476, 0, 407, 408, 406, 559, 409, 410,
	411, 412, 413, 261, 414, 262, 415, 0, 477, 478,
	479, 416, 0, 0, 417, 418, 480, 419, 481, 0,
	420, 421, 422, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 430, 0, 431, 0, 429, 432, 433, 434,
	482, 483, 554, 436, 435, 484, 0, 0, 0, 0,
	437, 438, 485, 439, 440, 441, 0, 0, 207, 208,
	209, 210, 211, 0, 212, 0, 0, 0, 0, 442,
	0, 563, 0, 0, 213, 214, 215, 443, 444, 216,
	445, 217, 218, 446, 0, 219, 220, 221, 222, 223,
	224, 0, 0, 225, 447, 448, 449, 0, 226, 450,
	0, 0, 0, 227, 228, 229, 230, 231, 0, 233,
	234, 235, 232, 0, 236, 0, 237, 238, 239, 0,
	0, 240, 241, 0, 0, 0, 0, 0, 0, 0,
	242, 243, 560, 245, 246, 247, 451, 452, 0, 248,
	0, 249, 0, 250, 0, 0, 251, 252, 253, 0,
	254, 0, 255, 256, 0, 453, 257, 258, 260, 263,
	259, 264, 265, 266, 454, 455, 0, 0, 0, 0,
	0, 0, 0, 267, 268, 269, 456, 270, 271, 0,
	272, 0, 273, 0, 0, 0, 274, 275, 0, 276,
	457, 0, 458, 277, 0, 278, 279, 280, 281, 282,
	283, 459, 460, 461, 0, 0, 465, 285, 0, 0,
	0, 0, 284, 286, 293, 0, 0, 287, 462, 289,
	288, 290, 291, 292, 463, 0, 464, 0, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 300,
	301, 302, 303, 0, 305, 304, 0, 306, 466, 0,
	307, 308, 0, 0, 309, 310, 0, 0, 311, 0,
	312, 313, 0, 0, 314, 315, 317, 318, 316, 0,
	319, 320, 322, 321, 0, 0, 0, 0, 467, 468,
	323, 324, 0, 325, 326, 0, 0, 328, 329, 0,
	0, 330, 469, 0, 331, 0, 470, 332, 327, 333,
	334, 335, 336, 337, 338, 0, 339, 471, 340, 472,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	473, 349, 350, 0, 351, 352, 353, 354, 355, 0,
	357, 358, 359, 356, 360, 361, 362, 363, 0, 364,
	0, 1814, 366, 367, 368, 474, 369, 0, 370, 374,
	375, 376, 377, 378, 379, 380, 0, 387, 388, 381,
	383, 384, 385, 382, 386, 389, 390, 0, 391, 371,
	372, 392, 0, 393, 475, 394, 395, 0, 405, 396,
	397, 398, 373, 399, 403, 404, 400, 401, 402, 476,
	0, 407, 408, 406, 559, 409, 410, 411, 412, 413,
	261, 414, 262, 415, 0, 477, 478, 479, 416, 0,
	0, 417, 418, 480, 419, 481, 0, 420, 421, 422,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 430,
	0, 431, 0, 429, 432, 433, 434, 482, 483, 554,
	436, 435, 484, 0, 0, 0, 0, 437, 438, 485,
	439, 440, 441, 0, 0, 207, 208, 209, 210, 211,
	0, 212, 0, 0, 0, 0, 442, 0, 563, 0,
	0, 213, 214, 215, 443, 444, 216, 445, 217, 218,
	446, 0, 219, 220, 221, 222, 223, 224, 0, 0,
	225, 447, 448, 449, 0, 226, 450, 0, 0, 0,
	227, 228, 229, 230, 231, 0, 233, 234, 235, 232,
	0, 236, 0, 237, 238, 239, 0, 0, 240, 241,
	0, 0, 0, 0, 0, 0, 0, 242, 243, 560,
	245, 246, 247, 451, 452, 0, 248, 0, 249, 0,
	250, 0, 0, 251, 252, 253, 0, 254, 0, 255,
	256, 0, 453, 257, 258, 260, 263, 259, 264, 265,
	266, 454, 455, 0, 0, 0, 0, 0, 0, 0,
	267, 268, 269, 456, 270, 271, 0, 272, 0, 273,
	0, 0, 0, 274, 275, 0, 276, 457, 0, 458,
	277, 0, 278, 279, 280, 281, 282, 283, 459, 460,
	461, 0, 0, 465, 285, 0, 0, 0, 0, 284,
	286, 293, 0, 0, 287, 462, 289, 288, 290, 291,
	292, 463, 0, 464, 0, 294, 0, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 300, 301, 302, 303,
	0, 305, 304, 0, 306, 466, 0, 307, 308, 0,
	0, 309, 310, 0, 0, 311, 0, 312, 313, 0,
	0, 314, 315, 317, 318, 316, 0, 319, 320, 322,
	321, 0, 0, 0, 0, 467, 468, 323, 324, 0,
	325, 326, 0, 0, 328, 329, 0, 0, 330, 469,
	0, 331, 0, 470, 332, 327, 333, 334, 335, 336,
	337, 338, 0, 339, 471, 340, 472, 341, 0, 342,
	0, 343, 344, 345, 346, 347, 348, 473, 349, 350,
	0, 351, 352, 353, 354, 355, 0, 357, 358, 359,
	356, 360, 361, 362, 363, 0, 364, 0, 365, 366,
	367, 368, 474, 369, 0, 370, 374, 375, 376, 377,
	378, 379, 380, 0, 387, 388, 381, 383, 384, 385,
	382, 386, 389, 390, 0, 391, 371, 372, 392, 0,
	393, 475, 394, 395, 0, 405, 396, 397, 398, 373,
	399, 403, 404, 400, 401, 402, 476, 0, 407, 408,
	406, 559, 409, 410, 411, 412, 413, 261, 414, 262,
	415, 0, 477, 478, 479, 416, 0, 0, 417, 418,
	480, 419, 481, 0, 420, 421, 422, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 430, 0, 431, 0,
	429, 432, 433, 434, 482, 483, 204, 436, 435, 484,
	0, 0, 0, 0, 437, 438, 485, 439, 440, 441,
	0, 0, 207, 208, 209, 210, 211, 0, 212, 0,
	0, 0, 0, 442, 0, 563, 0, 0, 213, 214,
	215, 443, 444, 216, 445, 217, 218, 446, 0, 219,
	220, 221, 222, 223, 224, 0, 0, 225, 447, 448,
	449, 0, 226, 450, 0, 0, 0, 227, 228, 229,
	230, 231, 0, 233, 234, 235, 232, 0, 236, 0,
	237, 238, 239, 0, 0, 240, 241, 0, 0, 0,
	0, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	451, 452, 0, 248, 0, 249, 0, 250, 0, 0,
	251, 252, 253, 0, 254, 0, 255, 256, 0, 453,
	257, 258, 260, 263, 259, 264, 265, 266, 454, 455,
	0, 0, 0, 0, 0, 0, 0, 267, 268, 269,
	456, 270, 271, 0, 272, 0, 273, 0, 0, 0,
	274, 275, 0, 276, 457, 0, 458, 277, 0, 278,
	279, 280, 281, 282, 283, 459, 460, 461, 0, 0,
	465, 285, 0, 0, 0, 0, 284, 286, 293, 0,
	0, 287, 462, 289, 288, 290, 291, 292, 463, 0,
	464, 0, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 300, 301, 302, 303, 0, 305, 304,
	0, 306, 466, 0, 307, 308, 0, 0, 309, 310,
	0, 0, 311, 0, 312, 313, 0, 0, 314, 315,
	317, 318, 316, 0, 319, 320, 322, 321, 0, 0,
	0, 0, 467, 468, 323, 324, 0, 325, 326, 0,
	0, 328, 329, 0, 0, 330, 469, 0, 331, 0,
	470, 332, 327, 333, 334, 335, 336, 337, 338, 0,
	339, 471, 340, 472, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 473, 349, 350, 0, 351, 352,
	353, 354, 355, 0, 357, 358, 359, 356, 360, 361,
	362, 363, 0, 364, 0, 365, 366, 367, 368, 474,
	369, 0, 370, 374, 375, 376, 377, 378, 379, 380,
	0, 387, 388, 381, 383, 384, 385, 382, 386, 389,
	390, 0, 391, 371, 372, 392, 0, 393, 475, 394,
	395, 0, 405, 396, 397, 398, 373, 399, 403, 404,
	400, 401, 402, 476, 0, 407, 408, 406, 0, 409,
	410, 411, 412, 413, 261, 414, 262, 415, 0, 477,
	478, 479, 416, 0, 0, 417, 418, 480, 419, 481,
	0, 420, 421, 422, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 430, 0, 431, 0, 429, 432, 433,
	434, 482, 483, 204, 436, 435, 484, 0, 0, 0,
	0, 437, 438, 485, 439, 440, 441, 0, 0, 207,
	208, 209, 210, 211, 0, 212, 0, 0, 0, 0,
	442, 0, 563, 0, 0, 213, 214, 215, 443, 444,
	216, 445, 217, 218, 446, 0, 219, 220, 221, 222,
	223, 224, 0, 0, 225, 447, 448, 449, 2130, 226,
	450, 0, 0, 0, 227, 228, 229, 230, 231, 0,
	233, 234, 235, 232, 2127, 236, 0, 237, 238, 239,
	0, 0, 240, 241, 0, 0, 0, 0, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 451, 452, 0,
	248, 0, 249, 0, 250, 0, 0, 251, 252, 253,
	0, 254, 0, 255, 256, 0, 453, 257, 258, 260,
	263, 259, 264, 265, 266, 454, 455, 0, 2269, 0,
	0, 0, 0, 0, 267, 268, 269, 456, 270, 271,
	0, 272, 0, 273, 2133, 0, 0, 274, 275, 0,
	276, 457, 0, 458, 277, 0, 278, 279, 280, 281,
	282, 283, 459, 460, 461, 0, 0, 465, 285, 0,
	0, 0, 2266, 284, 286, 293, 0, 0, 287, 462,
	289, 288, 290, 291, 292, 463, 0, 464, 0, 2268,
	0, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	300, 301, 302, 303, 0, 305, 304, 0, 306, 466,
	0, 307, 308, 0, 0, 309, 310, 0, 0, 311,
	0, 312, 313, 0, 0, 314, 315, 317, 318, 316,
	0, 319, 320, 322, 321, 0, 0, 0, 0, 467,
	468, 323, 324, 0, 325, 326, 0, 0, 328, 329,
	0, 0, 330, 469, 0, 331, 0, 470, 332, 327,
	333, 334, 335, 336, 337, 338, 0, 339, 471, 340,
	472, 341, 2132, 342, 0, 343, 344, 345, 346, 347,
	348, 473, 349, 350, 0, 351, 352, 353, 354, 355,
	0, 357, 358, 359, 356, 360, 361, 362, 363, 0,
	364, 0, 365, 366, 367, 368, 474, 369, 0, 370,
	374, 375, 376, 377, 378, 379, 380, 0, 387, 388,
	381, 383, 384, 385, 382, 386, 389, 390, 0, 391,
	371, 372, 392, 0, 393, 475, 394, 395, 0, 405,
	396, 397, 398, 373, 399, 403, 404, 400, 401, 402,
	476, 0, 407, 408, 406, 0, 409, 410, 411, 412,
	413, 261, 414, 262, 415, 0, 477, 478, 479, 416,
	0, 0, 417, 418, 480, 419, 481, 0, 420, 421,
	422, 0, 423, 424, 0, 2267, 425, 426, 427, 428,
	430, 0, 431, 0, 429, 432, 433, 434, 482, 483,
	204, 436, 435, 484, 0, 0, 0, 0, 437, 438,
	485, 439, 440, 441, 0, 0, 207, 208, 209, 210,
	211, 0, 212, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 213, 214, 215, 443, 444, 216, 445, 217,
	218, 446, 0, 219, 220, 221, 222, 223, 224, 0,
	0, 225, 447, 448, 449, 2130, 226, 450, 0, 0,
	2124, 227, 228, 229, 230, 231, 0, 233, 234, 235,
	232, 2127, 236, 0, 237, 238, 239, 0, 0, 240,
	241, 0, 0, 0, 0, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 451, 452, 0, 248, 0, 249,
	0, 250, 0, 0, 251, 252, 253, 0, 254, 0,
	255, 256, 0, 453, 257, 258, 260, 263, 259, 264,
	265, 266, 454, 455, 0, 0, 0, 0, 0, 0,
	0, 267, 268, 269, 456, 270, 271, 0, 272, 0,
	273, 2133, 0, 0, 274, 275, 0, 276, 457, 0,
	458, 277, 0, 278, 279, 280, 281, 282, 283, 2123,
	460, 461, 0, 0, 465, 285, 0, 0, 0, 0,
	284, 286, 293, 0, 0, 287, 462, 289, 288, 290,
	291, 292, 463, 0, 464, 0, 294, 0, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 300, 301, 302,
	303, 0, 305, 304, 0, 306, 466, 0, 307, 308,
	0, 0, 309, 310, 0, 0, 311, 0, 312, 313,
	0, 0, 314, 315, 317, 318, 316, 0, 319, 320,
	322, 321, 0, 0, 0, 0, 467, 468, 323, 324,
	0, 325, 326, 0, 0, 328, 329, 0, 0, 330,
	469, 0, 331, 0, 470, 332, 327, 333, 334, 335,
	336, 337, 338, 0, 339, 471, 340, 472, 341, 2132,
	342, 0, 343, 344, 345, 346, 347, 348, 473, 349,
	350, 0, 351, 352, 353, 354, 355, 0, 357, 358,
	359, 356, 360, 361, 362, 363, 0, 364, 0, 365,
	366, 367, 368, 474, 369, 0, 370, 374, 375, 376,
	377, 378, 379, 380, 0, 387, 388, 381, 383, 384,
	385, 382, 386, 389, 390, 0, 391, 371, 372, 392,
	0, 393, 475, 394, 395, 0, 405, 396, 397, 398,
	373, 399, 403, 404, 400, 401, 402, 476, 0, 407,
	408, 406, 0, 409, 410, 411, 412, 413, 261, 414,
	262, 415, 0, 477, 478, 479, 416, 0, 0, 417,
	418, 480, 419, 481, 0, 420, 421, 422, 0, 423,
	424, 0, 2131, 425, 426, 427, 428, 430, 0, 431,
	0, 429, 432, 433, 434, 482, 483, 0, 436, 435,
	484, 516, 0, 204, 0, 437, 438, 485, 439, 440,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	208, 209, 515, 211, 505, 212, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 213, 214, 215, 443, 444,
	216, 445, 217, 218, 446, 0, 219, 220, 221, 222,
	223, 224, 0, 0, 225, 447, 448, 449, 0, 226,
	450, 0, 0, 0, 227, 228, 229, 230, 231, 0,
	233, 234, 235, 232, 0, 236, 0, 237, 238, 239,
	508, 0, 240, 241, 0, 0, 0, 0, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 451, 452, 0,
	248, 0, 249, 0, 250, 0, 0, 251, 252, 253,
	0, 254, 0, 255, 256, 0, 453, 257, 258, 260,
	263, 259, 264, 265, 266, 454, 455, 0, 0, 0,
	0, 0, 0, 0, 267, 268, 269, 456, 270, 271,
	0, 272, 0, 273, 0, 0, 0, 274, 275, 509,
	276, 457, 0, 458, 277, 0, 278, 279, 280, 281,
	282, 283, 459, 460, 461, 0, 0, 465, 285, 0,
	0, 0, 0, 284, 286, 293, 0, 0, 287, 462,
	289, 288, 290, 291, 292, 463, 0, 464, 0, 294,
	0, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	300, 301, 302, 303, 0, 305, 304, 0, 306, 466,
	0, 307, 308, 0, 0, 309, 310, 0, 0, 311,
	0, 312, 313, 0, 0, 314, 315, 317, 318, 316,
	0, 319, 320, 322, 321, 0, 0, 0, 0, 467,
	468, 323, 324, 0, 325, 326, 0, 0, 328, 329,
	0, 0, 330, 469, 0, 331, 0, 470, 332, 327,
	333, 334, 335, 336, 337, 338, 0, 339, 471, 340,
	472, 341, 0, 342, 0, 343, 344, 345, 346, 347,
	348, 473, 349, 350, 0, 351, 352, 353, 354, 355,
	0, 357, 358, 359, 356, 360, 361, 362, 363, 0,
	364, 0, 365, 366, 367, 368, 474, 369, 0, 370,
	374, 375, 376, 377, 378, 379, 380, 510, 387, 388,
	381, 383, 384, 385, 382, 386, 389, 390, 0, 391,
	371, 372, 392, 0, 393, 475, 394, 395, 0, 405,
	396, 397, 398, 373, 399, 403, 404, 400, 401, 402,
	476, 0, 407, 408, 406, 0, 409, 410, 411, 412,
	413, 261, 414, 262, 415, 0, 477, 478, 479, 416,
	0, 0, 417, 418, 480, 419, 481, 0, 420, 421,
	422, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	430, 0, 431, 0, 429, 432, 433, 434, 482, 483,
	0, 436, 435, 484, 504, 0, 204, 0, 437, 438,
	485, 439, 440, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 209, 210, 211, 505, 212, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 213, 214,
	215, 443, 444, 216, 445, 217, 218, 446, 0, 219,
	220, 221, 222, 223, 224, 0, 0, 225, 447, 448,
	449, 0, 226, 450, 0, 0, 0, 227, 228, 229,
	230, 231, 0, 233, 234, 235, 232, 0, 236, 0,
	237, 238, 239, 508, 0, 240, 241, 0, 0, 0,
	0, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	451, 452, 0, 248, 0, 249, 0, 250, 0, 0,
	251, 252, 253, 0, 254, 0, 255, 256, 0, 453,
	257, 258, 260, 263, 259, 264, 265, 266, 454, 455,
	0, 0, 0, 0, 0, 0, 0, 267, 268, 269,
	456, 270, 271, 0, 272, 0, 273, 0, 0, 0,
	274, 275, 509, 276, 457, 0, 458, 277, 0, 278,
	279, 280, 281, 282, 283, 459, 460, 461, 0, 0,
	465, 285, 0, 0, 0, 0, 284, 286, 293, 0,
	0, 287, 462, 289, 288, 290, 291, 292, 463, 0,
	464, 0, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 300, 301, 302, 303, 0, 305, 304,
	0, 306, 466, 0, 307, 308, 0, 0, 309, 310,
	0, 0, 311, 0, 312, 313, 0, 0, 314, 315,
	317, 318, 316, 0, 319, 320, 322, 321, 0, 0,
	0, 0, 467, 468, 323, 324, 0, 325, 326, 0,
	0, 328, 329, 0, 0, 330, 469, 0, 331, 0,
	470, 332, 327, 333, 334, 335, 336, 337, 338, 0,
	339, 471, 340, 472, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 473, 349, 350, 0, 351, 352,
	353, 354, 355, 0, 357, 358, 359, 356, 360, 361,
	362, 363, 0, 364, 0, 365, 366, 367, 368, 474,
	369, 0, 370, 374, 375, 376, 377, 378, 379, 380,
	510, 387, 388, 381, 383, 384, 385, 382, 386, 389,
	390, 0, 391, 371, 372, 392, 0, 393, 475, 394,
	395, 0, 405, 396, 397, 398, 373, 399, 403, 404,
	400, 401, 402, 476, 0, 407, 408, 406, 0, 409,
	410, 411, 412, 413, 261, 414, 262, 415, 0, 477,
	478, 479, 416, 0, 0, 417, 418, 480, 419, 481,
	0, 420, 421, 422, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 430, 0, 431, 0, 429, 432, 433,
	434, 482, 483, 204, 436, 435, 484, 0, 0, 0,
	0, 437, 438, 485, 439, 440, 441, 0, 0, 207,
	208, 209, 210, 211, 0, 212, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 213, 214, 215, 443, 444,
	216, 445, 217, 218, 446, 0, 219, 220, 221, 222,
	223, 224, 0, 0, 225, 447, 448, 449, 0, 226,
	450, 0, 0, 0, 227, 228, 229, 230, 231, 0,
	233, 234, 235, 232, 0, 236, 0, 237, 238, 239,
	508, 0, 240, 241, 0, 0, 0, 0, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 451, 452, 0,
	248, 0, 249, 0, 250, 0, 0, 251, 252, 253,
	0, 254, 0, 255, 256, 0, 453, 257, 258, 260,
	263, 259, 264, 265, 266, 454, 455, 0, 0, 0,
	0, 0, 0, 0, 267, 268, 269, 456, 270, 271,
	0, 272, 0, 273, 0, 0, 0, 274, 275, 509,
	276, 457, 0, 458, 277, 0, 278, 279, 280, 281,
	282, 283, 459, 460, 461, 0, 0, 465, 285, 0,
	0, 0, 0, 284, 286, 293, 0, 0, 287, 462,
	289, 288, 290, 291, 292, 463, 0, 464, 0, 294,
	0, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	300, 301, 302, 303, 0, 305, 304, 0, 306, 466,
	0, 307, 308, 0, 0, 309, 310, 0, 0, 311,
	0, 312, 313, 0, 0, 314, 315, 317, 318, 316,
	0, 319, 320, 322, 321, 0, 0, 0, 0, 467,
	468, 323, 324, 0, 325, 326, 0, 0, 328, 329,
	0, 0, 330, 469, 0, 331, 0, 470, 332, 327,
	333, 334, 335, 336, 337, 338, 0, 339, 471, 340,
	472, 341, 0, 342, 0, 343, 344, 345, 346, 347,
	348, 473, 349, 350, 0, 351, 352, 353, 354, 355,
	0, 357, 358, 359, 356, 360, 361, 362, 363, 0,
	364, 0, 365, 366, 367, 368, 474, 369, 0, 370,
	374, 375, 376, 377, 378, 379, 380, 510, 387, 388,
	381, 383, 384, 385, 382, 386, 389, 390, 0, 391,
	371, 372, 392, 0, 393, 475, 394, 395, 0, 405,
	396, 397, 398, 373, 399, 403, 404, 400, 401, 402,
	476, 0, 407, 408, 406, 0, 409, 410, 411, 412,
	413, 261, 414, 262, 415, 0, 477, 478, 479, 416,
	0, 0, 417, 418, 480, 419, 481, 0, 420, 421,
	422, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	430, 0, 431, 0, 429, 432, 433, 434, 482, 483,
	0, 436, 435, 484, 1336, 0, 204, 0, 437, 438,
	485, 439, 440, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 209, 210, 211, 0, 212, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 213, 214,
	215, 443, 444, 216, 445, 217, 218, 446, 0, 219,
	220, 221, 222, 223, 224, 0, 0, 225, 447, 448,
	449, 0, 226, 450, 0, 0, 0, 227, 228, 229,
	230, 231, 0, 233, 234, 235, 232, 0, 236, 0,
	237, 238, 239, 0, 0, 240, 241, 0, 0, 0,
	0, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	451, 452, 0, 248, 0, 249, 0, 250, 0, 0,
	251, 252, 253, 0, 254, 0, 255, 256, 0, 453,
	257, 258, 260, 263, 259, 264, 265, 266, 454, 455,
	0, 0, 0, 0, 0, 0, 0, 267, 268, 269,
	456, 270, 271, 0, 272, 0, 273, 0, 0, 0,
	274, 275, 0, 276, 457, 0, 458, 277, 0, 278,
	279, 280, 281, 282, 283, 459, 460, 461, 0, 0,
	465, 285, 0, 0, 0, 0, 284, 286, 293, 0,
	0, 287, 462, 289, 288, 290, 291, 292, 463, 0,
	464, 0, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 300, 301, 302, 303, 0, 305, 304,
	0, 306, 466, 0, 307, 308, 0, 0, 309, 310,
	0, 0, 311, 0, 312, 313, 0, 0, 314, 315,
	317, 318, 316, 0, 319, 320, 322, 321, 0, 0,
	0, 0, 467, 468, 323, 324, 0, 325, 326, 0,
	0, 328, 329, 0, 0, 330, 469, 0, 331, 0,
	470, 332, 327, 333, 334, 335, 336, 337, 338, 0,
	339, 471, 340, 472, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 473, 349, 350, 0, 351, 352,
	353, 354, 355, 0, 357, 358, 359, 356, 360, 361,
	362, 363, 0, 364, 0, 365, 366, 367, 368, 474,
	369, 0, 370, 374, 375, 376, 377, 378, 379, 380,
	0, 1339, 388, 381, 383, 384, 385, 382, 386, 389,
	390, 0, 391, 371, 372, 392, 0, 393, 475, 394,
	395, 0, 405, 396, 397, 398, 373, 399, 403, 404,
	400, 401, 402, 476, 0, 407, 408, 406, 1337, 409,
	410, 411, 412, 413, 261, 414, 262, 415, 0, 477,
	478, 479, 416, 0, 0, 417, 418, 480, 419, 481,
	0, 420, 421, 422, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 430, 0, 431, 0, 429, 432, 433,
	434, 482, 483, 0, 1338, 435, 484, 1114, 0, 204,
	0, 437, 438, 485, 439, 440, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 208, 209, 210, 211,
	0, 212, 0, 0, 0, 0, 442, 0, 0, 0,
	0, 213, 214, 215, 443, 444, 216, 445, 217, 218,
	446, 0, 219, 220, 221, 222, 223, 224, 0, 0,
	225, 447, 448, 449, 0, 226, 450, 0, 0, 0,
	227, 228, 229, 230, 231, 0, 233, 234, 235, 232,
	0, 236, 0, 237, 238, 239, 0, 0, 240, 241,
	0, 0, 0, 0, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 451, 452, 0, 248, 0, 249, 0,
	250, 0, 0, 251, 252, 253, 0, 254, 0, 255,
	256, 0, 453, 257, 258, 260, 263, 259, 264, 265,
	266, 454, 455, 0, 0, 0, 0, 0, 0, 0,
	267, 268, 269, 456, 270, 271, 0, 272, 0, 273,
	0, 0, 0, 274, 275, 0, 276, 457, 0, 458,
	277, 0, 278, 279, 280, 281, 282, 283, 1116, 460,
	461, 0, 0, 465, 285, 0, 0, 0, 0, 284,
	286, 293, 0, 0, 287, 462, 289, 288, 290, 291,
	292, 463, 0, 464, 0, 294, 0, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 300, 301, 302, 303,
	0, 305, 304, 0, 306, 466, 0, 307, 308, 0,
	0, 309, 310, 0, 0, 311, 0, 312, 313, 0,
	0, 314, 315, 317, 318, 316, 0, 319, 320, 322,
	321, 0, 0, 0, 0, 467, 468, 323, 324, 0,
	325, 326, 0, 960, 328, 329, 0, 0, 330, 469,
	0, 331, 0, 470, 332, 327, 333, 334, 335, 336,
	337, 338, 0, 339, 471, 340, 472, 341, 0, 342,
	0, 343, 344, 345, 346, 347, 348, 473, 349, 350,
	0, 351, 352, 353, 354, 355, 0, 357, 358, 359,
	356, 360, 361, 362, 363, 0, 364, 0, 365, 366,
	367, 368, 474, 369, 0, 370, 374, 375, 376, 377,
	378, 379, 380, 0, 387, 388, 381, 383, 384, 385,
	382, 386, 389, 390, 0, 391, 371, 372, 392, 0,
	393, 475, 394, 395, 0, 405, 396, 397, 398, 373,
	399, 403, 404, 400, 401, 402, 476, 0, 407, 408,
	406, 0, 409, 410, 411, 412, 413, 261, 414, 262,
	415, 0, 477, 478, 479, 416, 0, 0, 417, 418,
	480, 419, 481, 0, 420, 421, 422, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 430, 0, 431, 0,
	429, 432, 433, 434, 482, 483, 0, 436, 435, 484,
	1111, 0, 204, 0, 437, 438, 485, 439, 440, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	209, 210, 211, 0, 212, 0, 0, 0, 0, 442,
	0, 0, 0, 0, 213, 214, 215, 443, 444, 216,
	445, 217, 218, 446, 0, 219, 220, 221, 222, 223,
	224, 0, 0, 225, 447, 448, 449, 0, 226, 450,
	0, 0, 0, 227, 228, 229, 230, 231, 0, 233,
	234, 235, 232, 0, 236, 0, 237, 238, 239, 0,
	0, 240, 241, 0, 0, 0, 0, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 451, 452, 0, 248,
	0, 249, 0, 250, 0, 0, 251, 252, 253, 0,
	254, 0, 255, 256, 0, 453, 257, 258, 260, 263,
	259, 264, 265, 266, 454, 455, 0, 0, 0, 0,
	0, 0, 0, 267, 268, 269, 456, 270, 271, 0,
	272, 0, 273, 0, 0, 0, 274, 275, 0, 276,
	457, 0, 458, 277, 0, 278, 279, 280, 281, 282,
	283, 1113, 460, 461, 0, 0, 465, 285, 0, 0,
	0, 0, 284, 286, 293, 0, 0, 287, 462, 289,
	288, 290, 291, 292, 463, 0, 464, 0, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 300,
	301, 302, 303, 0, 305, 304, 0, 306, 466, 0,
	307, 308, 0, 0, 309, 310, 0, 0, 311, 0,
	312, 313, 0, 0, 314, 315, 317, 318, 316, 0,
	319, 320, 322, 321, 0, 0, 0, 0, 467, 468,
	323, 324, 0, 325, 326, 0, 960, 328, 329, 0,
	0, 330, 469, 0, 331, 0, 470, 332, 327, 333,
	334, 335, 336, 337, 338, 0, 339, 471, 340, 472,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	473, 349, 350, 0, 351, 352, 353, 354, 355, 0,
	357, 358, 359, 356, 360, 361, 362, 363, 0, 364,
	0, 365, 366, 367, 368, 474, 369, 0, 370, 374,
	375, 376, 377, 378, 379, 380, 0, 387, 388, 381,
	383, 384, 385, 382, 386, 389, 390, 0, 391, 371,
	372, 392, 0, 393, 475, 394, 395, 0, 405, 396,
	397, 398, 373, 399, 403, 404, 400, 401, 402, 476,
	0, 407, 408, 406, 0, 409, 410, 411, 412, 413,
	261, 414, 262, 415, 0, 477, 478, 479, 416, 0,
	0, 417, 418, 480, 419, 481, 0, 420, 421, 422,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 430,
	0, 431, 0, 429, 432, 433, 434, 482, 483, 0,
	436, 435, 484, 1018, 0, 204, 0, 437, 438, 485,
	439, 440, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 208, 209, 210, 211, 0, 212, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 213, 214, 215,
	443, 444, 216, 445, 217, 218, 446, 0, 219, 220,
	221, 222, 223, 224, 0, 0, 225, 447, 448, 449,
	0, 226, 450, 0, 0, 0, 227, 228, 229, 230,
	231, 0, 233, 234, 235, 232, 0, 236, 0, 237,
	238, 239, 0, 0, 240, 241, 0, 0, 0, 0,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 451,
	452, 0, 248, 0, 249, 0, 250, 0, 0, 251,
	252, 253, 0, 254, 0, 255, 256, 0, 453, 257,
	258, 260, 263, 259, 264, 265, 266, 454, 455, 0,
	0, 0, 0, 0, 0, 0, 267, 268, 269, 456,
	270, 271, 0, 272, 0, 273, 0, 0, 0, 274,
	275, 0, 276, 457, 0, 458, 277, 0, 278, 279,
	280, 281, 282, 283, 1020, 460, 461, 0, 0, 465,
	285, 0, 0, 0, 0, 284, 286, 293, 0, 0,
	287, 462, 289, 288, 290, 291, 292, 463, 0, 464,
	0, 294, 0, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 300, 301, 302, 303, 0, 305, 304, 0,
	306, 466, 0, 307, 308, 0, 0, 309, 310, 0,
	0, 311, 0, 312, 313, 0, 0, 314, 315, 317,
	318, 316, 0, 319, 320, 322, 321, 0, 0, 0,
	0, 467, 468, 323, 324, 0, 325, 326, 0, 960,
	328, 329, 0, 0, 330, 469, 0, 331, 0, 470,
	332, 327, 333, 334, 335, 336, 337, 338, 0, 339,
	471, 340, 472, 341, 0, 342, 0, 343, 344, 345,
	346, 347, 348, 473, 349, 350, 0, 351, 352, 353,
	354, 355, 0, 357, 358, 359, 356, 360, 361, 362,
	363, 0, 364, 0, 365, 366, 367, 368, 474, 369,
	0, 370, 374, 375, 376, 377, 378, 379, 380, 0,
	387, 388, 381, 383, 384, 385, 382, 386, 389, 390,
	0, 391, 371, 372, 392, 0, 393, 475, 394, 395,
	0, 405, 396, 397, 398, 373, 399, 403, 404, 400,
	401, 402, 476, 0, 407, 408, 406, 0, 409, 410,
	411, 412, 413, 261, 414, 262, 415, 0, 477, 478,
	479, 416, 0, 0, 417, 418, 480, 419, 481, 0,
	420, 421, 422, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 430, 0, 431, 0, 429, 432, 433, 434,
	482, 483, 0, 436, 435, 484, 652, 0, 204, 0,
	437, 438, 485, 439, 440, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 209, 210, 211, 0,
	212, 0, 0, 0, 0, 442, 0, 0, 0, 0,
	213, 214, 215, 443, 444, 216, 445, 217, 218, 446,
	0, 219, 220, 221, 222, 223, 224, 0, 0, 225,
	447, 448, 449, 0, 226, 450, 0, 0, 0, 227,
	228, 229, 230, 231, 0, 233, 234, 235, 232, 0,
	236, 0, 237, 238, 239, 0, 0, 240, 241, 0,
	0, 0, 0, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 451, 452, 0, 248, 0, 249, 0, 250,
	0, 0, 251, 252, 253, 0, 254, 0, 255, 256,
	0, 453, 257, 258, 260, 263, 259, 264, 265, 266,
	454, 455, 0, 0, 0, 0, 0, 0, 0, 267,
	268, 269, 456, 270, 271, 0, 272, 0, 273, 0,
	0, 0, 274, 275, 0, 276, 457, 0, 458, 277,
	0, 278, 279, 280, 281, 282, 283, 459, 460, 461,
	0, 0, 465, 285, 0, 0, 0, 0, 284, 286,
	293, 0, 0, 287, 462, 289, 288, 290, 291, 292,
	463, 0, 464, 0, 294, 0, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 300, 301, 302, 303, 0,
	305, 304, 0, 306, 466, 0, 307, 308, 0, 0,
	309, 310, 0, 0, 311, 0, 312, 313, 0, 0,
	314, 315, 317, 318, 316, 0, 319, 320, 322, 321,
	0, 0, 0, 0, 467, 468, 323, 324, 0, 325,
	326, 0, 0, 328, 329, 0, 0, 330, 469, 0,
	331, 0, 470, 332, 327, 333, 334, 335, 336, 337,
	338, 0, 339, 471, 340, 472, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 473, 349, 350, 0,
	351, 352, 353, 354, 355, 0, 357, 358, 359, 356,
	360, 361, 362, 363, 0, 364, 0, 365, 366, 367,
	368, 474, 369, 0, 370, 374, 375, 376, 377, 378,
	379, 380, 0, 387, 388, 381, 383, 384, 385, 382,
	386, 389, 390, 0, 391, 371, 372, 392, 0, 393,
	475, 394, 395, 0, 405, 396, 397, 398, 373, 399,
	403, 404, 400, 401, 402, 476, 0, 407, 408, 406,
	651, 409, 410, 411, 412, 413, 261, 414, 262, 415,
	0, 477, 478, 479, 416, 0, 0, 417, 418, 480,
	419, 481, 0, 420, 421, 422, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 430, 0, 431, 0, 429,
	432, 433, 434, 482, 483, 0, 436, 435, 484, 493,
	0, 204, 0, 437, 438, 485, 439, 440, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 208, 209,
	210, 211, 492, 212, 0, 0, 0, 0, 442, 0,
	0, 0, 0, 213, 214, 215, 443, 444, 216, 445,
	217, 218, 446, 0, 219, 220, 221, 222, 223, 224,
	0, 0, 225, 447, 448, 449, 0, 226, 450, 0,
	0, 0, 227, 228, 229, 230, 231, 0, 233, 234,
	235, 232, 0, 236, 0, 237, 238, 239, 0, 0,
	240, 241, 0, 0, 0, 0, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 451, 452, 0, 248, 0,
	249, 0, 250, 0, 0, 251, 252, 253, 0, 254,
	0, 255, 256, 0, 453, 257, 258, 260, 263, 259,
	264, 265, 266, 454, 455, 0, 0, 0, 0, 0,
	0, 0, 267, 268, 269, 456, 270, 271, 0, 272,
	0, 273, 0, 0, 0, 274, 275, 0, 276, 457,
	0, 458, 277, 0, 278, 279, 280, 281, 282, 283,
	459, 460, 461, 0, 0, 465, 285, 0, 0, 0,
	0, 284, 286, 293, 0, 0, 287, 462, 289, 288,
	290, 291, 292, 463, 0, 464, 0, 294, 0, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 300, 301,
	302, 303, 0, 305, 304, 0, 306, 466, 0, 307,
	308, 0, 0, 309, 310, 0, 0, 311, 0, 312,
	313, 0, 0, 314, 315, 317, 318, 316, 0, 319,
	320, 322, 321, 0, 0, 0, 0, 467, 468, 323,
	324, 0, 325, 326, 0, 0, 328, 329, 0, 0,
	330, 469, 0, 331, 0, 470, 332, 327, 333, 334,
	335, 336, 337, 338, 0, 339, 471, 340, 472, 491,
	0, 342, 0, 343, 344, 345, 346, 347, 348, 473,
	349, 350, 0, 351, 352, 353, 354, 355, 0, 357,
	358, 359, 356, 360, 361, 362, 363, 0, 364, 0,
	365, 366, 367, 368, 474, 369, 0, 370, 374, 375,
	376, 377, 378, 379, 380, 0, 387, 388, 381, 383,
	384, 385, 382, 386, 389, 390, 0, 391, 371, 372,
	392, 0, 393, 475, 394, 395, 0, 405, 396, 397,
	398, 373, 399, 403, 404, 400, 401, 402, 476, 0,
	407, 408, 406, 0, 409, 410, 411, 412, 413, 261,
	414, 262, 415, 0, 477, 478, 479, 416, 0, 0,
	417, 418, 480, 419, 481, 0, 420, 421, 422, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 430, 0,
	431, 0, 429, 432, 433, 434, 482, 483, 204, 436,
	435, 484, 0, 0, 0, 0, 437, 438, 485, 439,
	440, 441, 0, 0, 207, 208, 209, 210, 211, 0,
	212, 0, 0, 0, 0, 442, 0, 2070, 0, 0,
	213, 214, 215, 443, 444, 216, 445, 217, 218, 446,
	0, 219, 220, 221, 222, 223, 224, 0, 0, 225,
	447, 448, 449, 0, 226, 450, 0, 0, 0, 227,
	228, 229, 230, 231, 0, 233, 234, 235, 232, 0,
	236, 0, 237, 238, 239, 0, 0, 240, 241, 0,
	0, 0, 0, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 451, 452, 0, 248, 0, 249, 0, 250,
	0, 0, 251, 252, 253, 0, 254, 0, 255, 256,
	0, 453, 257, 258, 260, 263, 259, 264, 265, 266,
	454, 455, 0, 0, 0, 0, 0, 0, 0, 267,
	268, 269, 456, 270, 271, 0, 272, 0, 273, 0,
	0, 0, 274, 275, 0, 276, 457, 0, 458, 277,
	0, 278, 279, 280, 281, 282, 283, 459, 460, 461,
	0, 0, 465, 285, 0, 0, 0, 0, 284, 286,
	293, 0, 0, 287, 462, 289, 288, 290, 291, 292,
	463, 0, 464, 0, 294, 0, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 300, 301, 302, 303, 0,
	305, 304, 0, 306, 466, 0, 307, 308, 0, 0,
	309, 310, 0, 0, 311, 0, 312, 313, 0, 0,
	314, 315, 317, 318, 316, 0, 319, 320, 322, 321,
	0, 0, 0, 0, 467, 468, 323, 324, 0, 325,
	326, 0, 0, 328, 329, 0, 0, 330, 469, 0,
	331, 0, 470, 332, 327, 333, 334, 335, 336, 337,
	338, 0, 339, 471, 340, 472, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 473, 349, 350, 0,
	351, 352, 353, 354, 355, 0, 357, 358, 359, 356,
	360, 361, 362, 363, 0, 364, 0, 365, 366, 367,
	368, 474, 369, 0, 370, 374, 375, 376, 377, 378,
	379, 380, 0, 387, 388, 381, 383, 384, 385, 382,
	386, 389, 390, 0, 391, 371, 372, 392, 0, 393,
	475, 394, 395, 0, 405, 396, 397, 398, 373, 399,
	403, 404, 400, 401, 402, 476, 0, 407, 408, 406,
	0, 409, 410, 411, 412, 413, 261, 414, 262, 415,
	0, 477, 478, 479, 416, 0, 0, 417, 418, 480,
	419, 481, 0, 420, 421, 422, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 430, 0, 431, 0, 429,
	432, 433, 434, 482, 483, 0, 436, 435, 484, 204,
	2257, 0, 0, 437, 438, 485, 439, 440, 441, 0,
	0, 0, 0, 0, 0, 207, 208, 209, 210, 211,
	0, 212, 0, 0, 0, 0, 442, 0, 0, 0,
	0, 213, 214, 215, 443, 444, 216, 445, 217, 218,
	446, 0, 219, 220, 221, 222, 223, 224, 0, 0,
	225, 447, 448, 449, 0, 226, 450, 0, 0, 0,
	227, 228, 229, 230, 231, 0, 233, 234, 235, 232,
	0, 236, 0, 237, 238, 239, 0, 0, 240, 241,
	0, 0, 0, 0, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 451, 452, 0, 248, 0, 249, 0,
	250, 0, 0, 251, 252, 253, 0, 254, 0, 255,
	256, 0, 453, 257, 258, 260, 263, 259, 264, 265,
	266, 454, 455, 0, 0, 0, 0, 0, 0, 0,
	267, 268, 269, 456, 270, 271, 0, 272, 0, 273,
	0, 0, 0, 274, 275, 0, 276, 457, 0, 458,
	277, 0, 278, 279, 280, 281, 282, 283, 459, 460,
	461, 0, 0, 465, 285, 0, 0, 0, 0, 284,
	286, 293, 0, 0, 287, 462, 289, 288, 290, 291,
	292, 463, 0, 464, 0, 294, 0, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 300, 301, 302, 303,
	0, 305, 304, 0, 306, 466, 0, 307, 308, 0,
	0, 309, 310, 0, 0, 311, 0, 312, 313, 0,
	0, 314, 315, 317, 318, 316, 0, 319, 320, 322,
	321, 0, 0, 0, 0, 467, 468, 323, 324, 0,
	325, 326, 0, 0, 328, 329, 0, 0, 330, 469,
	0, 331, 0, 470, 332, 327, 333, 334, 335, 336,
	337, 338, 0, 339, 471, 340, 472, 341, 0, 342,
	0, 343, 344, 345, 346, 347, 348, 473, 349, 350,
	0, 351, 352, 353, 354, 355, 0, 357, 358, 359,
	356, 360, 361, 362, 363, 0, 364, 0, 365, 366,
	367, 368, 474, 369, 0, 370, 374, 375, 376, 377,
	378, 379, 380, 0, 387, 388, 381, 383, 384, 385,
	382, 386, 389, 390, 0, 391, 371, 372, 392, 0,
	393, 475, 394, 395, 0, 405, 396, 397, 398, 373,
	399, 403, 404, 400, 401, 402, 476, 0, 407, 408,
	406, 0, 409, 410, 411, 412, 413, 261, 414, 262,
	415, 0, 477, 478, 479, 416, 0, 0, 417, 418,
	480, 419, 481, 0, 420, 421, 422, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 430, 0, 431, 0,
	429, 432, 433, 434, 482, 483, 204, 436, 435, 484,
	0, 0, 0, 0, 437, 438, 485, 439, 440, 441,
	0, 0, 207, 208, 209, 210, 211, 0, 212, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 213, 214,
	215, 443, 444, 216, 445, 217, 218, 446, 0, 219,
	220, 221, 222, 223, 224, 0, 0, 225, 447, 448,
	449, 0, 226, 450, 0, 0, 0, 227, 228, 229,
	230, 231, 0, 233, 234, 235, 232, 0, 236, 0,
	237, 238, 239, 0, 0, 240, 241, 0, 0, 0,
	0, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	451, 452, 2801, 248, 0, 249, 0, 250, 0, 0,
	251, 252, 253, 0, 254, 0, 255, 256, 0, 453,
	257, 258, 260, 263, 259, 264, 265, 266, 454, 455,
	0, 0, 0, 0, 0, 0, 0, 267, 268, 269,
	456, 270, 271, 0, 272, 0, 273, 0, 0, 0,
	274, 275, 0, 276, 457, 0, 458, 277, 0, 278,
	279, 280, 281, 282, 283, 459, 460, 461, 0, 0,
	465, 285, 0, 0, 0, 0, 284, 286, 293, 0,
	0, 287, 462, 289, 288, 290, 291, 292, 463, 0,
	464, 0, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 300, 301, 302, 303, 0, 305, 304,
	0, 306, 466, 0, 307, 308, 0, 0, 309, 310,
	0, 0, 311, 0, 312, 313, 0, 0, 314, 315,
	317, 318, 316, 0, 319, 320, 322, 321, 0, 0,
	0, 0, 467, 468, 323, 324, 0, 325, 326, 0,
	0, 328, 329, 0, 0, 330, 469, 0, 331, 0,
	470, 332, 327, 333, 334, 335, 336, 337, 338, 0,
	339, 471, 340, 472, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 473, 349, 350, 0, 351, 352,
	353, 354, 355, 0, 357, 358, 359, 356, 360, 361,
	362, 363, 0, 364, 0, 365, 366, 367, 368, 474,
	369, 0, 370, 374, 375, 376, 377, 378, 379, 380,
	0, 387, 388, 381, 383, 384, 385, 382, 386, 389,
	390, 0, 391, 371, 372, 392, 0, 393, 475, 394,
	395, 0, 405, 396, 397, 398, 373, 399, 403, 404,
	400, 401, 402, 476, 0, 407, 408, 406, 0, 409,
	410, 411, 412, 413, 261, 414, 262, 415, 0, 477,
	478, 479, 416, 0, 0, 417, 418, 480, 419, 481,
	0, 420, 421, 422, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 430, 0, 431, 0, 429, 432, 433,
	434, 482, 483, 204, 436, 435, 484, 0, 0, 0,
	0, 437, 438, 485, 439, 440, 441, 0, 0, 207,
	208, 209, 210, 211, 0, 212, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 213, 214, 215, 443, 444,
	216, 445, 217, 218, 446, 0, 219, 220, 221, 222,
	223, 224, 0, 0, 225, 447, 448, 449, 0, 226,
	450, 0, 0, 0, 227, 228, 229, 230, 231, 0,
	233, 234, 235, 232, 0, 236, 0, 237, 238, 239,
	0, 0, 240, 241, 0, 0, 0, 0, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 451, 452, 0,
	248, 0, 249, 0, 250, 0, 0, 251, 252, 253,
	0, 254, 0, 255, 256, 0, 453, 257, 258, 260,
	263, 259, 264, 265, 266, 454, 455, 0, 0, 0,
	0, 0, 0, 0, 267, 268, 269, 456, 270, 271,
	0, 272, 0, 273, 0, 0, 0, 274, 275, 0,
	276, 457, 0, 458, 277, 0, 278, 279, 280, 281,
	282, 283, 459, 460, 461, 0, 0, 465, 285, 0,
	0, 0, 0, 284, 286, 293, 0, 0, 287, 462,
	289, 288, 290, 291, 292, 463, 0, 464, 0, 294,
	0, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	300, 301, 302, 303, 0, 305, 304, 0, 306, 466,
	0, 307, 308, 0, 0, 309, 310, 0, 0, 311,
	0, 312, 313, 0, 0, 314, 315, 317, 318, 316,
	0, 319, 320, 322, 321, 0, 0, 0, 0, 467,
	468, 323, 324, 0, 325, 326, 0, 960, 328, 329,
	0, 0, 330, 469, 0, 331, 0, 470, 332, 327,
	333, 334, 335, 336, 337, 338, 0, 339, 471, 340,
	472, 341, 0, 342, 0, 343, 344, 345, 346, 347,
	348, 473, 349, 350, 0, 351, 352, 353, 354, 355,
	0, 357, 358, 359, 356, 360, 361, 362, 363, 0,
	364, 0, 365, 366, 367, 368, 474, 369, 0, 370,
	374, 375, 376, 377, 378, 379, 380, 0, 387, 388,
	381, 383, 384, 385, 382, 386, 389, 390, 0, 391,
	371, 372, 392, 0, 393, 475, 394, 395, 0, 405,
	396, 397, 398, 373, 399, 403, 404, 400, 401, 402,
	476, 0, 407, 408, 406, 0, 409, 410, 411, 412,
	413, 261, 414, 262, 415, 0, 477, 478, 479, 416,
	0, 0, 417, 418, 480, 419, 481, 0, 420, 421,
	422, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	430, 0, 431, 0, 429, 432, 433, 434, 482, 483,
	0, 436, 435, 484, 204, 2257, 0, 0, 437, 438,
	485, 439, 440, 441, 0, 0, 0, 0, 0, 0,
	207, 208, 209, 210, 211, 0, 212, 0, 0, 0,
	0, 442, 0, 0, 0, 0, 213, 214, 215, 443,
	444, 216, 445, 217, 218, 446, 0, 219, 220, 221,
	222, 223, 224, 0, 0, 225, 447, 448, 449, 0,
	226, 450, 0, 0, 0, 227, 228, 229, 230, 231,
	0, 233, 234, 235, 232, 0, 236, 0, 237, 238,
	239, 0, 0, 240, 241, 0, 0, 0, 0, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 451, 452,
	0, 248, 0, 249, 0, 250, 0, 0, 251, 252,
	253, 0, 254, 0, 255, 256, 0, 453, 257, 258,
	260, 263, 259, 264, 265, 266, 454, 455, 0, 0,
	0, 0, 0, 0, 0, 267, 268, 269, 456, 270,
	271, 0, 272, 0, 273, 0, 0, 0, 274, 275,
	0, 276, 457, 0, 458, 277, 0, 278, 279, 280,
	281, 282, 283, 459, 460, 461, 0, 0, 465, 285,
	0, 0, 0, 0, 284, 286, 293, 0, 0, 287,
	462, 289, 288, 290, 291, 292, 463, 0, 464, 0,
	294, 0, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 300, 301, 302, 303, 0, 305, 304, 0, 306,
	466, 0, 307, 308, 0, 0, 309, 310, 0, 0,
	311, 0, 312, 313, 0, 0, 314, 315, 317, 318,
	316, 0, 319, 320, 322, 321, 0, 0, 0, 0,
	467, 468, 323, 324, 0, 325, 326, 0, 0, 328,
	2254, 0, 0, 330, 469, 0, 331, 0, 470, 332,
	327, 333, 334, 335, 336, 337, 338, 0, 339, 471,
	340, 472, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 473, 349, 350, 0, 351, 352, 353, 354,
	355, 0, 357, 358, 359, 356, 360, 361, 362, 363,
	0, 364, 0, 365, 366, 367, 368, 474, 369, 0,
	370, 374, 375, 376, 377, 378, 379, 380, 0, 387,
	388, 381, 383, 384, 385, 382, 386, 389, 390, 0,
	391, 371, 372, 392, 0, 393, 475, 394, 395, 0,
	405, 396, 397, 398, 373, 399, 403, 404, 400, 401,
	402, 476, 0, 407, 408, 406, 0, 409, 410, 411,
	412, 413, 261, 414, 262, 415, 0, 477, 478, 479,
	416, 0, 0, 417, 418, 480, 419, 481, 0, 420,
	421, 422, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 430, 0, 431, 0, 429, 432, 433, 434, 482,
	483, 0, 436, 435, 484, 2201, 0, 204, 0, 437,
	438, 485, 439, 440, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 208, 209, 210, 211, 0, 212,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 213,
	214, 215, 443, 444, 216, 445, 217, 218, 446, 0,
	219, 220, 221, 222, 223, 224, 0, 0, 225, 447,
	448, 449, 0, 226, 450, 0, 0, 0, 227, 228,
	229, 230, 231, 0, 233, 234, 235, 232, 0, 236,
	0, 237, 238, 239, 0, 0, 240, 241, 0, 0,
	0, 0, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 451, 452, 0, 248, 0, 249, 0, 250, 0,
	0, 251, 252, 253, 0, 254, 0, 255, 256, 0,
	453, 257, 258, 260, 263, 259, 264, 265, 266, 454,
	455, 0, 0, 0, 0, 0, 0, 0, 267, 268,
	269, 456, 270, 271, 0, 272, 0, 273, 0, 0,
	0, 274, 275, 0, 276, 457, 0, 458, 277, 0,
	278, 279, 280, 281, 282, 283, 459, 460, 461, 0,
	0, 465, 285, 0, 0, 0, 0, 284, 286, 293,
	0, 0, 287, 462, 289, 288, 290, 291, 292, 463,
	0, 464, 0, 294, 0, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 300, 301, 302, 303, 0, 305,
	304, 0, 306, 466, 0, 307, 308, 0, 0, 309,
	310, 0, 0, 311, 0, 312, 313, 0, 0, 314,
	315, 317, 318, 316, 0, 319, 320, 322, 321, 0,
	0, 0, 0, 467, 468, 323, 324, 0, 325, 326,
	0, 0, 328, 329, 0, 0, 330, 469, 0, 331,
	0, 470, 332, 327, 333, 334, 335, 336, 337, 338,
	0, 339, 471, 340, 472, 341, 0, 342, 0, 343,
	344, 345, 346, 347, 348, 473, 349, 350, 0, 351,
	352, 353, 354, 355, 0, 357, 358, 359, 356, 360,
	361, 362, 363, 0, 364, 0, 365, 366, 367, 368,
	474, 369, 0, 370, 374, 375, 376, 377, 378, 379,
	380, 0, 387, 388, 381, 383, 384, 385, 382, 386,
	389, 390, 0, 391, 371, 372, 392, 0, 393, 475,
	394, 395, 0, 405, 396, 397, 398, 373, 399, 403,
	404, 400, 401, 402, 476, 0, 407, 408, 406, 0,
	409, 410, 411, 412, 413, 261, 414, 262, 415, 0,
	477, 478, 479, 416, 0, 0, 417, 418, 480, 419,
	481, 0, 420, 421, 422, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 430, 0, 431, 0, 429, 432,
	433, 434, 482, 483, 204, 436, 435, 484, 0, 0,
	0, 0, 437, 438, 485, 439, 440, 441, 0, 0,
	207, 208, 209, 210, 211, 1806, 212, 0, 0, 0,
	0, 442, 0, 0, 0, 0, 213, 214, 215, 443,
	444, 216, 445, 217, 218, 446, 0, 219, 220, 221,
	222, 223, 224, 0, 0, 225, 447, 448, 449, 0,
	226, 450, 0, 0, 0, 227, 228, 229, 230, 231,
	0, 233, 234, 235, 232, 0, 236, 0, 237, 238,
	239, 0, 0, 240, 241, 0, 0, 0, 0, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 451, 452,
	0, 248, 0, 249, 0, 250, 0, 0, 251, 252,
	253, 0, 254, 0, 255, 256, 0, 453, 257, 258,
	260, 263, 259, 264, 265, 266, 454, 455, 0, 0,
	0, 0, 0, 0, 0, 267, 268, 269, 456, 270,
	271, 0, 272, 0, 273, 0, 0, 0, 274, 275,
	0, 276, 457, 0, 458, 277, 0, 278, 279, 280,
	281, 282, 283, 459, 460, 461, 0, 0, 465, 285,
	0, 0, 0, 0, 284, 286, 293, 0, 0, 287,
	462, 289, 288, 290, 291, 292, 463, 0, 464, 0,
	294, 0, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 300, 301, 302, 303, 0, 305, 304, 0, 306,
	466, 0, 307, 308, 0, 0, 309, 310, 0, 0,
	311, 0, 312, 313, 0, 0, 314, 315, 317, 318,
	316, 0, 319, 320, 322, 321, 0, 0, 0, 0,
	467, 468, 323, 324, 0, 325, 326, 0, 0, 328,
	329, 0, 0, 330, 469, 0, 331, 0, 470, 332,
	327, 333, 334, 335, 336, 337, 338, 0, 339, 471,
	340, 472, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 473, 349, 350, 0, 351, 352, 353, 354,
	355, 0, 357, 358, 359, 356, 360, 361, 362, 363,
	0, 364, 0, 365, 366, 367, 368, 474, 369, 0,
	370, 374, 375, 376, 377, 378, 379, 380, 0, 387,
	388, 381, 383, 384, 385, 382, 386, 389, 390, 0,
	391, 371, 372, 392, 0, 393, 475, 394, 395, 0,
	405, 396, 397, 398, 373, 399, 403, 404, 400, 401,
	402, 476, 0, 407, 408, 406, 0, 409, 410, 411,
	412, 413, 261, 414, 262, 415, 0, 477, 478, 479,
	416, 0, 0, 417, 418, 480, 419, 481, 0, 420,
	421, 422, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 430, 0, 431, 0, 429, 432, 433, 434, 482,
	483, 0, 436, 435, 484, 1800, 0, 204, 0, 437,
	438, 485, 439, 440, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 208, 209, 210, 211, 0, 212,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 213,
	214, 215, 443, 444, 216, 445, 217, 218, 446, 0,
	219, 220, 221, 222, 223, 224, 0, 0, 225, 447,
	448, 449, 0, 226, 450, 0, 0, 0, 227, 228,
	229, 230, 231, 0, 233, 234, 235, 232, 0, 236,
	0, 237, 238, 239, 0, 0, 240, 241, 0, 0,
	0, 0, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 451, 452, 0, 248, 0, 249, 0, 250, 0,
	0, 251, 252, 253, 0, 254, 0, 255, 256, 0,
	453, 257, 258, 260, 263, 259, 264, 265, 266, 454,
	455, 0, 0, 0, 0, 0, 0, 0, 267, 268,
	269, 456, 270, 271, 0, 272, 0, 273, 0, 0,
	0, 274, 275, 0, 276, 457, 0, 458, 277, 0,
	278, 279, 280, 281, 282, 283, 459, 460, 461, 0,
	0, 465, 285, 0, 0, 0, 0, 284, 286, 293,
	0, 0, 287, 462, 289, 288, 290, 291, 292, 463,
	0, 464, 0, 294, 0, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 300, 301, 302, 303, 0, 305,
	304, 0, 306, 466, 0, 307, 308, 0, 0, 309,
	310, 0, 0, 311, 0, 312, 313, 0, 0, 314,
	315, 317, 318, 316, 0, 319, 320, 322, 321, 0,
	0, 0, 0, 467, 468, 323, 324, 0, 325, 326,
	0, 0, 328, 329, 0, 0, 330, 469, 0, 331,
	0, 470, 332, 327, 333, 334, 335, 336, 337, 338,
	0, 339, 471, 340, 472, 341, 0, 342, 0, 343,
	344, 345, 346, 347, 348, 473, 349, 350, 0, 351,
	352, 353, 354, 355, 0, 357, 358, 359, 356, 360,
	361, 362, 363, 0, 364, 0, 365, 366, 367, 368,
	474, 369, 0, 370, 374, 375, 376, 377, 378, 379,
	380, 0, 387, 388, 381, 383, 384, 385, 382, 386,
	389, 390, 0, 391, 371, 372, 392, 0, 393, 475,
	394, 395, 0, 405, 396, 397, 398, 373, 399, 403,
	404, 400, 401, 402, 476, 0, 407, 408, 406, 0,
	409, 410, 411, 412, 413, 261, 414, 262, 415, 0,
	477, 478, 479, 416, 0, 0, 417, 418, 480, 419,
	481, 0, 420, 421, 422, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 430, 0, 431, 0, 429, 432,
	433, 434, 482, 483, 0, 436, 435, 484, 1798, 0,
	204, 0, 437, 438, 485, 439, 440, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 208, 209, 210,
	211, 0, 212, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 213, 214, 215, 443, 444, 216, 445, 217,
	218, 446, 0, 219, 220, 221, 222, 223, 224, 0,
	0, 225, 447, 448, 449, 0, 226, 450, 0, 0,
	0, 227, 228, 229, 230, 231, 0, 233, 234, 235,
	232, 0, 236, 0, 237, 238, 239, 0, 0, 240,
	241, 0, 0, 0, 0, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 451, 452, 0, 248, 0, 249,
	0, 250, 0, 0, 251, 252, 253, 0, 254, 0,
	255, 256, 0, 453, 257, 258, 260, 263, 259, 264,
	265, 266, 454, 455, 0, 0, 0, 0, 0, 0,
	0, 267, 268, 269, 456, 270, 271, 0, 272, 0,
	273, 0, 0, 0, 274, 275, 0, 276, 457, 0,
	458, 277, 0, 278, 279, 280, 281, 282, 283, 459,
	460, 461, 0, 0, 465, 285, 0, 0, 0, 0,
	284, 286, 293, 0, 0, 287, 462, 289, 288, 290,
	291, 292, 463, 0, 464, 0, 294, 0, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 300, 301, 302,
	303, 0, 305, 304, 0, 306, 466, 0, 307, 308,
	0, 0, 309, 310, 0, 0, 311, 0, 312, 313,
	0, 0, 314, 315, 317, 318, 316, 0, 319, 320,
	322, 321, 0, 0, 0, 0, 467, 468, 323, 324,
	0, 325, 326, 0, 0, 328, 329, 0, 0, 330,
	469, 0, 331, 0, 470, 332, 327, 333, 334, 335,
	336, 337, 338, 0, 339, 471, 340, 472, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 473, 349,
	350, 0, 351, 352, 353, 354, 355, 0, 357, 358,
	359, 356, 360, 361, 362, 363, 0, 364, 0, 365,
	366, 367, 368, 474, 369, 0, 370, 374, 375, 376,
	377, 378, 379, 380, 0, 387, 388, 381, 383, 384,
	385, 382, 386, 389, 390, 0, 391, 371, 372, 392,
	0, 393, 475, 394, 395, 0, 405, 396, 397, 398,
	373, 399, 403, 404, 400, 401, 402, 476, 0, 407,
	408, 406, 0, 409, 410, 411, 412, 413, 261, 414,
	262, 415, 0, 477, 478, 479, 416, 0, 0, 417,
	418, 480, 419, 481, 0, 420, 421, 422, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 430, 0, 431,
	0, 429, 432, 433, 434, 482, 483, 0, 436, 435,
	484, 536, 0, 204, 0, 437, 438, 485, 439, 440,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	208, 209, 210, 211, 0, 212, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 213, 214, 215, 443, 444,
	216, 445, 217, 218, 446, 0, 219, 220, 221, 222,
	223, 224, 0, 0, 225, 447, 448, 998, 0, 226,
	450, 0, 0, 0, 227, 228, 229, 230, 231, 0,
	233, 234, 235, 232, 0, 236, 0, 237, 238, 239,
	0, 0, 240, 241, 0, 0, 0, 0, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 451, 452, 0,
	248, 0, 249, 0, 250, 0, 0, 251, 252, 253,
	0, 254, 0, 255, 256, 0, 453, 257, 258, 260,
	263, 259, 264, 265, 266, 454, 455, 0, 0, 0,
	0, 0, 0, 0, 267, 268, 269, 456, 270, 271,
	0, 272, 0, 273, 0, 0, 0, 274, 275, 0,
	276, 457, 0, 458, 277, 0, 278, 279, 280, 281,
	282, 283, 459, 460, 461, 0, 0, 465, 285, 0,
	0, 0, 0, 284, 286, 293, 0, 0, 287, 462,
	289, 288, 290, 291, 292, 463, 0, 464, 0, 294,
	0, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	300, 301, 302, 303, 0, 305, 304, 0, 306, 466,
	0, 307, 308, 0, 0, 309, 310, 0, 0, 311,
	0, 312, 313, 0, 0, 314, 315, 317, 318, 537,
	0, 319, 320, 322, 321, 0, 0, 0, 0, 467,
	468, 323, 324, 0, 325, 326, 0, 0, 328, 329,
	0, 0, 330, 469, 0, 331, 0, 470, 332, 327,
	333, 334, 335, 336, 337, 338, 0, 339, 471, 340,
	472, 341, 0, 342, 0, 343, 344, 345, 346, 347,
	348, 473, 349, 350, 0, 351, 352, 353, 354, 355,
	0, 357, 358, 359, 356, 360, 361, 362, 363, 0,
	364, 0, 365, 366, 367, 368, 474, 369, 0, 370,
	374, 375, 533, 377, 378, 379, 380, 0, 387, 388,
	381, 383, 384, 385, 382, 386, 389, 390, 0, 391,
	371, 372, 392, 0, 393, 475, 394, 395, 0, 405,
	396, 397, 398, 373, 399, 403, 404, 400, 401, 402,
	476, 0, 407, 408, 406, 0, 409, 410, 411, 412,
	413, 261, 414, 262, 415, 0, 532, 478, 479, 416,
	0, 0, 417, 418, 480, 419, 481, 0, 420, 421,
	422, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	430, 0, 431, 0, 429, 432, 433, 434, 482, 483,
	0, 436, 435, 484, 1751, 0, 204, 0, 437, 438,
	485, 439, 440, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 209, 210, 211, 0, 212, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 213, 214,
	215, 443, 444, 216, 445, 217, 218, 446, 0, 219,
	220, 221, 222, 223, 224, 0, 0, 225, 447, 448,
	449, 0, 226, 450, 0, 0, 0, 227, 228, 229,
	230, 231, 0, 233, 234, 235, 232, 0, 236, 0,
	237, 238, 239, 0, 0, 240, 241, 0, 0, 0,
	0, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	451, 452, 0, 248, 0, 249, 0, 250, 0, 0,
	251, 252, 253, 0, 254, 0, 255, 256, 0, 453,
	257, 258, 260, 263, 259, 264, 265, 266, 454, 455,
	0, 0, 0, 0, 0, 0, 0, 267, 268, 269,
	456, 270, 271, 0, 272, 0, 273, 0, 0, 0,
	274, 275, 0, 276, 457, 0, 458, 277, 0, 278,
	279, 280, 281, 282, 283, 1750, 460, 461, 0, 0,
	465, 285, 0, 0, 0, 0, 284, 286, 293, 0,
	0, 287, 462, 289, 288, 290, 291, 292, 463, 0,
	464, 0, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 300, 301, 302, 303, 0, 305, 304,
	0, 306, 466, 0, 307, 308, 0, 0, 309, 310,
	0, 0, 311, 0, 312, 313, 0, 0, 314, 315,
	317, 318, 316, 0, 319, 320, 322, 321, 0, 0,
	0, 0, 467, 468, 323, 324, 0, 325, 326, 0,
	0, 328, 329, 0, 0, 330, 469, 0, 331, 0,
	470, 332, 327, 333, 334, 335, 336, 337, 338, 0,
	339, 471, 340, 472, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 473, 349, 350, 0, 351, 352,
	353, 354, 355, 0, 357, 358, 359, 356, 360, 361,
	362, 363, 0, 364, 0, 365, 366, 367, 368, 474,
	369, 0, 370, 374, 375, 376, 377, 378, 379, 380,
	0, 387, 388, 381, 383, 384, 385, 382, 386, 389,
	390, 0, 391, 371, 372, 392, 0, 393, 475, 394,
	395, 0, 405, 396, 397, 398, 373, 399, 403, 404,
	400, 401, 402, 476, 0, 407, 408, 406, 0, 409,
	410, 411, 412, 413, 261, 414, 262, 415, 0, 477,
	478, 479, 416, 0, 0, 417, 418, 480, 419, 481,
	0, 420, 421, 422, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 430, 0, 431, 0, 429, 432, 433,
	434, 482, 483, 204, 436, 435, 484, 0, 0, 0,
	0, 437, 438, 485, 439, 440, 441, 0, 0, 207,
	208, 209, 210, 211, 0, 212, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 213, 214, 215, 443, 444,
	216, 445, 217, 218, 446, 0, 219, 220, 221, 222,
	223, 224, 0, 0, 225, 447, 448, 449, 0, 226,
	450, 0, 0, 0, 227, 228, 229, 230, 231, 0,
	233, 234, 235, 232, 0, 236, 0, 237, 238, 239,
	0, 0, 240, 241, 0, 0, 0, 0, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 451, 452, 0,
	248, 0, 249, 0, 250, 0, 0, 251, 252, 253,
	0, 254, 0, 255, 256, 0, 453, 257, 258, 260,
	263, 259, 264, 265, 266, 454, 455, 0, 0, 0,
	0, 0, 0, 0, 267, 268, 269, 456, 270, 271,
	0, 272, 0, 273, 0, 0, 0, 274, 275, 0,
	276, 457, 0, 458, 277, 0, 278, 279, 280, 281,
	282, 283, 459, 460, 461, 0, 0, 465, 285, 0,
	0, 0, 0, 284, 286, 293, 0, 0, 287, 462,
	289, 288, 290, 291, 292, 463, 0, 464, 0, 294,
	0, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	300, 301, 302, 303, 0, 305, 304, 0, 306, 466,
	0, 307, 308, 0, 0, 309, 310, 0, 0, 311,
	0, 312, 313, 0, 0, 314, 315, 317, 318, 316,
	0, 319, 320, 322, 321, 0, 0, 0, 0, 467,
	468, 323, 324, 0, 325, 326, 0, 0, 328, 329,
	0, 0, 330, 469, 0, 331, 0, 470, 332, 327,
	333, 334, 335, 336, 337, 338, 0, 339, 471, 340,
	472, 341, 0, 342, 0, 343, 344, 345, 346, 347,
	348, 473, 349, 350, 0, 351, 352, 353, 354, 355,
	0, 357, 358, 359, 356, 360, 361, 362, 363, 0,
	364, 0, 365, 366, 367, 368, 474, 369, 0, 370,
	374, 375, 376, 377, 378, 379, 380, 0, 387, 388,
	381, 383, 384, 385, 382, 386, 389, 390, 0, 391,
	371, 372, 392, 0, 393, 475, 394, 395, 0, 405,
	396, 397, 398, 373, 399, 403, 404, 400, 401, 402,
	476, 0, 407, 408, 406, 1739, 409, 410, 411, 412,
	413, 261, 414, 262, 415, 0, 477, 478, 479, 416,
	0, 0, 417, 418, 480, 419, 481, 0, 420, 421,
	422, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	430, 0, 431, 0, 429, 432, 433, 434, 482, 483,
	0, 436, 435, 484, 1733, 0, 204, 0, 437, 438,
	485, 439, 440, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 209, 210, 211, 0, 212, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 213, 214,
	215, 443, 444, 216, 445, 217, 218, 446, 0, 219,
	220, 221, 222, 223, 224, 0, 0, 225, 447, 448,
	449, 0, 226, 450, 0, 0, 0, 227, 228, 229,
	230, 231, 0, 233, 234, 235, 232, 0, 236, 0,
	237, 238, 239, 0, 0, 240, 241, 0, 0, 0,
	0, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	451, 452, 0, 248, 0, 249, 0, 250, 0, 0,
	251, 252, 253, 0, 254, 0, 255, 256, 0, 453,
	257, 258, 260, 263, 259, 264, 265, 266, 454, 455,
	0, 0, 0, 0, 0, 0, 0, 267, 268, 269,
	456, 270, 271, 0, 272, 0, 273, 0, 0, 0,
	274, 275, 0, 276, 457, 0, 458, 277, 0, 278,
	279, 280, 281, 282, 283, 1732, 460, 461, 0, 0,
	465, 285, 0, 0, 0, 0, 284, 286, 293, 0,
	0, 287, 462, 289, 288, 290, 291, 292, 463, 0,
	464, 0, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 300, 301, 302, 303, 0, 305, 304,
	0, 306, 466, 0, 307, 308, 0, 0, 309, 310,
	0, 0, 311, 0, 312, 313, 0, 0, 314, 315,
	317, 318, 316, 0, 319, 320, 322, 321, 0, 0,
	0, 0, 467, 468, 323, 324, 0, 325, 326, 0,
	0, 328, 329, 0, 0, 330, 469, 0, 331, 0,
	470, 332, 327, 333, 334, 335, 336, 337, 338, 0,
	339, 471, 340, 472, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 473, 349, 350, 0, 351, 352,
	353, 354, 355, 0, 357, 358, 359, 356, 360, 361,
	362, 363, 0, 364, 0, 365, 366, 367, 368, 474,
	369, 0, 370, 374, 375, 376, 377, 378, 379, 380,
	0, 387, 388, 381, 383, 384, 385, 382, 386, 389,
	390, 0, 391, 371, 372, 392, 0, 393, 475, 394,
	395, 0, 405, 396, 397, 398, 373, 399, 403, 404,
	400, 401, 402, 476, 0, 407, 408, 406, 0, 409,
	410, 411, 412, 413, 261, 414, 262, 415, 0, 477,
	478, 479, 416, 0, 0, 417, 418, 480, 419, 481,
	0, 420, 421, 422, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 430, 0, 431, 0, 429, 432, 433,
	434, 482, 483, 0, 436, 435, 484, 1728, 0, 204,
	0, 437, 438, 485, 439, 440, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 208, 209, 210, 211,
	0, 212, 0, 0, 0, 0, 442, 0, 0, 0,
	0, 213, 214, 215, 443, 444, 216, 445, 217, 218,
	446, 0, 219, 220, 221, 222, 223, 224, 0, 0,
	225, 447, 448, 449, 0, 226, 450, 0, 0, 0,
	227, 228, 229, 230, 231, 0, 233, 234, 235, 232,
	0, 236, 0, 237, 238, 239, 0, 0, 240, 241,
	0, 0, 0, 0, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 451, 452, 0, 248, 0, 249, 0,
	250, 0, 0, 251, 252, 253, 0, 254, 0, 255,
	256, 0, 453, 257, 258, 260, 263, 259, 264, 265,
	266, 454, 455, 0, 0, 0, 0, 0, 0, 0,
	267, 268, 269, 456, 270, 271, 0, 272, 0, 273,
	0, 0, 0, 274, 275, 0, 276, 457, 0, 458,
	277, 0, 278, 279, 280, 281, 282, 283, 1730, 460,
	461, 0, 0, 465, 285, 0, 0, 0, 0, 284,
	286, 293, 0, 0, 287, 462, 289, 288, 290, 291,
	292, 463, 0, 464, 0, 294, 0, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 300, 301, 302, 303,
	0, 305, 304, 0, 306, 466, 0, 307, 308, 0,
	0, 309, 310, 0, 0, 311, 0, 312, 313, 0,
	0, 314, 315, 317, 318, 316, 0, 319, 320, 322,
	321, 0, 0, 0, 0, 467, 468, 323, 324, 0,
	325, 326, 0, 0, 328, 329, 0, 0, 330, 469,
	0, 331, 0, 470, 332, 327, 333, 334, 335, 336,
	337, 338, 0, 339, 471, 340, 472, 341, 0, 342,
	0, 343, 344, 345, 346, 347, 348, 473, 349, 350,
	0, 351, 352, 353, 354, 355, 0, 357, 358, 359,
	356, 360, 361, 362, 363, 0, 364, 0, 365, 366,
	367, 368, 474, 369, 0, 370, 374, 375, 376, 377,
	378, 379, 380, 0, 387, 388, 381, 383, 384, 385,
	382, 386, 389, 390, 0, 391, 371, 372, 392, 0,
	393, 475, 394, 395, 0, 405, 396, 397, 398, 373,
	399, 403, 404, 400, 401, 402, 476, 0, 407, 408,
	406, 0, 409, 410, 411, 412, 413, 261, 414, 262,
	415, 0, 477, 478, 479, 416, 0, 0, 417, 418,
	480, 419, 481, 0, 420, 421, 422, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 430, 0, 431, 0,
	429, 432, 433, 434, 482, 483, 0, 436, 435, 484,
	536, 0, 204, 0, 437, 438, 485, 439, 440, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	209, 210, 211, 0, 212, 0, 0, 0, 0, 442,
	0, 0, 0, 0, 213, 214, 215, 443, 444, 216,
	445, 217, 218, 446, 0, 219, 220, 221, 222, 223,
	224, 0, 0, 225, 447, 448, 449, 0, 526, 450,
	0, 0, 0, 227, 228, 229, 230, 231, 0, 233,
	234, 235, 232, 0, 236, 0, 237, 238, 239, 0,
	0, 240, 241, 0, 0, 0, 0, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 451, 452, 0, 248,
	0, 249, 0, 250, 0, 0, 251, 252, 253, 0,
	254, 0, 255, 256, 0, 453, 257, 258, 260, 263,
	259, 264, 265, 266, 454, 455, 0, 0, 0, 0,
	0, 0, 0, 267, 268, 269, 456, 270, 271, 0,
	272, 0, 273, 0, 0, 0, 274, 275, 0, 276,
	457, 0, 458, 277, 0, 278, 279, 280, 281, 282,
	283, 459, 460, 461, 0, 0, 465, 285, 0, 0,
	0, 0, 284, 286, 293, 0, 0, 287, 462, 289,
	288, 290, 291, 292, 463, 0, 464, 0, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 300,
	301, 302, 303, 0, 305, 304, 0, 306, 466, 0,
	307, 308, 0, 0, 309, 310, 0, 0, 311, 0,
	312, 313, 0, 0, 314, 315, 317, 318, 537, 0,
	319, 320, 322, 321, 0, 0, 0, 0, 467, 468,
	323, 324, 0, 325, 326, 0, 0, 328, 329, 0,
	0, 330, 469, 0, 331, 0, 470, 332, 327, 333,
	334, 335, 336, 337, 338, 0, 339, 471, 340, 472,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	473, 349, 350, 0, 351, 352, 353, 354, 355, 0,
	357, 358, 359, 356, 360, 361, 362, 363, 0, 364,
	0, 365, 366, 367, 368, 474, 369, 0, 370, 374,
	375, 533, 377, 378, 379, 380, 0, 387, 388, 381,
	383, 384, 385, 382, 386, 1271, 390, 0, 391, 371,
	372, 392, 0, 393, 475, 394, 395, 0, 405, 396,
	397, 398, 373, 399, 403, 404, 400, 401, 402, 476,
	0, 407, 408, 406, 0, 409, 410, 411, 412, 413,
	261, 414, 262, 415, 0, 532, 478, 479, 416, 0,
	0, 417, 418, 480, 419, 481, 0, 420, 421, 422,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 430,
	0, 431, 0, 429, 432, 433, 434, 482, 483, 0,
	436, 435, 484, 1256, 0, 204, 0, 437, 438, 485,
	439, 440, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 208, 209, 210, 211, 0, 212, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 213, 214, 215,
	443, 444, 216, 445, 217, 218, 446, 0, 219, 220,
	221, 222, 223, 224, 0, 0, 225, 447, 448, 449,
	0, 226, 450, 0, 0, 0, 227, 228, 229, 230,
	231, 0, 233, 234, 235, 232, 0, 236, 0, 237,
	238, 239, 0, 0, 240, 241, 0, 0, 0, 0,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 451,
	452, 0, 248, 0, 249, 0, 250, 0, 0, 251,
	252, 253, 0, 254, 0, 255, 256, 0, 453, 257,
	258, 260, 263, 259, 264, 265, 266, 454, 455, 0,
	0, 0, 0, 0, 0, 0, 267, 268, 269, 456,
	270, 271, 0, 272, 0, 273, 0, 0, 0, 274,
	275, 0, 276, 457, 0, 458, 277, 0, 278, 279,
	280, 281, 282, 283, 1255, 460, 461, 0, 0, 465,
	285, 0, 0, 0, 0, 284, 286, 293, 0, 0,
	287, 462, 289, 288, 290, 291, 292, 463, 0, 464,
	0, 294, 0, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 300, 301, 302, 303, 0, 305, 304, 0,
	306, 466, 0, 307, 308, 0, 0, 309, 310, 0,
	0, 311, 0, 312, 313, 0, 0, 314, 315, 317,
	318, 316, 0, 319, 320, 322, 321, 0, 0, 0,
	0, 467, 468, 323, 324, 0, 325, 326, 0, 0,
	328, 329, 0, 0, 330, 469, 0, 331, 0, 470,
	332, 327, 333, 334, 335, 336, 337, 338, 0, 339,
	471, 340, 472, 341, 0, 342, 0, 343, 344, 345,
	346, 347, 348, 473, 349, 350, 0, 351, 352, 353,
	354, 355, 0, 357, 358, 359, 356, 360, 361, 362,
	363, 0, 364, 0, 365, 366, 367, 368, 474, 369,
	0, 370, 374, 375, 376, 377, 378, 379, 380, 0,
	387, 388, 381, 383, 384, 385, 382, 386, 389, 390,
	0, 391, 371, 372, 392, 0, 393, 475, 394, 395,
	0, 405, 396, 397, 398, 373, 399, 403, 404, 400,
	401, 402, 476, 0, 407, 408, 406, 0, 409, 410,
	411, 412, 413, 261, 414, 262, 415, 0, 477, 478,
	479, 416, 0, 0, 417, 418, 480, 419, 481, 0,
	420, 421, 422, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 430, 0, 431, 0, 429, 432, 433, 434,
	482, 483, 0, 436, 435, 484, 1252, 0, 204, 0,
	437, 438, 485, 439, 440, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 209, 210, 211, 0,
	212, 0, 0, 0, 0, 442, 0, 0, 0, 0,
	213, 214, 215, 443, 444, 216, 445, 217, 218, 446,
	0, 219, 220, 221, 222, 223, 224, 0, 0, 225,
	447, 448, 449, 0, 226, 450, 0, 0, 0, 227,
	228, 229, 230, 231, 0, 233, 234, 235, 232, 0,
	236, 0, 237, 238, 239, 0, 0, 240, 241, 0,
	0, 0, 0, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 451, 452, 0, 248, 0, 249, 0, 250,
	0, 0, 251, 252, 253, 0, 254, 0, 255, 256,
	0, 453, 257, 258, 260, 263, 259, 264, 265, 266,
	454, 455, 0, 0, 0, 0, 0, 0, 0, 267,
	268, 269, 456, 270, 271, 0, 272, 0, 273, 0,
	0, 0, 274, 275, 0, 276, 457, 0, 458, 277,
	0, 278, 279, 280, 281, 282, 283, 1251, 460, 461,
	0, 0, 465, 285, 0, 0, 0, 0, 284, 286,
	293, 0, 0, 287, 462, 289, 288, 290, 291, 292,
	463, 0, 464, 0, 294, 0, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 300, 301, 302, 303, 0,
	305, 304, 0, 306, 466, 0, 307, 308, 0, 0,
	309, 310, 0, 0, 311, 0, 312, 313, 0, 0,
	314, 315, 317, 318, 316, 0, 319, 320, 322, 321,
	0, 0, 0, 0, 467, 468, 323, 324, 0, 325,
	326, 0, 0, 328, 329, 0, 0, 330, 469, 0,
	331, 0, 470, 332, 327, 333, 334, 335, 336, 337,
	338, 0, 339, 471, 340, 472, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 473, 349, 350, 0,
	351, 352, 353, 354, 355, 0, 357, 358, 359, 356,
	360, 361, 362, 363, 0, 364, 0, 365, 366, 367,
	368, 474, 369, 0, 370, 374, 375, 376, 377, 378,
	379, 380, 0, 387, 388, 381, 383, 384, 385, 382,
	386, 389, 390, 0, 391, 371, 372, 392, 0, 393,
	475, 394, 395, 0, 405, 396, 397, 398, 373, 399,
	403, 404, 400, 401, 402, 476, 0, 407, 408, 406,
	0, 409, 410, 411, 412, 413, 261, 414, 262, 415,
	0, 477, 478, 479, 416, 0, 0, 417, 418, 480,
	419, 481, 0, 420, 421, 422, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 430, 0, 431, 0, 429,
	432, 433, 434, 482, 483, 0, 436, 435, 484, 1249,
	0, 204, 0, 437, 438, 485, 439, 440, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 208, 209,
	210, 211, 0, 212, 0, 0, 0, 0, 442, 0,
	0, 0, 0, 213, 214, 215, 443, 444, 216, 445,
	217, 218, 446, 0, 219, 220, 221, 222, 223, 224,
	0, 0, 225, 447, 448, 449, 0, 226, 450, 0,
	0, 0, 227, 228, 229, 230, 231, 0, 233, 234,
	235, 232, 0, 236, 0, 237, 238, 239, 0, 0,
	240, 241, 0, 0, 0, 0, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 451, 452, 0, 248, 0,
	249, 0, 250, 0, 0, 251, 252, 253, 0, 254,
	0, 255, 256, 0, 453, 257, 258, 260, 263, 259,
	264, 265, 266, 454, 455, 0, 0, 0, 0, 0,
	0, 0, 267, 268, 269, 456, 270, 271, 0, 272,
	0, 273, 0, 0, 0, 274, 275, 0, 276, 457,
	0, 458, 277, 0, 278, 279, 280, 281, 282, 283,
	1248, 460, 461, 0, 0, 465, 285, 0, 0, 0,
	0, 284, 286, 293, 0, 0, 287, 462, 289, 288,
	290, 291, 292, 463, 0, 464, 0, 294, 0, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 300, 301,
	302, 303, 0, 305, 304, 0, 306, 466, 0, 307,
	308, 0, 0, 309, 310, 0, 0, 311, 0, 312,
	313, 0, 0, 314, 315, 317, 318, 316, 0, 319,
	320, 322, 321, 0, 0, 0, 0, 467, 468, 323,
	324, 0, 325, 326, 0, 0, 328, 329, 0, 0,
	330, 469, 0, 331, 0, 470, 332, 327, 333, 334,
	335, 336, 337, 338, 0, 339, 471, 340, 472, 341,
	0, 342, 0, 343, 344, 345, 346, 347, 348, 473,
	349, 350, 0, 351, 352, 353, 354, 355, 0, 357,
	358, 359, 356, 360, 361, 362, 363, 0, 364, 0,
	365, 366, 367, 368, 474, 369, 0, 370, 374, 375,
	376, 377, 378, 379, 380, 0, 387, 388, 381, 383,
	384, 385, 382, 386, 389, 390, 0, 391, 371, 372,
	392, 0, 393, 475, 394, 395, 0, 405, 396, 397,
	398, 373, 399, 403, 404, 400, 401, 402, 476, 0,
	407, 408, 406, 0, 409, 410, 411, 412, 413, 261,
	414, 262, 415, 0, 477, 478, 479, 416, 0, 0,
	417, 418, 480, 419, 481, 0, 420, 421, 422, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 430, 0,
	431, 0, 429, 432, 433, 434, 482, 483, 0, 436,
	435, 484, 1246, 0, 204, 0, 437, 438, 485, 439,
	440, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 208, 209, 210, 211, 0, 212, 0, 0, 0,
	0, 442, 0, 0, 0, 0, 213, 214, 215, 443,
	444, 216, 445, 217, 218, 446, 0, 219, 220, 221,
	222, 223, 224, 0, 0, 225, 447, 448, 449, 0,
	226, 450, 0, 0, 0, 227, 228, 229, 230, 231,
	0, 233, 234, 235, 232, 0, 236, 0, 237, 238,
	239, 0, 0, 240, 241, 0, 0, 0, 0, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 451, 452,
	0, 248, 0, 249, 0, 250, 0, 0, 251, 252,
	253, 0, 254, 0, 255, 256, 0, 453, 257, 258,
	260, 263, 259, 264, 265, 266, 454, 455, 0, 0,
	0, 0, 0, 0, 0, 267, 268, 269, 456, 270,
	271, 0, 272, 0, 273, 0, 0, 0, 274, 275,
	0, 276, 457, 0, 458, 277, 0, 278, 279, 280,
	281, 282, 283, 1245, 460, 461, 0, 0, 465, 285,
	0, 0, 0, 0, 284, 286, 293, 0, 0, 287,
	462, 289, 288, 290, 291, 292, 463, 0, 464, 0,
	294, 0, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 300, 301, 302, 303, 0, 305, 304, 0, 306,
	466, 0, 307, 308, 0, 0, 309, 310, 0, 0,
	311, 0, 312, 313, 0, 0, 314, 315, 317, 318,
	316, 0, 319, 320, 322, 321, 0, 0, 0, 0,
	467, 468, 323, 324, 0, 325, 326, 0, 0, 328,
	329, 0, 0, 330, 469, 0, 331, 0, 470, 332,
	327, 333, 334, 335, 336, 337, 338, 0, 339, 471,
	340, 472, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 473, 349, 350, 0, 351, 352, 353, 354,
	355, 0, 357, 358, 359, 356, 360, 361, 362, 363,
	0, 364, 0, 365, 366, 367, 368, 474, 369, 0,
	370, 374, 375, 376, 377, 378, 379, 380, 0, 387,
	388, 381, 383, 384, 385, 382, 386, 389, 390, 0,
	391, 371, 372, 392, 0, 393, 475, 394, 395, 0,
	405, 396, 397, 398, 373, 399, 403, 404, 400, 401,
	402, 476, 0, 407, 408, 406, 0, 409, 410, 411,
	412, 413, 261, 414, 262, 415, 0, 477, 478, 479,
	416, 0, 0, 417, 418, 480, 419, 481, 0, 420,
	421, 422, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 430, 0, 431, 0, 429, 432, 433, 434, 482,
	483, 0, 436, 435, 484, 1242, 0, 204, 0, 437,
	438, 485, 439, 440, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 208, 209, 210, 211, 0, 212,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 213,
	214, 215, 443, 444, 216, 445, 217, 218, 446, 0,
	219, 220, 221, 222, 223, 224, 0, 0, 225, 447,
	448, 449, 0, 226, 450, 0, 0, 0, 227, 228,
	229, 230, 231, 0, 233, 234, 235, 232, 0, 236,
	0, 237, 238, 239, 0, 0, 240, 241, 0, 0,
	0, 0, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 451, 452, 0, 248, 0, 249, 0, 250, 0,
	0, 251, 252, 253, 0, 254, 0, 255, 256, 0,
	453, 257, 258, 260, 263, 259, 264, 265, 266, 454,
	455, 0, 0, 0, 0, 0, 0, 0, 267, 268,
	269, 456, 270, 271, 0, 272, 0, 273, 0, 0,
	0, 274, 275, 0, 276, 457, 0, 458, 277, 0,
	278, 279, 280, 281, 282, 283, 1241, 460, 461, 0,
	0, 465, 285, 0, 0, 0, 0, 284, 286, 293,
	0, 0, 287, 462, 289, 288, 290, 291, 292, 463,
	0, 464, 0, 294, 0, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 300, 301, 302, 303, 0, 305,
	304, 0, 306, 466, 0, 307, 308, 0, 0, 309,
	310, 0, 0, 311, 0, 312, 313, 0, 0, 314,
	315, 317, 318, 316, 0, 319, 320, 322, 321, 0,
	0, 0, 0, 467, 468, 323, 324, 0, 325, 326,
	0, 0, 328, 329, 0, 0, 330, 469, 0, 331,
	0, 470, 332, 327, 333, 334, 335, 336, 337, 338,
	0, 339, 471, 340, 472, 341, 0, 342, 0, 343,
	344, 345, 346, 347, 348, 473, 349, 350, 0, 351,
	352, 353, 354, 355, 0, 357, 358, 359, 356, 360,
	361, 362, 363, 0, 364, 0, 365, 366, 367, 368,
	474, 369, 0, 370, 374, 375, 376, 377, 378, 379,
	380, 0, 387, 388, 381, 383, 384, 385, 382, 386,
	389, 390, 0, 391, 371, 372, 392, 0, 393, 475,
	394, 395, 0, 405, 396, 397, 398, 373, 399, 403,
	404, 400, 401, 402, 476, 0, 407, 408, 406, 0,
	409, 410, 411, 412, 413, 261, 414, 262, 415, 0,
	477, 478, 479, 416, 0, 0, 417, 418, 480, 419,
	481, 0, 420, 421, 422, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 430, 0, 431, 0, 429, 432,
	433, 434, 482, 483, 0, 436, 435, 484, 1218, 0,
	204, 0, 437, 438, 485, 439, 440, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 208, 209, 210,
	211, 0, 212, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 213, 214, 215, 443, 444, 216, 445, 217,
	218, 446, 0, 219, 220, 221, 222, 223, 224, 0,
	0, 225, 447, 448, 449, 0, 226, 450, 0, 0,
	0, 227, 228, 229, 230, 231, 0, 233, 234, 235,
	232, 0, 236, 0, 237, 238, 239, 0, 0, 240,
	241, 0, 0, 0, 0, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 451, 452, 0, 248, 0, 249,
	0, 250, 0, 0, 251, 252, 253, 0, 254, 0,
	255, 256, 0, 453, 257, 258, 260, 263, 259, 264,
	265, 266, 454, 455, 0, 0, 0, 0, 0, 0,
	0, 267, 268, 269, 456, 270, 271, 0, 272, 0,
	273, 0, 0, 0, 274, 275, 0, 276, 457, 0,
	458, 277, 0, 278, 279, 280, 281, 282, 283, 459,
	460, 461, 0, 0, 465, 285, 0, 0, 0, 0,
	284, 286, 293, 0, 0, 287, 462, 289, 288, 290,
	291, 292, 463, 0, 464, 0, 294, 0, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 300, 301, 302,
	303, 0, 305, 304, 0, 306, 466, 0, 307, 308,
	0, 0, 309, 310, 0, 0, 311, 0, 312, 313,
	0, 0, 314, 315, 317, 318, 316, 0, 319, 320,
	322, 321, 0, 0, 0, 0, 467, 468, 323, 324,
	0, 325, 326, 0, 0, 328, 329, 0, 0, 330,
	469, 0, 331, 0, 470, 332, 327, 333, 334, 335,
	336, 337, 338, 0, 339, 471, 340, 472, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 473, 349,
	350, 0, 351, 352, 353, 354, 355, 0, 357, 358,
	359, 356, 360, 361, 362, 363, 0, 364, 0, 365,
	366, 367, 368, 474, 369, 0, 370, 374, 375, 376,
	377, 378, 379, 380, 0, 387, 388, 381, 383, 384,
	385, 382, 386, 389, 390, 0, 391, 371, 372, 392,
	0, 393, 475, 394, 395, 0, 405, 396, 397, 398,
	373, 399, 403, 404, 400, 401, 402, 476, 0, 407,
	408, 406, 0, 409, 410, 411, 412, 413, 261, 414,
	262, 415, 0, 477, 478, 479, 416, 0, 0, 417,
	418, 480, 419, 481, 0, 420, 421, 422, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 430, 0, 431,
	0, 429, 432, 433, 434, 482, 483, 0, 436, 435,
	484, 1206, 0, 204, 0, 437, 438, 485, 439, 440,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	208, 209, 210, 211, 0, 212, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 213, 214, 215, 443, 444,
	216, 445, 217, 218, 446, 0, 219, 220, 221, 222,
	223, 224, 0, 0, 225, 447, 448, 449, 0, 226,
	450, 0, 0, 0, 227, 228, 229, 230, 231, 0,
	233, 234, 235, 232, 0, 236, 0, 237, 238, 239,
	0, 0, 240, 241, 0, 0, 0, 0, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 451, 452, 0,
	248, 0, 249, 0, 250, 0, 0, 251, 252, 253,
	0, 254, 0, 255, 256, 0, 453, 257, 258, 260,
	263, 259, 264, 265, 266, 454, 455, 0, 0, 0,
	0, 0, 0, 0, 267, 268, 269, 456, 270, 271,
	0, 272, 0, 273, 0, 0, 0, 274, 275, 0,
	276, 457, 0, 458, 277, 0, 278, 279, 280, 281,
	282, 283, 1205, 460, 461, 0, 0, 465, 285, 0,
	0, 0, 0, 284, 286, 293, 0, 0, 287, 462,
	289, 288, 290, 291, 292, 463, 0, 464, 0, 294,
	0, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	300, 301, 302, 303, 0, 305, 304, 0, 306, 466,
	0, 307, 308, 0, 0, 309, 310, 0, 0, 311,
	0, 312, 313, 0, 0, 314, 315, 317, 318, 316,
	0, 319, 320, 322, 321, 0, 0, 0, 0, 467,
	468, 323, 324, 0, 325, 326, 0, 0, 328, 329,
	0, 0, 330, 469, 0, 331, 0, 470, 332, 327,
	333, 334, 335, 336, 337, 338, 0, 339, 471, 340,
	472, 341, 0, 342, 0, 343, 344, 345, 346, 347,
	348, 473, 349, 350, 0, 351, 352, 353, 354, 355,
	0, 357, 358, 359, 356, 360, 361, 362, 363, 0,
	364, 0, 365, 366, 367, 368, 474, 369, 0, 370,
	374, 375, 376, 377, 378, 379, 380, 0, 387, 388,
	381, 383, 384, 385, 382, 386, 389, 390, 0, 391,
	371, 372, 392, 0, 393, 475, 394, 395, 0, 405,
	396, 397, 398, 373, 399, 403, 404, 400, 401, 402,
	476, 0, 407, 408, 406, 0, 409, 410, 411, 412,
	413, 261, 414, 262, 415, 0, 477, 478, 479, 416,
	0, 0, 417, 418, 480, 419, 481, 0, 420, 421,
	422, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	430, 0, 431, 0, 429, 432, 433, 434, 482, 483,
	0, 436, 435, 484, 1190, 0, 204, 0, 437, 438,
	485, 439, 440, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 208, 209, 210, 211, 0, 212, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 213, 214,
	215, 443, 444, 216, 445, 217, 218, 446, 0, 219,
	220, 221, 222, 223, 224, 0, 0, 225, 447, 448,
	449, 0, 226, 450, 0, 0, 0, 227, 228, 229,
	230, 231, 0, 233, 234, 235, 232, 0, 236, 0,
	237, 238, 239, 0, 0, 240, 241, 0, 0, 0,
	0, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	451, 452, 0, 248, 0, 249, 0, 250, 0, 0,
	251, 252, 253, 0, 254, 0, 255, 256, 0, 453,
	257, 258, 260, 263, 259, 264, 265, 266, 454, 455,
	0, 0, 0, 0, 0, 0, 0, 267, 268, 269,
	456, 270, 271, 0, 272, 0, 273, 0, 0, 0,
	274, 275, 0, 276, 457, 0, 458, 277, 0, 278,
	279, 280, 281, 282, 283, 459, 460, 461, 0, 0,
	465, 285, 0, 0, 0, 0, 284, 286, 293, 0,
	0, 287, 462, 289, 288, 290, 291, 292, 463, 0,
	464, 0, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 300, 301, 302, 303, 0, 305, 304,
	0, 306, 466, 0, 307, 308, 0, 0, 309, 310,
	0, 0, 311, 0, 312, 313, 0, 0, 314, 315,
	317, 318, 316, 0, 319, 320, 322, 321, 0, 0,
	0, 0, 467, 468, 323, 324, 0, 325, 326, 0,
	0, 328, 329, 0, 0, 330, 469, 0, 331, 0,
	470, 332, 327, 333, 334, 335, 336, 337, 338, 0,
	339, 471, 340, 472, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 473, 349, 350, 0, 351, 352,
	353, 354, 355, 0, 357, 358, 359, 356, 360, 361,
	362, 363, 0, 364, 0, 365, 366, 367, 368, 474,
	369, 0, 370, 374, 375, 376, 377, 378, 379, 380,
	0, 387, 388, 381, 383, 384, 385, 382, 386, 389,
	390, 0, 391, 371, 372, 392, 0, 393, 475, 394,
	395, 0, 405, 396, 397, 398, 373, 399, 403, 404,
	400, 401, 402, 476, 0, 407, 408, 406, 0, 409,
	410, 411, 412, 413, 261, 414, 262, 415, 0, 477,
	478, 479, 416, 0, 0, 417, 418, 480, 419, 481,
	0, 420, 421, 422, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 430, 0, 431, 0, 429, 432, 433,
	434, 482, 483, 0, 436, 435, 484, 1136, 0, 204,
	0, 437, 438, 485, 439, 440, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 208, 209, 210, 211,
	0, 212, 0, 0, 0, 0, 442, 0, 0, 0,
	0, 213, 214, 215, 443, 444, 216, 445, 217, 218,
	446, 0, 219, 220, 221, 222, 223, 224, 0, 0,
	225, 447, 448, 449, 0, 226, 450, 0, 0, 0,
	227, 228, 229, 230, 231, 0, 233, 234, 235, 232,
	0, 236, 0, 237, 238, 239, 0, 0, 240, 241,
	0, 0, 0, 0, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 451, 452, 0, 248, 0, 249, 0,
	250, 0, 0, 251, 252, 253, 0, 254, 0, 255,
	256, 0, 453, 257, 258, 260, 263, 259, 264, 265,
	266, 454, 455, 0, 0, 0, 0, 0, 0, 0,
	267, 268, 269, 456, 270, 271, 0, 272, 0, 273,
	0, 0, 0, 274, 275, 0, 276, 457, 0, 458,
	277, 0, 278, 279, 280, 281, 282, 283, 1138, 460,
	461, 0, 0, 465, 285, 0, 0, 0, 0, 284,
	286, 293, 0, 0, 287, 462, 289, 288, 290, 291,
	292, 463, 0, 464, 0, 294, 0, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 300, 301, 302, 303,
	0, 305, 304, 0, 306, 466, 0, 307, 308, 0,
	0, 309, 310, 0, 0, 311, 0, 312, 313, 0,
	0, 314, 315, 317, 318, 316, 0, 319, 320, 322,
	321, 0, 0, 0, 0, 467, 468, 323, 324, 0,
	325, 326, 0, 0, 328, 329, 0, 0, 330, 469,
	0, 331, 0, 470, 332, 327, 333, 334, 335, 336,
	337, 338, 0, 339, 471, 340, 472, 341, 0, 342,
	0, 343, 344, 345, 346, 347, 348, 473, 349, 350,
	0, 351, 352, 353, 354, 355, 0, 357, 358, 359,
	356, 360, 361, 362, 363, 0, 364, 0, 365, 366,
	367, 368, 474, 369, 0, 370, 374, 375, 376, 377,
	378, 379, 380, 0, 387, 388, 381, 383, 384, 385,
	382, 386, 389, 390, 0, 391, 371, 372, 392, 0,
	393, 475, 394, 395, 0, 405, 396, 397, 398, 373,
	399, 403, 404, 400, 401, 402, 476, 0, 407, 408,
	406, 0, 409, 410, 411, 412, 413, 261, 414, 262,
	415, 0, 477, 478, 479, 416, 0, 0, 417, 418,
	480, 419, 481, 0, 420, 421, 422, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 430, 0, 431, 0,
	429, 432, 433, 434, 482, 483, 0, 436, 435, 484,
	1130, 0, 204, 0, 437, 438, 485, 439, 440, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 208,
	209, 210, 211, 0, 212, 0, 0, 0, 0, 442,
	0, 0, 0, 0, 213, 214, 215, 443, 444, 216,
	445, 217, 218, 446, 0, 219, 220, 221, 222, 223,
	224, 0, 0, 225, 447, 448, 449, 0, 226, 450,
	0, 0, 0, 227, 228, 229, 230, 231, 0, 233,
	234, 235, 232, 0, 236, 0, 237, 238, 239, 0,
	0, 240, 241, 0, 0, 0, 0, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 451, 452, 0, 248,
	0, 249, 0, 250, 0, 0, 251, 252, 253, 0,
	254, 0, 255, 256, 0, 453, 257, 258, 260, 263,
	259, 264, 265, 266, 454, 455, 0, 0, 0, 0,
	0, 0, 0, 267, 268, 269, 456, 270, 271, 0,
	272, 0, 273, 0, 0, 0, 274, 275, 0, 276,
	457, 0, 458, 277, 0, 278, 279, 280, 281, 282,
	283, 459, 460, 461, 0, 0, 465, 285, 0, 0,
	0, 0, 284, 286, 293, 0, 0, 287, 462, 289,
	288, 290, 291, 292, 463, 0, 464, 0, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 300,
	301, 302, 303, 0, 305, 304, 0, 306, 466, 0,
	307, 308, 0, 0, 309, 310, 0, 0, 311, 0,
	312, 313, 0, 0, 314, 315, 317, 318, 316, 0,
	319, 320, 322, 321, 0, 0, 0, 0, 467, 468,
	323, 324, 0, 325, 326, 0, 0, 328, 329, 0,
	0, 330, 469, 0, 331, 0, 470, 332, 327, 333,
	334, 335, 336, 337, 338, 0, 339, 471, 340, 472,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	473, 349, 350, 0, 351, 352, 353, 354, 355, 0,
	357, 358, 359, 356, 360, 361, 362, 363, 0, 364,
	0, 365, 366, 367, 368, 474, 369, 0, 370, 374,
	375, 376, 377, 378, 379, 380, 0, 387, 388, 381,
	383, 384, 385, 382, 386, 389, 390, 0, 391, 371,
	372, 392, 0, 393, 475, 394, 395, 0, 405, 396,
	397, 398, 373, 399, 403, 404, 400, 401, 402, 476,
	0, 407, 408, 406, 0, 409, 410, 411, 412, 413,
	261, 414, 262, 415, 0, 477, 478, 479, 416, 0,
	0, 417, 418, 480, 419, 481, 0, 420, 421, 422,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 430,
	0, 431, 0, 429, 432, 433, 434, 482, 483, 0,
	436, 435, 484, 536, 0, 204, 0, 437, 438, 485,
	439, 440, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 208, 209, 210, 211, 0, 212, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 213, 214, 215,
	443, 444, 216, 445, 217, 218, 446, 0, 219, 220,
	221, 222, 223, 224, 0, 0, 225, 447, 448, 998,
	0, 226, 450, 0, 0, 0, 227, 228, 229, 230,
	231, 0, 233, 234, 235, 232, 0, 236, 0, 237,
	238, 239, 0, 0, 240, 241, 0, 0, 0, 0,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 451,
	452, 0, 248, 0, 249, 0, 250, 0, 0, 251,
	252, 253, 0, 254, 0, 255, 256, 0, 453, 257,
	258, 260, 263, 259, 264, 265, 266, 454, 455, 0,
	0, 0, 0, 0, 0, 0, 267, 268, 269, 456,
	270, 271, 0, 272, 0, 273, 0, 0, 0, 274,
	275, 0, 276, 457, 0, 458, 277, 0, 278, 279,
	280, 281, 282, 283, 459, 460, 461, 0, 0, 465,
	285, 0, 0, 0, 0, 284, 286, 293, 0, 0,
	287, 462, 289, 288, 290, 291, 292, 463, 0, 464,
	0, 294, 0, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 300, 301, 302, 303, 0, 305, 304, 0,
	306, 466, 0, 307, 308, 0, 0, 309, 310, 0,
	0, 311, 0, 312, 313, 0, 0, 314, 315, 317,
	318, 537, 0, 319, 320, 322, 321, 0, 0, 0,
	0, 467, 468, 323, 324, 0, 325, 326, 0, 0,
	328, 329, 0, 0, 330, 469, 0, 331, 0, 470,
	332, 327, 333, 334, 335, 336, 337, 338, 0, 339,
	471, 340, 472, 341, 0, 342, 0, 343, 344, 345,
	346, 347, 348, 473, 349, 350, 0, 351, 352, 353,
	354, 355, 0, 357, 358, 359, 356, 360, 361, 362,
	363, 0, 364, 0, 365, 366, 367, 368, 474, 369,
	0, 370, 374, 375, 533, 377, 378, 379, 380, 0,
	387, 388, 381, 383, 384, 385, 382, 386, 389, 390,
	0, 391, 371, 372, 392, 0, 393, 475, 394, 395,
	0, 405, 396, 397, 398, 373, 399, 403, 404, 400,
	401, 402, 476, 0, 407, 408, 406, 0, 409, 410,
	411, 412, 413, 261, 414, 262, 415, 0, 532, 478,
	479, 416, 0, 0, 417, 999, 480, 419, 481, 0,
	420, 421, 422, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 430, 0, 431, 0, 429, 432, 433, 434,
	482, 483, 204, 436, 435, 484, 0, 0, 0, 0,
	437, 438, 485, 439, 440, 441, 0, 0, 207, 208,
	209, 210, 211, 981, 212, 0, 0, 0, 0, 442,
	0, 0, 0, 0, 213, 214, 215, 443, 444, 216,
	445, 217, 218, 446, 0, 219, 220, 221, 222, 223,
	224, 0, 0, 225, 447, 448, 449, 0, 226, 450,
	0, 0, 0, 227, 228, 229, 230, 231, 0, 233,
	234, 235, 232, 0, 236, 0, 237, 238, 239, 0,
	0, 240, 241, 0, 0, 0, 0, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 451, 452, 0, 248,
	0, 249, 0, 250, 0, 0, 251, 252, 253, 0,
	254, 0, 255, 256, 0, 453, 257, 258, 260, 263,
	259, 264, 265, 266, 454, 455, 0, 0, 0, 0,
	0, 0, 0, 267, 268, 269, 456, 270, 271, 0,
	272, 0, 273, 0, 0, 0, 274, 275, 0, 276,
	457, 0, 458, 277, 0, 278, 279, 280, 281, 282,
	283, 459, 460, 461, 0, 0, 465, 285, 0, 0,
	0, 0, 284, 286, 293, 0, 0, 287, 462, 289,
	288, 290, 291, 292, 463, 0, 464, 0, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 300,
	301, 302, 303, 0, 305, 304, 0, 306, 466, 0,
	307, 308, 0, 0, 309, 310, 0, 0, 311, 0,
	312, 313, 0, 0, 314, 315, 317, 318, 316, 0,
	319, 320, 322, 321, 0, 0, 0, 0, 467, 468,
	323, 324, 0, 325, 326, 0, 0, 328, 329, 0,
	0, 330, 469, 0, 331, 0, 470, 332, 327, 333,
	334, 335, 336, 337, 338, 0, 339, 471, 340, 472,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	473, 349, 350, 0, 351, 352, 353, 354, 355, 0,
	357, 358, 359, 356, 360, 361, 362, 363, 0, 364,
	0, 365, 366, 367, 368, 474, 369, 0, 370, 374,
	375, 376, 377, 378, 379, 380, 0, 387, 388, 381,
	383, 384, 385, 382, 386, 389, 390, 0, 391, 371,
	372, 392, 0, 393, 475, 394, 395, 0, 405, 396,
	397, 398, 373, 399, 403, 404, 400, 401, 402, 476,
	0, 407, 408, 406, 0, 409, 410, 411, 412, 413,
	261, 414, 262, 415, 0, 477, 478, 479, 416, 0,
	0, 417, 418, 480, 419, 481, 0, 420, 421, 422,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 430,
	0, 431, 0, 429, 432, 433, 434, 482, 483, 0,
	436, 435, 484, 536, 0, 204, 0, 437, 438, 485,
	439, 440, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 208, 209, 210, 211, 0, 212, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 213, 214, 215,
	443, 444, 216, 445, 217, 218, 446, 0, 219, 220,
	221, 222, 223, 224, 0, 0, 225, 447, 448, 449,
	0, 526, 450, 0, 0, 0, 227, 228, 229, 230,
	231, 0, 233, 234, 235, 232, 0, 524, 0, 237,
	238, 239, 0, 0, 240, 241, 0, 0, 0, 0,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 451,
	452, 0, 248, 0, 249, 0, 250, 0, 0, 251,
	252, 253, 0, 254, 0, 255, 256, 0, 453, 257,
	258, 260, 263, 259, 264, 265, 266, 454, 455, 0,
	0, 0, 0, 0, 0, 0, 267, 268, 269, 456,
	270, 271, 0, 272, 0, 273, 0, 0, 0, 274,
	275, 0, 276, 457, 0, 458, 277, 0, 278, 279,
	280, 281, 282, 283, 459, 460, 461, 0, 0, 465,
	285, 0, 0, 0, 0, 284, 286, 293, 0, 0,
	287, 462, 289, 288, 290, 291, 292, 463, 0, 464,
	0, 294, 0, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 300, 301, 302, 303, 0, 305, 304, 0,
	306, 466, 0, 307, 308, 0, 0, 309, 525, 0,
	0, 311, 0, 312, 313, 0, 0, 314, 315, 317,
	318, 537, 0, 319, 320, 322, 321, 0, 0, 0,
	0, 467, 468, 323, 324, 0, 325, 326, 0, 0,
	328, 329, 0, 0, 330, 469, 0, 331, 0, 470,
	332, 327, 333, 334, 335, 336, 337, 338, 0, 339,
	471, 340, 472, 341, 0, 342, 0, 343, 344, 345,
	346, 347, 348, 473, 349, 350, 0, 351, 352, 353,
	354, 355, 0, 357, 358, 359, 356, 360, 361, 362,
	363, 0, 364, 0, 365, 366, 367, 368, 527, 369,
	0, 370, 374, 375, 533, 377, 378, 379, 380, 0,
	387, 388, 381, 383, 384, 385, 382, 386, 528, 390,
	0, 391, 371, 372, 392, 0, 393, 475, 394, 395,
	0, 405, 396, 397, 398, 373, 399, 403, 404, 400,
	401, 402, 476, 0, 407, 408, 406, 0, 409, 410,
	411, 412, 413, 261, 414, 262, 415, 0, 532, 478,
	479, 416, 0, 0, 417, 530, 480, 419, 481, 0,
	420, 421, 422, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 430, 0, 431, 0, 429, 432, 433, 434,
	482, 483, 0, 436, 435, 484, 520, 0, 204, 0,
	437, 438, 485, 439, 440, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 208, 209, 210, 211, 0,
	212, 0, 0, 0, 0, 442, 0, 0, 0, 0,
	213, 214, 215, 443, 444, 216, 445, 217, 218, 446,
	0, 219, 220, 221, 222, 223, 224, 0, 0, 225,
	447, 448, 449, 0, 226, 450, 0, 0, 0, 227,
	228, 229, 230, 231, 0, 233, 234, 235, 232, 0,
	236, 0, 237, 238, 239, 0, 0, 240, 241, 0,
	0, 0, 0, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 451, 452, 0, 248, 0, 249, 0, 250,
	0, 0, 251, 252, 253, 0, 254, 0, 255, 256,
	0, 453, 257, 258, 260, 263, 259, 264, 265, 266,
	454, 455, 0, 0, 0, 0, 0, 0, 0, 267,
	268, 269, 456, 270, 271, 0, 272, 0, 273, 0,
	0, 0, 274, 275, 0, 276, 457, 0, 458, 277,
	0, 278, 279, 280, 281, 282, 283, 459, 460, 461,
	0, 0, 465, 285, 0, 0, 0, 0, 284, 286,
	293, 0, 0, 287, 462, 289, 288, 290, 291, 292,
	463, 0, 464, 0, 294, 0, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 300, 301, 302, 303, 0,
	305, 304, 0, 306, 466, 0, 307, 308, 0, 0,
	309, 310, 0, 0, 311, 0, 312, 313, 0, 0,
	314, 315, 317, 318, 316, 0, 319, 320, 322, 321,
	0, 0, 0, 0, 467, 468, 323, 324, 0, 325,
	326, 0, 0, 328, 329, 0, 0, 330, 469, 0,
	331, 0, 470, 332, 327, 333, 334, 335, 336, 337,
	338, 0, 339, 471, 340, 472, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 473, 349, 350, 0,
	351, 352, 353, 354, 355, 0, 357, 358, 359, 356,
	360, 361, 362, 363, 0, 364, 0, 365, 366, 367,
	368, 474, 369, 0, 370, 521, 375, 376, 377, 378,
	379, 380, 0, 387, 388, 381, 383, 384, 385, 382,
	386, 389, 390, 0, 391, 371, 372, 392, 0, 393,
	475, 394, 395, 0, 405, 396, 397, 398, 373, 399,
	403, 404, 400, 401, 402, 476, 0, 407, 408, 406,
	0, 409, 410, 411, 412, 413, 261, 414, 262, 415,
	0, 477, 478, 479, 416, 0, 0, 417, 418, 480,
	419, 481, 0, 420, 421, 422, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 430, 0, 431, 0, 429,
	432, 433, 434, 482, 483, 0, 436, 435, 484, 518,
	0, 204, 0, 437, 438, 485, 439, 440, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 208, 209,
	210, 211, 0, 212, 0, 0, 0, 0, 442, 0,
	0, 0, 0, 213, 214, 215, 443, 444, 216, 445,
	217, 218, 446, 0, 219, 220, 221, 222, 223, 224,
	0, 0, 225, 447, 448, 449, 0, 226, 450, 0,
	0, 0, 227, 228, 229, 230, 231, 0, 233, 234,
	235, 232, 0, 236, 0, 237, 238, 239, 0, 0,
	240, 241, 0, 0, 0, 0, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 451, 452, 0, 248, 0,
	249, 0, 250, 0, 0, 251, 252, 253, 0, 254,
	0, 255, 256, 0, 453, 257, 258, 260, 263, 259,
	264, 265, 266, 454, 455, 0, 0, 0, 0, 0,
	0, 0, 267, 268, 269, 456, 270, 271, 0, 272,
	0, 273, 0, 0, 0, 274, 275, 0, 276, 457,
	0, 458, 277, 0, 278, 279, 280, 281, 282, 283,
	459, 460, 461, 0, 0, 465, 285, 0, 0, 0,
	0, 284, 286, 293, 0, 0, 287, 462, 289, 288,
	290, 291, 292, 463, 0, 464, 0, 294, 0, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 300, 301,
	302, 303, 0, 305, 304, 0, 306, 466, 0, 307,
	308, 0, 0, 309, 310, 0, 0, 311, 0, 312,
	313, 0, 0, 314, 315, 317, 318, 316, 0, 319,
	320, 322, 321, 0, 0, 0, 0, 467, 468, 323,
	324, 0, 325, 326, 0, 0, 328, 329, 0, 0,
	330, 469, 0, 331, 0, 470, 332, 327, 333, 334,
	335, 336, 337, 338, 0, 339, 471, 340, 472, 341,
	0, 342, 0, 343, 344, 345, 346, 347, 348, 473,
	349, 350, 0, 351, 352, 353, 354, 355, 0, 357,
	358, 359, 356, 360, 361, 362, 363, 0, 364, 0,
	365, 366, 367, 368, 474, 369, 0, 370, 374, 375,
	376, 377, 378, 379, 380, 0, 387, 388, 381, 383,
	384, 385, 382, 386, 389, 390, 0, 391, 371, 372,
	392, 0, 393, 475, 394, 395, 0, 405, 396, 397,
	398, 373, 399, 403, 404, 400, 401, 402, 476, 0,
	407, 408, 406, 0, 409, 410, 411, 412, 413, 261,
	414, 262, 415, 0, 477, 478, 479, 416, 0, 0,
	417, 418, 480, 419, 481, 0, 420, 421, 422, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 430, 0,
	431, 0, 429, 432, 433, 434, 482, 483, 0, 436,
	435, 484, 512, 0, 204, 0, 437, 438, 485, 439,
	440, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 208, 209, 210, 211, 0, 212, 0, 0, 0,
	0, 442, 0, 0, 0, 0, 213, 214, 215, 443,
	444, 216, 445, 217, 218, 446, 0, 219, 220, 221,
	222, 223, 224, 0, 0, 225, 447, 448, 449, 0,
	226, 450, 0, 0, 0, 227, 228, 229, 230, 231,
	0, 233, 234, 235, 232, 0, 236, 0, 237, 238,
	239, 0, 0, 240, 241, 0, 0, 0, 0, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 451, 452,
	0, 248, 0, 249, 0, 250, 0, 0, 251, 252,
	253, 0, 254, 0, 255, 256, 0, 453, 257, 258,
	260, 263, 259, 264, 265, 266, 454, 455, 0, 0,
	0, 0, 0, 0, 0, 267, 268, 269, 456, 270,
	271, 0, 272, 0, 273, 0, 0, 0, 274, 275,
	0, 276, 457, 0, 458, 277, 0, 278, 279, 280,
	281, 282, 283, 459, 460, 461, 0, 0, 465, 285,
	0, 0, 0, 0, 284, 286, 293, 0, 0, 287,
	462, 289, 288, 290, 291, 292, 463, 0, 464, 0,
	294, 0, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 300, 301, 302, 303, 0, 305, 304, 0, 306,
	466, 0, 307, 308, 0, 0, 309, 310, 0, 0,
	311, 0, 312, 313, 0, 0, 314, 315, 317, 318,
	316, 0, 319, 320, 322, 321, 0, 0, 0, 0,
	467, 468, 323, 324, 0, 325, 326, 0, 0, 328,
	329, 0, 0, 330, 469, 0, 331, 0, 470, 332,
	327, 333, 334, 335, 336, 337, 338, 0, 339, 471,
	340, 472, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 473, 349, 350, 0, 351, 352, 353, 354,
	355, 0, 357, 358, 359, 356, 360, 361, 362, 363,
	0, 364, 0, 365, 366, 367, 368, 474, 369, 0,
	370, 374, 375, 376, 377, 378, 379, 380, 0, 387,
	388, 381, 383, 384, 385, 382, 386, 389, 390, 0,
	391, 371, 372, 392, 0, 393, 475, 394, 395, 0,
	405, 396, 397, 398, 373, 399, 403, 404, 400, 401,
	402, 476, 0, 407, 408, 406, 0, 409, 410, 411,
	412, 413, 261, 414, 262, 415, 0, 477, 478, 479,
	416, 0, 0, 417, 418, 480, 419, 481, 0, 420,
	421, 422, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 430, 0, 431, 0, 429, 432, 433, 434, 482,
	483, 0, 436, 435, 484, 488, 0, 204, 0, 437,
	438, 485, 439, 440, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 208, 209, 210, 211, 0, 212,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 213,
	214, 215, 443, 444, 216, 445, 217, 218, 446, 0,
	219, 220, 221, 222, 223, 224, 0, 0, 225, 447,
	448, 449, 0, 226, 450, 0, 0, 0, 227, 228,
	229, 230, 231, 0, 233, 234, 235, 232, 0, 236,
	0, 237, 238, 239, 0, 0, 240, 241, 0, 0,
	0, 0, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 451, 452, 0, 248, 0, 249, 0, 250, 0,
	0, 251, 252, 253, 0, 254, 0, 255, 256, 0,
	453, 257, 258, 260, 263, 259, 264, 265, 266, 454,
	455, 0, 0, 0, 0, 0, 0, 0, 267, 268,
	269, 456, 270, 271, 0, 272, 0, 273, 0, 0,
	0, 274, 275, 0, 276, 457, 0, 458, 277, 0,
	278, 279, 280, 281, 282, 283, 459, 460, 461, 0,
	0, 465, 285, 0, 0, 0, 0, 284, 286, 293,
	0, 0, 287, 462, 289, 288, 290, 291, 292, 463,
	0, 464, 0, 294, 0, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 300, 301, 302, 303, 0, 305,
	304, 0, 306, 466, 0, 307, 308, 0, 0, 309,
	310, 0, 0, 311, 0, 312, 313, 0, 0, 314,
	315, 317, 318, 316, 0, 319, 320, 322, 321, 0,
	0, 0, 0, 467, 468, 323, 324, 0, 325, 326,
	0, 0, 328, 329, 0, 0, 330, 469, 0, 331,
	0, 470, 332, 327, 333, 334, 335, 336, 337, 338,
	0, 339, 471, 340, 472, 341, 0, 342, 0, 343,
	344, 345, 346, 347, 348, 473, 349, 350, 0, 351,
	352, 353, 354, 355, 0, 357, 358, 359, 356, 360,
	361, 362, 363, 0, 364, 0, 365, 366, 367, 368,
	474, 369, 0, 370, 374, 375, 376, 377, 378, 379,
	380, 0, 387, 388, 381, 383, 384, 385, 382, 386,
	389, 390, 0, 391, 371, 372, 392, 0, 393, 475,
	394, 395, 0, 405, 396, 397, 398, 373, 399, 403,
	404, 400, 401, 402, 476, 0, 407, 408, 406, 0,
	409, 410, 411, 412, 413, 261, 414, 262, 415, 0,
	477, 478, 479, 416, 0, 0, 417, 418, 480, 419,
	481, 0, 420, 421, 422, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 430, 0, 431, 0, 429, 432,
	433, 434, 482, 483, 204, 436, 435, 484, 0, 0,
	0, 0, 437, 438, 485, 439, 440, 441, 0, 0,
	207, 208, 209, 210, 211, 0, 212, 0, 0, 0,
	0, 442, 0, 0, 0, 0, 213, 214, 215, 443,
	444, 216, 445, 217, 218, 446, 0, 219, 220, 221,
	222, 223, 224, 0, 0, 225, 447, 448, 449, 0,
	226, 450, 0, 0, 0, 227, 228, 229, 230, 231,
	0, 233, 234, 235, 232, 0, 236, 0, 237, 238,
	239, 0, 0, 240, 241, 0, 0, 0, 0, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 451, 452,
	0, 248, 0, 249, 0, 250, 0, 0, 251, 252,
	253, 0, 254, 0, 255, 256, 0, 453, 257, 258,
	260, 263, 259, 264, 265, 266, 454, 455, 0, 0,
	0, 0, 0, 0, 0, 267, 268, 269, 456, 270,
	271, 0, 272, 0, 273, 0, 0, 0, 274, 275,
	0, 276, 457, 0, 458, 277, 0, 278, 279, 280,
	281, 282, 283, 459, 460, 461, 0, 0, 465, 285,
	0, 0, 0, 0, 284, 286, 293, 0, 0, 287,
	462, 289, 288, 290, 291, 292, 463, 0, 464, 0,
	294, 0, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 300, 301, 302, 303, 0, 305, 304, 0, 306,
	466, 0, 307, 308, 0, 0, 309, 310, 0, 0,
	311, 0, 312, 313, 0, 0, 314, 315, 317, 318,
	316, 0, 319, 320, 322, 321, 0, 0, 0, 0,
	467, 468, 323, 324, 0, 325, 326, 0, 0, 328,
	329, 0, 0, 330, 469, 0, 331, 0, 470, 332,
	327, 333, 334, 335, 336, 337, 338, 0, 339, 471,
	340, 472, 341, 0, 342, 0, 343, 344, 345, 346,
	347, 348, 473, 349, 350, 0, 351, 352, 353, 354,
	355, 0, 357, 358, 359, 356, 360, 361, 362, 363,
	0, 364, 0, 365, 366, 367, 368, 474, 369, 0,
	370, 374, 375, 376, 377, 378, 379, 380, 0, 387,
	388, 381, 383, 384, 385, 382, 386, 389, 390, 0,
	391, 371, 372, 392, 0, 393, 475, 394, 395, 0,
	405, 396, 397, 398, 373, 399, 403, 404, 400, 401,
	402, 476, 0, 407, 408, 406, 0, 409, 410, 411,
	412, 413, 261, 414, 262, 415, 0, 477, 478, 479,
	416, 0, 0, 417, 418, 480, 419, 481, 0, 420,
	421, 422, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 430, 0, 431, 0, 429, 432, 433, 434, 482,
	483, 204, 436, 435, 484, 0, 0, 0, 0, 437,
	438, 485, 439, 440, 441, 0, 0, 207, 208, 209,
	210, 211, 0, 212, 0, 0, 0, 0, 442, 0,
	0, 0, 0, 213, 214, 215, 443, 444, 216, 445,
	217, 218, 446, 0, 219, 220, 221, 222, 223, 224,
	0, 0, 225, 447, 448, 449, 0, 226, 450, 0,
	0, 0, 227, 228, 229, 230, 231, 0, 233, 234,
	235, 232, 0, 236, 0, 237, 238, 239, 0, 0,
	240, 241, 0, 0, 0, 0, 0, 0, 0, 242,
	243, 244, 245, 246, 247, 451, 452, 0, 248, 0,
	249, 0, 250, 0, 0, 251, 252, 253, 0, 254,
	0, 255, 256, 0, 453, 257, 258, 260, 263, 259,
	264, 265, 266, 454, 455, 0, 0, 0, 0, 0,
	0, 0, 267, 268, 269, 456, 270, 271, 0, 272,
	0, 273, 0, 0, 0, 274, 275, 0, 276, 457,
	0, 458, 277, 0, 278, 279, 280, 281, 282, 283,
	2511, 460, 461, 0, 0, 465, 285, 0, 0, 0,
	0, 284, 286, 293, 0, 0, 287, 462, 289, 288,
	290, 291, 292, 463, 0, 464, 0, 294, 0, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 300, 301,
	302, 303, 0, 305, 304, 0, 306, 466, 0, 307,
	308, 0, 0, 309, 310, 0, 0, 311, 0, 312,
	313, 0, 0, 314, 315, 317, 318, 316, 0, 319,
	320, 322, 321, 0, 0, 0, 0, 467, 468, 323,
	324, 0, 325, 326, 0, 0, 328, 329, 0, 0,
	330, 469, 0, 331, 0, 470, 332, 327, 333, 334,
	335, 336, 337, 338, 0, 339, 471, 340, 472, 341,
	0, 342, 0, 343, 344, 345, 346, 347, 348, 473,
	349, 350, 0, 351, 352, 353, 354, 355, 0, 357,
	358, 359, 356, 360, 361, 362, 363, 0, 364, 0,
	365, 366, 367, 368, 474, 369, 0, 370, 374, 375,
	376, 377, 378, 379, 380, 0, 387, 388, 381, 383,
	384, 385, 382, 386, 389, 390, 0, 391, 371, 372,
	392, 0, 393, 475, 394, 395, 0, 405, 396, 397,
	398, 373, 399, 403, 404, 400, 401, 402, 476, 0,
	407, 408, 406, 0, 409, 410, 411, 412, 413, 261,
	414, 262, 415, 0, 477, 478, 479, 416, 0, 0,
	417, 418, 480, 419, 481, 0, 420, 421, 422, 0,
	423, 424, 0, 0, 425, 426, 427, 428, 430, 0,
	431, 0, 429, 432, 433, 434, 482, 483, 204, 436,
	435, 484, 0, 0, 0, 0, 437, 438, 485, 439,
	440, 441, 0, 0, 207, 208, 209, 210, 211, 0,
	212, 0, 0, 0, 0, 442, 0, 0, 0, 0,
	213, 214, 215, 443, 444, 216, 445, 217, 218, 446,
	0, 219, 220, 221, 222, 223, 224, 0, 0, 225,
	447, 448, 449, 0, 226, 450, 0, 0, 0, 227,
	228, 229, 230, 231, 0, 233, 234, 235, 232, 0,
	236, 0, 237, 238, 239, 0, 0, 240, 241, 0,
	0, 0, 0, 0, 0, 0, 242, 243, 244, 245,
	246, 247, 451, 452, 0, 248, 0, 249, 0, 250,
	0, 0, 251, 252, 253, 0, 254, 0, 255, 256,
	0, 453, 257, 258, 260, 263, 259, 264, 265, 266,
	454, 455, 0, 0, 0, 0, 0, 0, 0, 267,
	268, 269, 456, 270, 271, 0, 272, 0, 273, 0,
	0, 0, 274, 275, 0, 276, 457, 0, 458, 277,
	0, 278, 279, 280, 281, 282, 283, 2509, 460, 461,
	0, 0, 465, 285, 0, 0, 0, 0, 284, 286,
	293, 0, 0, 287, 462, 289, 288, 290, 291, 292,
	463, 0, 464, 0, 294, 0, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 300, 301, 302, 303, 0,
	305, 304, 0, 306, 466, 0, 307, 308, 0, 0,
	309, 310, 0, 0, 311, 0, 312, 313, 0, 0,
	314, 315, 317, 318, 316, 0, 319, 320, 322, 321,
	0, 0, 0, 0, 467, 468, 323, 324, 0, 325,
	326, 0, 0, 328, 329, 0, 0, 330, 469, 0,
	331, 0, 470, 332, 327, 333, 334, 335, 336, 337,
	338, 0, 339, 471, 340, 472, 341, 0, 342, 0,
	343, 344, 345, 346, 347, 348, 473, 349, 350, 0,
	351, 352, 353, 354, 355, 0, 357, 358, 359, 356,
	360, 361, 362, 363, 0, 364, 0, 365, 366, 367,
	368, 474, 369, 0, 370, 374, 375, 376, 377, 378,
	379, 380, 0, 387, 388, 381, 383, 384, 385, 382,
	386, 389, 390, 0, 391, 371, 372, 392, 0, 393,
	475, 394, 395, 0, 405, 396, 397, 398, 373, 399,
	403, 404, 400, 401, 402, 476, 0, 407, 408, 406,
	0, 409, 410, 411, 412, 413, 261, 414, 262, 415,
	0, 477, 478, 479, 416, 0, 0, 417, 418, 480,
	419, 481, 0, 420, 421, 422, 0, 423, 424, 0,
	0, 425, 426, 427, 428, 430, 0, 431, 0, 429,
	432, 433, 434, 482, 483, 204, 436, 435, 484, 0,
	0, 0, 0, 437, 438, 485, 439, 440, 441, 0,
	0, 207, 208, 209, 210, 211, 0, 212, 0, 0,
	0, 0, 442, 0, 0, 0, 0, 213, 214, 215,
	443, 444, 216, 445, 217, 218, 446, 0, 219, 220,
	221, 222, 223, 224, 0, 0, 225, 447, 448, 449,
	0, 226, 450, 0, 0, 0, 227, 228, 229, 230,
	231, 0, 233, 234, 235, 232, 0, 236, 0, 237,
	238, 239, 0, 0, 240, 241, 0, 0, 0, 0,
	0, 0, 0, 242, 243, 244, 245, 246, 247, 451,
	452, 0, 248, 0, 249, 0, 250, 0, 0, 251,
	252, 253, 0, 254, 0, 255, 256, 0, 453, 257,
	258, 260, 263, 259, 264, 265, 266, 454, 455, 0,
	0, 0, 0, 0, 0, 0, 267, 268, 269, 456,
	270, 271, 0, 272, 0, 273, 0, 0, 0, 274,
	275, 0, 276, 457, 0, 458, 277, 0, 278, 279,
	280, 281, 282, 283, 2498, 460, 461, 0, 0, 465,
	285, 0, 0, 0, 0, 284, 286, 293, 0, 0,
	287, 462, 289, 288, 290, 291, 292, 463, 0, 464,
	0, 294, 0, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 300, 301, 302, 303, 0, 305, 304, 0,
	306, 466, 0, 307, 308, 0, 0, 309, 310, 0,
	0, 311, 0, 312, 313, 0, 0, 314, 315, 317,
	318, 316, 0, 319, 320, 322, 321, 0, 0, 0,
	0, 467, 468, 323, 324, 0, 325, 326, 0, 0,
	328, 329, 0, 0, 330, 469, 0, 331, 0, 470,
	332, 327, 333, 334, 335, 336, 337, 338, 0, 339,
	471, 340, 472, 341, 0, 342, 0, 343, 344, 345,
	346, 347, 348, 473, 349, 350, 0, 351, 352, 353,
	354, 355, 0, 357, 358, 359, 356, 360, 361, 362,
	363, 0, 364, 0, 365, 366, 367, 368, 474, 369,
	0, 370, 374, 375, 376, 377, 378, 379, 380, 0,
	387, 388, 381, 383, 384, 385, 382, 386, 389, 390,
	0, 391, 371, 372, 392, 0, 393, 475, 394, 395,
	0, 405, 396, 397, 398, 373, 399, 403, 404, 400,
	401, 402, 476, 0, 407, 408, 406, 0, 409, 410,
	411, 412, 413, 261, 414, 262, 415, 0, 477, 478,
	479, 416, 0, 0, 417, 418, 480, 419, 481, 0,
	420, 421, 422, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 430, 0, 431, 0, 429, 432, 433, 434,
	482, 483, 204, 436, 435, 484, 0, 0, 0, 0,
	437, 438, 485, 439, 440, 441, 0, 0, 207, 208,
	209, 210, 211, 0, 212, 0, 0, 0, 0, 442,
	0, 0, 0, 0, 213, 214, 215, 443, 444, 216,
	445, 217, 218, 446, 0, 219, 220, 221, 222, 223,
	224, 0, 0, 225, 447, 448, 449, 0, 226, 450,
	0, 0, 0, 227, 228, 229, 230, 231, 0, 233,
	234, 235, 232, 0, 236, 0, 237, 238, 239, 0,
	0, 240, 241, 0, 0, 0, 0, 0, 0, 0,
	242, 243, 244, 245, 246, 247, 451, 452, 0, 248,
	0, 249, 0, 250, 0, 0, 251, 252, 253, 0,
	254, 0, 255, 256, 0, 453, 257, 258, 260, 263,
	259, 264, 265, 266, 454, 455, 0, 0, 0, 0,
	0, 0, 0, 267, 268, 269, 456, 270, 271, 0,
	272, 0, 273, 0, 0, 0, 274, 275, 0, 276,
	457, 0, 458, 277, 0, 278, 279, 280, 281, 282,
	283, 2218, 460, 461, 0, 0, 465, 285, 0, 0,
	0, 0, 284, 286, 293, 0, 0, 287, 462, 289,
	288, 290, 291, 292, 463, 0, 464, 0, 294, 0,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 300,
	301, 302, 303, 0, 305, 304, 0, 306, 466, 0,
	307, 308, 0, 0, 309, 310, 0, 0, 311, 0,
	312, 313, 0, 0, 314, 315, 317, 318, 316, 0,
	319, 320, 322, 321, 0, 0, 0, 0, 467, 468,
	323, 324, 0, 325, 326, 0, 0, 328, 329, 0,
	0, 330, 469, 0, 331, 0, 470, 332, 327, 333,
	334, 335, 336, 337, 338, 0, 339, 471, 340, 472,
	341, 0, 342, 0, 343, 344, 345, 346, 347, 348,
	473, 349, 350, 0, 351, 352, 353, 354, 355, 0,
	357, 358, 359, 356, 360, 361, 362, 363, 0, 364,
	0, 365, 366, 367, 368, 474, 369, 0, 370, 374,
	375, 376, 377, 378, 379, 380, 0, 387, 388, 381,
	383, 384, 385, 382, 386, 389, 390, 0, 391, 371,
	372, 392, 0, 393, 475, 394, 395, 0, 405, 396,
	397, 398, 373, 399, 403, 404, 400, 401, 402, 476,
	0, 407, 408, 406, 0, 409, 410, 411, 412, 413,
	261, 414, 262, 415, 0, 477, 478, 479, 416, 0,
	0, 417, 418, 480, 419, 481, 0, 420, 421, 422,
	0, 423, 424, 0, 0, 425, 426, 427, 428, 430,
	0, 431, 0, 429, 432, 433, 434, 482, 483, 204,
	436, 435, 484, 0, 0, 0, 0, 437, 438, 485,
	439, 440, 441, 0, 0, 207, 208, 209, 210, 211,
	0, 212, 0, 0, 0, 0, 442, 0, 0, 0,
	0, 213, 214, 215, 443, 444, 216, 445, 217, 218,
	446, 0, 219, 220, 221, 222, 223, 224, 0, 0,
	225, 447, 448, 449, 0, 226, 450, 0, 0, 0,
	227, 228, 229, 230, 231, 0, 233, 234, 235, 232,
	0, 236, 0, 237, 238, 239, 0, 0, 240, 241,
	0, 0, 0, 0, 0, 0, 0, 242, 243, 244,
	245, 246, 247, 451, 452, 0, 248, 0, 249, 0,
	250, 0, 0, 251, 252, 253, 0, 254, 0, 255,
	256, 0, 453, 257, 258, 260, 263, 259, 264, 265,
	266, 454, 455, 0, 0, 0, 0, 0, 0, 0,
	267, 268, 269, 456, 270, 271, 0, 272, 0, 273,
	0, 0, 0, 274, 275, 0, 276, 457, 0, 458,
	277, 0, 278, 279, 280, 281, 282, 283, 459, 460,
	461, 0, 0, 465, 285, 0, 0, 0, 0, 284,
	286, 293, 0, 0, 287, 462, 289, 288, 290, 291,
	292, 463, 0, 464, 0, 294, 0, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 300, 301, 302, 303,
	0, 305, 304, 0, 306, 466, 0, 307, 308, 0,
	0, 309, 310, 0, 0, 311, 0, 312, 313, 0,
	0, 314, 315, 317, 318, 316, 0, 319, 320, 322,
	321, 0, 0, 0, 0, 467, 468, 323, 324, 0,
	325, 326, 0, 0, 328, 329, 0, 0, 330, 469,
	0, 331, 0, 470, 332, 327, 333, 334, 335, 336,
	337, 338, 0, 339, 471, 340, 472, 341, 0, 342,
	0, 343, 344, 345, 346, 347, 348, 473, 349, 350,
	0, 351, 352, 353, 354, 355, 0, 357, 358, 359,
	356, 360, 361, 362, 363, 0, 364, 0, 365, 366,
	367, 368, 474, 369, 0, 370, 521, 375, 376, 377,
	378, 379, 380, 0, 387, 388, 381, 383, 384, 385,
	382, 386, 389, 390, 0, 391, 371, 372, 392, 0,
	393, 475, 394, 395, 0, 405, 396, 397, 398, 373,
	399, 403, 404, 400, 401, 402, 476, 0, 407, 408,
	406, 0, 409, 410, 411, 412, 413, 261, 414, 262,
	415, 0, 477, 478, 479, 416, 0, 0, 417, 418,
	480, 419, 481, 0, 420, 421, 422, 0, 423, 424,
	0, 0, 425, 426, 427, 428, 430, 0, 431, 0,
	429, 432, 433, 434, 482, 483, 204, 436, 435, 484,
	0, 0, 0, 0, 437, 438, 485, 439, 440, 441,
	0, 0, 207, 208, 209, 210, 211, 0, 212, 0,
	0, 0, 0, 442, 0, 1763, 0, 0, 213, 214,
	215, 443, 444, 216, 445, 217, 218, 446, 0, 219,
	220, 221, 222, 223, 224, 0, 0, 225, 447, 448,
	449, 0, 226, 450, 0, 0, 0, 227, 228, 229,
	230, 231, 0, 233, 234, 235, 232, 0, 236, 0,
	237, 238, 239, 0, 0, 240, 241, 0, 0, 0,
	0, 0, 0, 0, 242, 243, 244, 245, 246, 247,
	451, 452, 0, 248, 0, 249, 0, 250, 0, 0,
	251, 252, 253, 0, 254, 0, 255, 256, 0, 453,
	257, 258, 260, 263, 259, 264, 265, 266, 454, 455,
	0, 0, 0, 0, 0, 0, 0, 267, 268, 269,
	456, 270, 271, 0, 272, 0, 273, 0, 0, 0,
	274, 275, 0, 276, 457, 0, 458, 277, 0, 278,
	279, 280, 281, 282, 283, 459, 460, 461, 0, 0,
	465, 285, 0, 0, 0, 0, 284, 286, 293, 0,
	0, 287, 462, 289, 288, 290, 291, 292, 463, 0,
	464, 0, 294, 0, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 300, 301, 302, 303, 0, 305, 304,
	0, 306, 466, 0, 307, 308, 0, 0, 309, 310,
	0, 0, 311, 0, 312, 313, 0, 0, 314, 315,
	317, 318, 316, 0, 319, 320, 322, 321, 0, 0,
	0, 0, 467, 468, 323, 324, 0, 325, 326, 0,
	0, 328, 329, 0, 0, 330, 469, 0, 331, 0,
	470, 332, 327, 333, 334, 335, 336, 337, 338, 0,
	339, 471, 340, 472, 341, 0, 342, 0, 343, 344,
	345, 346, 347, 348, 473, 349, 350, 0, 351, 352,
	353, 354, 355, 0, 357, 358, 359, 356, 360, 361,
	362, 363, 0, 364, 0, 365, 366, 367, 368, 474,
	369, 0, 370, 374, 375, 376, 377, 378, 379, 380,
	0, 387, 388, 381, 383, 384, 385, 382, 386, 389,
	390, 0, 0, 371, 372, 392, 0, 393, 475, 394,
	395, 0, 405, 396, 397, 398, 373, 399, 403, 404,
	400, 401, 402, 476, 0, 407, 408, 406, 0, 409,
	410, 411, 412, 413, 261, 414, 262, 415, 0, 477,
	478, 479, 416, 0, 0, 417, 418, 480, 419, 481,
	0, 420, 421, 422, 0, 423, 424, 0, 0, 425,
	426, 427, 428, 430, 0, 431, 0, 429, 432, 433,
	434, 482, 483, 204, 436, 435, 484, 0, 0, 0,
	0, 437, 438, 485, 439, 440, 441, 0, 0, 207,
	208, 209, 210, 211, 0, 212, 0, 0, 0, 0,
	442, 0, 0, 0, 0, 213, 214, 215, 443, 444,
	216, 445, 217, 218, 446, 0, 219, 220, 221, 222,
	223, 224, 0, 0, 225, 447, 448, 449, 0, 226,
	450, 0, 0, 0, 227, 228, 229, 230, 231, 0,
	233, 234, 235, 232, 0, 236, 0, 237, 238, 239,
	0, 0, 240, 241, 0, 0, 0, 0, 0, 0,
	0, 242, 243, 244, 245, 246, 247, 451, 452, 0,
	248, 0, 249, 0, 250, 0, 0, 251, 252, 253,
	0, 254, 0, 255, 256, 0, 453, 257, 258, 260,
	263, 259, 264, 265, 266, 454, 455, 0, 0, 0,
	0, 0, 0, 0, 267, 268, 269, 456, 270, 271,
	0, 272, 0, 273, 0, 0, 0, 274, 275, 0,
	276, 457, 0, 458, 277, 0, 278, 279, 280, 281,
	282, 283, 1226, 460, 461, 0, 0, 465, 285, 0,
	0, 0, 0, 284, 286, 293, 0, 0, 287, 462,
	289, 288, 290, 291, 292, 463, 0, 464, 0, 294,
	0, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	300, 301, 302, 303, 0, 305, 304, 0, 306, 466,
	0, 307, 308, 0, 0, 309, 310, 0, 0, 311,
	0, 312, 313, 0, 0, 314, 315, 317, 318, 316,
	0, 319, 320, 322, 321, 0, 0, 0, 0, 467,
	468, 323, 324, 0, 325, 326, 0, 0, 328, 329,
	0, 0, 330, 469, 0, 331, 0, 470, 332, 327,
	333, 334, 335, 336, 337, 338, 0, 339, 471, 340,
	472, 341, 0, 342, 0, 343, 344, 345, 346, 347,
	348, 473, 349, 350, 0, 351, 352, 353, 354, 355,
	0, 357, 358, 359, 356, 360, 361, 362, 363, 0,
	364, 0, 365, 366, 367, 368, 474, 369, 0, 370,
	374, 375, 376, 377, 378, 379, 380, 0, 387, 388,
	381, 383, 384, 385, 382, 386, 389, 390, 0, 391,
	371, 372, 392, 0, 393, 475, 394, 395, 0, 405,
	396, 397, 398, 373, 399, 403, 404, 400, 401, 402,
	476, 0, 407, 408, 406, 0, 409, 410, 411, 412,
	413, 261, 414, 262, 415, 0, 477, 478, 479, 416,
	0, 0, 417, 418, 480, 419, 481, 0, 420, 421,
	422, 0, 423, 424, 0, 0, 425, 426, 427, 428,
	430, 0, 431, 0, 429, 432, 433, 434, 482, 483,
	204, 436, 435, 484, 0, 0, 0, 0, 437, 438,
	485, 439, 440, 441, 0, 0, 207, 208, 209, 210,
	211, 0, 212, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 213, 214, 215, 443, 444, 216, 445, 217,
	218, 446, 0, 219, 220, 221, 222, 223, 224, 0,
	0, 225, 447, 448, 449, 0, 226, 450, 0, 0,
	0, 227, 228, 229, 230, 231, 0, 233, 234, 235,
	232, 0, 236, 0, 237, 238, 239, 0, 0, 240,
	241, 0, 0, 0, 0, 0, 0, 0, 242, 243,
	244, 245, 246, 247, 451, 452, 0, 248, 0, 249,
	0, 250, 0, 0, 251, 252, 253, 0, 254, 0,
	255, 256, 0, 453, 257, 258, 260, 263, 259, 264,
	265, 266, 454, 455, 0, 0, 0, 0, 0, 0,
	0, 267, 268, 269, 456, 270, 271, 0, 272, 0,
	273, 0, 0, 0, 274, 275, 0, 276, 457, 0,
	458, 277, 0, 278, 279, 280, 281, 282, 283, 1169,
	460, 461, 0, 0, 465, 285, 0, 0, 0, 0,
	284, 286, 293, 0, 0, 287, 462, 289, 288, 290,
	291, 292, 463, 0, 464, 0, 294, 0, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 300, 301, 302,
	303, 0, 305, 304, 0, 306, 466, 0, 307, 308,
	0, 0, 309, 310, 0, 0, 311, 0, 312, 313,
	0, 0, 314, 315, 317, 318, 316, 0, 319, 320,
	322, 321, 0, 0, 0, 0, 467, 468, 323, 324,
	0, 325, 326, 0, 0, 328, 329, 0, 0, 330,
	469, 0, 331, 0, 470, 332, 327, 333, 334, 335,
	336, 337, 338, 0, 339, 471, 340, 472, 341, 0,
	342, 0, 343, 344, 345, 346, 347, 348, 473, 349,
	350, 0, 351, 352, 353, 354, 355, 0, 357, 358,
	359, 356, 360, 361, 362, 363, 0, 364, 0, 365,
	366, 367, 368, 474, 369, 0, 370, 374, 375, 376,
	377, 378, 379, 380, 0, 387, 388, 381, 383, 384,
	385, 382, 386, 389, 390, 0, 391, 371, 372, 392,
	0, 393, 475, 394, 395, 0, 405, 396, 397, 398,
	373, 399, 403, 404, 400, 401, 402, 476, 0, 407,
	408, 406, 0, 409, 410, 411, 412, 413, 261, 414,
	262, 415, 0, 477, 478, 479, 416, 0, 0, 417,
	418, 480, 419, 481, 0, 420, 421, 422, 0, 423,
	424, 0, 0, 425, 426, 427, 428, 430, 0, 431,
	0, 429, 432, 433, 434, 482, 483, 204, 436, 435,
	484, 0, 0, 0, 0, 437, 438, 485, 439, 440,
	441, 0, 0, 207, 208, 209, 210, 211, 0, 212,
	0, 0, 0, 0, 442, 0, 0, 0, 0, 213,
	214, 215, 443, 444, 216, 445, 217, 218, 446, 0,
	219, 220, 221, 222, 223, 224, 0, 0, 225, 447,
	448, 449, 0, 226, 450, 0, 0, 0, 227, 228,
	229, 230, 231, 0, 233, 234, 235, 232, 0, 236,
	0, 237, 238, 239, 0, 0, 240, 241, 0, 0,
	0, 0, 0, 0, 0, 242, 243, 244, 245, 246,
	247, 451, 452, 0, 248, 0, 249, 0, 250, 0,
	0, 251, 252, 253, 0, 254, 0, 255, 256, 0,
	453, 257, 258, 260, 263, 259, 264, 265, 266, 454,
	455, 0, 0, 0, 0, 0, 0, 0, 267, 268,
	269, 456, 270, 271, 0, 272, 0, 273, 0, 0,
	0, 274, 275, 0, 276, 457, 0, 458, 277, 0,
	278, 279, 280, 281, 282, 283, 459, 460, 461, 0,
	0, 465, 285, 0, 0, 0, 0, 284, 286, 293,
	0, 0, 287, 462, 289, 288, 290, 291, 292, 463,
	0, 464, 0, 294, 0, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 300, 301, 302, 303, 0, 305,
	304, 0, 306, 466, 0, 307, 308, 0, 0, 309,
	310, 0, 0, 311, 0, 312, 313, 0, 0, 314,
	315, 317, 318, 316, 0, 319, 320, 322, 321, 0,
	0, 0, 0, 467, 468, 323, 324, 0, 325, 326,
	0, 0, 328, 329, 0, 0, 330, 469, 0, 331,
	0, 470, 332, 327, 333, 334, 335, 336, 337, 338,
	0, 339, 471, 340, 472, 341, 0, 342, 0, 343,
	344, 345, 346, 347, 348, 473, 934, 350, 0, 351,
	352, 353, 354, 355, 0, 357, 358, 359, 356, 360,
	361, 362, 363, 0, 364, 0, 365, 366, 367, 368,
	474, 369, 0, 370, 374, 375, 376, 377, 378, 379,
	380, 0, 387, 388, 381, 383, 384, 385, 382, 386,
	389, 390, 0, 391, 371, 372, 392, 0, 393, 475,
	394, 395, 0, 405, 396, 397, 398, 373, 399, 403,
	404, 400, 401, 402, 476, 0, 407, 408, 406, 0,
	409, 410, 411, 412, 413, 261, 414, 262, 415, 0,
	477, 478, 479, 416, 0, 0, 417, 418, 480, 419,
	481, 0, 420, 421, 422, 0, 423, 424, 0, 0,
	425, 426, 427, 428, 430, 0, 431, 0, 429, 432,
	433, 434, 482, 483, 204, 436, 435, 484, 0, 0,
	0, 0, 437, 438, 485, 439, 440, 441, 0, 0,
	207, 208, 209, 210, 211, 0, 212, 0, 0, 0,
	0, 442, 0, 0, 0, 0, 213, 214, 215, 443,
	444, 216, 445, 217, 218, 446, 0, 219, 220, 221,
	222, 223, 224, 0, 0, 225, 447, 448, 449, 0,
	226, 450, 0, 0, 0, 227, 228, 229, 230, 231,
	0, 233, 234, 235, 232, 0, 236, 0, 237, 238,
	239, 0, 0, 240, 241, 0, 0, 0, 0, 0,
	0, 0, 242, 243, 244, 245, 246, 247, 451, 452,
	0, 248, 0, 249, 0, 250, 0, 0, 251, 252,
	253, 0, 254, 0, 255, 256, 0, 453, 257, 258,
	260, 263, 259, 264, 265, 266, 454, 455, 0, 0,
	0, 0, 0, 0, 0, 267, 268, 269, 456, 270,
	271, 0, 272, 0, 273, 0, 0, 0, 274, 275,
	0, 276, 457, 0, 458, 0, 0, 278, 279, 280,
	281, 282, 283, 459, 460, 461, 0, 0, 465, 285,
	0, 0, 0, 0, 284, 286, 293, 0, 0, 287,
	462, 289, 288, 290, 291, 292, 463, 0, 464, 0,
	294, 0, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 300, 301, 302, 303, 0, 305, 304, 0, 306,
	466, 0, 307, 308, 0, 0, 309, 310, 0, 0,
	311, 0, 312, 313, 0, 0, 314, 315, 317, 318,
	316, 0, 319, 320, 322, 321, 0, 0, 0, 0,
	467, 468, 323, 324, 0, 325, 326, 0, 0, 328,
	329, 0, 0, 330, 469, 0, 331, 0, 470, 332,
	327, 333, 334, 0, 336, 337, 338, 0, 339, 471,
	340, 472, 341, 0, 342, 0, 343, 344, 345, 0,
	347, 348, 473, 349, 350, 0, 351, 352, 353, 354,
	355, 0, 357, 358, 359, 356, 360, 361, 362, 363,
	0, 364, 0, 365, 366, 367, 368, 474, 0, 0,
	370, 374, 375, 376, 377, 378, 379, 380, 0, 387,
	388, 381, 383, 384, 385, 382, 386, 389, 390, 0,
	391, 371, 372, 392, 0, 393, 475, 394, 395, 0,
	405, 396, 397, 398, 373, 399, 403, 404, 400, 401,
	402, 476, 0, 407, 408, 406, 0, 409, 410, 411,
	412, 413, 261, 414, 262, 415, 0, 477, 478, 479,
	416, 0, 0, 417, 418, 480, 419, 481, 0, 420,
	421, 422, 0, 423, 424, 0, 0, 425, 426, 427,
	428, 430, 0, 431, 0, 429, 432, 433, 434, 482,
	483, 0, 436, 435, 484, 0, 0, 0, 0, 437,
	438, 485, 439, 440, 441, 1378, 1379, 0, 1411, 1412,
	1413, 1421, 1422, 1423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1414, 0, 0, 0, 0, 0,
	0, 1381, 0, 0, 1427, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1380, 0, 0,
	0, 0, 0, 0, 0, 1400, 0, 0, 0, 0,
	0, 0, 1397, 0, 0, 0, 0, 0, 0, 1378,
	1379, 0, 1411, 1412, 1413, 1421, 1422, 1423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1414, 0,
	0, 0, 0, 0, 0, 1381, 0, 0, 1427, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1403, 1404, 1405, 1406,
	0, 1380, 0, 0, 0, 0, 1386, 0, 0, 1400,
	0, 0, 0, 0, 0, 0, 1397, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1418, 1428, 0, 0, 1408, 1409, 1410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1424, 1425, 0, 0,
	0, 0, 0, 0, 1395, 1396, 0, 0, 0, 0,
	1403, 1404, 1405, 1406, 0, 0, 0, 0, 0, 1416,
	1386, 0, 0, 0, 0, 0, 1401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1426, 0, 1418, 1428, 0, 0, 1408,
	1409, 1410, 0, 0, 0, 0, 1415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1424, 1425, 0, 0, 0, 0, 0, 0, 1395, 1396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1416, 0, 0, 1407, 0, 0, 0,
	1401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1402, 0, 0, 1426, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1415, 0, 0, 0, 0, 0, 0, 0, 0, 1419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1407, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1402, 0,
	0, 0, 1378, 1379, 0, 1411, 1412, 1413, 1421, 1422,
	1423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1414, 0, 1419, 0, 0, 0, 0, 1381, 0,
	1417, 1427, 0, 1392, 1393, 1399, 1398, 1394, 1420, 0,
	1391, 1389, 1390, 1382, 1383, 1384, 1385, 1387, 1388, 0,
	0, 0, 0, 0, 1380, 0, 0, 2655, 0, 0,
	0, 0, 1400, 0, 0, 0, 0, 0, 0, 1397,
	0, 0, 0, 0, 0, 0, 1378, 1379, 0, 1411,
	1412, 1413, 1421, 1422, 1423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1414, 0, 0, 0, 0,
	0, 0, 1381, 0, 1417, 1427, 0, 1392, 1393, 1399,
	1398, 1394, 1420, 0, 1391, 1389, 1390, 1382, 1383, 1384,
	1385, 1387, 1388, 1403, 1404, 1405, 1406, 0, 1380, 0,
	0, 2376, 0, 1386, 0, 0, 1400, 0, 0, 0,
	0, 0, 0, 1397, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1418, 1428,
	0, 0, 1408, 1409, 1410, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1424, 1425, 0, 0, 0, 0, 0,
	0, 1395, 1396, 0, 0, 0, 0, 1403, 1404, 1405,
	1406, 0, 0, 0, 0, 0, 1416, 1386, 0, 0,
	0, 0, 0, 1401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1426, 0, 1418, 1428, 0, 0, 1408, 1409, 1410, 0,
	0, 0, 0, 1415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1424, 1425, 0,
	0, 0, 0, 0, 0, 1395, 1396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1416, 0, 0, 1407, 0, 0, 0, 1401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1402, 0, 0, 1426, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 0, 0,
	0, 0, 0, 0, 0, 0, 1419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1402, 0, 0, 0, 1378,
	1379, 0, 1411, 1412, 1413, 1421, 1422, 1423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1414, 0,
	1419, 0, 0, 0, 0, 1381, 0, 1417, 1427, 0,
	1392, 1393, 1399, 1398, 1394, 1420, 0, 1391, 1389, 1390,
	1382, 1383, 1384, 1385, 1387, 1388, 0, 0, 0, 0,
	0, 1380, 0, 0, 2375, 0, 0, 0, 0, 1400,
	0, 0, 0, 0, 0, 0, 1397, 0, 0, 0,
	0, 0, 0, 1378, 1379, 0, 1411, 1412, 1413, 1421,
	1422, 1423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1414, 0, 0, 0, 0, 0, 0, 1381,
	0, 1417, 1427, 0, 1392, 1393, 1399, 1398, 1394, 1420,
	0, 1391, 1389, 1390, 1382, 1383, 1384, 1385, 1387, 1388,
	1403, 1404, 1405, 1406, 0, 1380, 0, 0, 2372, 0,
	1386, 0, 0, 1400, 0, 0, 0, 0, 0, 0,
	1397, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1418, 1428, 0, 0, 1408,
	1409, 1410, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1424, 1425, 0, 0, 0, 0, 0, 0, 1395, 1396,
	0, 0, 0, 0, 1403, 1404, 1405, 1406, 0, 0,
	0, 0, 0, 1416, 1386, 0, 0, 0, 0, 0,
	1401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1426, 0, 1418,
	1428, 0, 0, 1408, 1409, 1410, 0, 0, 0, 0,
	1415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1424, 1425, 0, 0, 0, 0,
	0, 0, 1395, 1396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1416, 0, 0,
	1407, 0, 0, 0, 1401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1402, 0,
	0, 1426, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1415, 0, 0, 0, 0, 0,
	0, 0, 0, 1419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1402, 0, 0, 0, 1378, 1379, 0, 1411,
	1412, 1413, 1421, 1422, 1423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1414, 0, 1419, 0, 0,
	0, 0, 1381, 0, 1417, 1427, 0, 1392, 1393, 1399,
	1398, 1394, 1420, 0, 1391, 1389, 1390, 1382, 1383, 1384,
	1385, 1387, 1388, 0, 0, 0, 0, 0, 1380, 0,
	0, 2371, 0, 0, 0, 0, 1400, 0, 0, 0,
	0, 0, 0, 1397, 0, 0, 0, 0, 0, 0,
	1378, 1379, 0, 1411, 1412, 1413, 1421, 1422, 1423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1414,
	0, 0, 0, 0, 0, 0, 1381, 0, 1417, 1427,
	0, 1392, 1393, 1399, 1398, 1394, 1420, 0, 1391, 1389,
	1390, 1382, 1383, 1384, 1385, 1387, 1388, 1403, 1404, 1405,
	1406, 0, 1380, 0, 0, 2370, 0, 1386, 0, 0,
	1400, 0, 0, 0, 0, 0, 0, 1397, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1418, 1428, 0, 0, 1408, 1409, 1410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1424, 1425, 0,
	0, 0, 0, 0, 0, 1395, 1396, 0, 0, 0,
	0, 1403, 1404, 1405, 1406, 0, 0, 0, 0, 0,
	1416, 1386, 0, 0, 0, 0, 0, 1401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1426, 0, 1418, 1428, 0, 0,
	1408, 1409, 1410, 0, 0, 0, 0, 1415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1424, 1425, 0, 0, 0, 0, 0, 0, 1395,
	1396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 0, 0, 1407, 0, 0,
	0, 1401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1402, 0, 0, 1426, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	1419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1402,
	0, 0, 0, 1378, 1379, 0, 1411, 1412, 1413, 1421,
	1422, 1423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1414, 0, 1419, 0, 0, 0, 0, 1381,
	0, 1417, 1427, 0, 1392, 1393, 1399, 1398, 1394, 1420,
	0, 1391, 1389, 1390, 1382, 1383, 1384, 1385, 1387, 1388,
	0, 0, 0, 0, 0, 1380, 0, 0, 1957, 0,
	0, 0, 0, 1400, 0, 0, 0, 0, 0, 0,
	1397, 0, 0, 0, 0, 0, 0, 1378, 1379, 0,
	1411, 1412, 1413, 1421, 1422, 1423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1414, 0, 0, 0,
	0, 0, 0, 1381, 0, 1417, 1427, 0, 1392, 1393,
	1399, 1398, 1394, 1420, 0, 1391, 1389, 1390, 1382, 1383,
	1384, 1385, 1387, 1388, 1403, 1404, 1405, 1406, 3178, 1380,
	0, 0, 0, 0, 1386, 0, 0, 1400, 0, 0,
	0, 0, 0, 0, 1397, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	1428, 0, 0, 1408, 1409, 1410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1424, 1425, 0, 0, 0, 0,
	0, 0, 1395, 1396, 0, 0, 0, 0, 1403, 1404,
	1405, 1406, 0, 0, 0, 0, 0, 1416, 1386, 0,
	0, 0, 0, 0, 1401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1426, 0, 1418, 1428, 0, 0, 1408, 1409, 1410,
	0, 0, 0, 0, 1415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1424, 1425,
	0, 0, 0, 0, 0, 0, 1395, 1396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1416, 0, 0, 1407, 0, 0, 0, 1401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1402, 0, 0, 1426, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1415, 0,
	0, 0, 0, 0, 0, 0, 0, 1419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1402, 0, 0, 0,
	1378, 1379, 0, 1411, 1412, 1413, 1421, 1422, 1423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1414,
	0, 1419, 0, 0, 0, 0, 1381, 0, 1417, 1427,
	0, 1392, 1393, 1399, 1398, 1394, 1420, 0, 1391, 1389,
	1390, 1382, 1383, 1384, 1385, 1387, 1388, 0, 0, 0,
	0, 3174, 1380, 0, 0, 0, 0, 0, 0, 0,
	1400, 0, 0, 0, 0, 0, 0, 1397, 0, 0,
	0, 0, 0, 0, 1378, 1379, 0, 1411, 1412, 1413,
	1421, 1422, 1423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1414, 0, 0, 0, 0, 0, 0,
	1381, 0, 1417, 1427, 0, 1392, 1393, 1399, 1398, 1394,
	1420, 0, 1391, 1389, 1390, 1382, 1383, 1384, 1385, 1387,
	1388, 1403, 1404, 1405, 1406, 3115, 1380, 0, 0, 0,
	0, 1386, 0, 0, 1400, 0, 0, 0, 0, 0,
	0, 1397, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1418, 1428, 0, 0,
	1408, 1409, 1410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1424, 1425, 0, 0, 0, 0, 0, 0, 1395,
	1396, 0, 0, 0, 0, 1403, 1404, 1405, 1406, 0,
	0, 0, 0, 0, 1416, 1386, 0, 0, 0, 0,
	0, 1401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1426, 0,
	1418, 1428, 0, 0, 1408, 1409, 1410, 0, 0, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1424, 1425, 0, 0, 0,
	0, 0, 0, 1395, 1396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1416, 0,
	0, 1407, 0, 0, 0, 1401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1402,
	0, 0, 1426, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 1419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1407, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1402, 0, 0, 0, 1378, 1379, 0,
	1411, 1412, 1413, 1421, 1422, 1423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1414, 0, 1419, 0,
	0, 0, 0, 1381, 0, 1417, 1427, 0, 1392, 1393,
	1399, 1398, 1394, 1420, 0, 1391, 1389, 1390, 1382, 1383,
	1384, 1385, 1387, 1388, 0, 0, 0, 0, 3114, 1380,
	0, 0, 0, 0, 0, 0, 0, 1400, 0, 0,
	0, 0, 0, 0, 1397, 0, 0, 0, 0, 0,
	0, 1378, 1379, 0, 1411, 1412, 1413, 1421, 1422, 1423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1414, 0, 0, 0, 0, 0, 0, 1381, 0, 1417,
	1427, 0, 1392, 1393, 1399, 1398, 1394, 1420, 0, 1391,
	1389, 1390, 1382, 1383, 1384, 1385, 1387, 1388, 1403, 1404,
	1405, 1406, 3028, 1380, 0, 0, 0, 0, 1386, 0,
	0, 1400, 0, 0, 0, 0, 0, 0, 1397, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1418, 1428, 0, 0, 1408, 1409, 1410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1424, 1425,
	0, 0, 0, 0, 0, 0, 1395, 1396, 0, 0,
	0, 0, 1403, 1404, 1405, 1406, 0, 0, 0, 0,
	0, 1416, 1386, 0, 0, 0, 0, 0, 1401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1426, 0, 1418, 1428, 0,
	0, 1408, 1409, 1410, 0, 0, 0, 0, 1415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1424, 1425, 0, 0, 0, 0, 0, 0,
	1395, 1396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1416, 0, 0, 1407, 0,
	0, 0, 1401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1402, 0, 0, 1426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 0, 0, 0, 0, 0, 0, 0,
	0, 1419, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1402, 0, 0, 0, 1378, 1379, 0, 1411, 1412, 1413,
	1421, 1422, 1423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1414, 0, 1419, 0, 0, 0, 0,
	1381, 0, 1417, 1427, 0, 1392, 1393, 1399, 1398, 1394,
	1420, 0, 1391, 1389, 1390, 1382, 1383, 1384, 1385, 1387,
	1388, 0, 0, 0, 0, 2948, 1380, 0, 0, 0,
	0, 0, 0, 0, 1400, 0, 0, 0, 0, 0,
	0, 1397, 0, 0, 0, 0, 0, 0, 1378, 1379,
	0, 1411, 1412, 1413, 1421, 1422, 1423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1414, 0, 0,
	0, 0, 0, 0, 1381, 0, 1417, 1427, 0, 1392,
	1393, 1399, 1398, 1394, 1420, 0, 1391, 1389, 1390, 1382,
	1383, 1384, 1385, 1387, 1388, 1403, 1404, 1405, 1406, 2904,
	1380, 0, 0, 0, 0, 1386, 0, 0, 1400, 0,
	0, 0, 0, 0, 0, 1397, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1418, 1428, 0, 0, 1408, 1409, 1410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1424, 1425, 0, 0, 0,
	0, 0, 0, 1395, 1396, 0, 0, 0, 0, 1403,
	1404, 1405, 1406, 0, 0, 0, 0, 0, 1416, 1386,
	0, 0, 0, 0, 0, 1401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1426, 0, 1418, 1428, 0, 0, 1408, 1409,
	1410, 0, 0, 0, 0, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1424,
	1425, 0, 0, 0, 0, 0, 0, 1395, 1396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1416, 0, 0, 1407, 0, 0, 0, 1401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1402, 0, 0, 1426, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1415,
	0, 0, 0, 0, 0, 0, 0, 0, 1419, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1402, 0, 0,
	0, 1378, 1379, 0, 1411, 1412, 1413, 1421, 1422, 1423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1414, 0, 1419, 0, 0, 0, 0, 1381, 0, 1417,
	1427, 0, 1392, 1393, 1399, 1398, 1394, 1420, 0, 1391,
	1389, 1390, 1382, 1383, 1384, 1385, 1387, 1388, 0, 0,
	0, 0, 2903, 1380, 0, 0, 0, 0, 0, 0,
	0, 1400, 0, 0, 0, 0, 0, 0, 1397, 0,
	0, 0, 0, 0, 0, 1378, 1379, 0, 1411, 1412,
	1413, 1421, 1422, 1423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1414, 0, 0, 0, 0, 0,
	0, 1381, 0, 1417, 1427, 0, 1392, 1393, 1399, 1398,
	1394, 1420, 0, 1391, 1389, 1390, 1382, 1383, 1384, 1385,
	1387, 1388, 1403, 1404, 1405, 1406, 2902, 1380, 0, 0,
	0, 0, 1386, 0, 0, 1400, 0, 0, 0, 0,
	0, 0, 1397, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1418, 1428, 0,
	0, 1408, 1409, 1410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1424, 1425, 0, 0, 0, 0, 0, 0,
	1395, 1396, 0, 0, 0, 0, 1403, 1404, 1405, 1406,
	0, 0, 0, 0, 0, 1416, 1386, 0, 0, 0,
	0, 0, 1401, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1426,
	0, 1418, 1428, 0, 0, 1408, 1409, 1410, 0, 0,
	0, 0, 1415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1424, 1425, 0, 0,
	0, 0, 0, 0, 1395, 1396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1416,
	0, 0, 1407, 0, 0, 0, 1401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1402, 0, 0, 1426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1415, 0, 0, 0,
	0, 0, 0, 0, 0, 1419, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1402, 0, 0, 0, 1378, 1379,
	0, 1411, 1412, 1413, 1421, 1422, 1423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1414, 0, 1419,
	0, 0, 0, 0, 1381, 0, 1417, 1427, 0, 1392,
	1393, 1399, 1398, 1394, 1420, 0, 1391, 1389, 1390, 1382,
	1383, 1384, 1385, 1387, 1388, 0, 0, 0, 0, 2868,
	1380, 0, 0, 0, 0, 0, 0, 0, 1400, 0,
	0, 0, 0, 0, 0, 1397, 0, 0, 0, 0,
	0, 0, 1378, 1379, 0, 1411, 1412, 1413, 1421, 1422,
	1423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1414, 0, 0, 0, 0, 0, 0, 1381, 0,
	1417, 1427, 0, 1392, 1393, 1399, 1398, 1394, 1420, 0,
	1391, 1389, 1390, 1382, 1383, 1384, 1385, 1387, 1388, 1403,
	1404, 1405, 1406, 2688, 1380, 0, 0, 0, 0, 1386,
	0, 0, 1400, 0, 0, 0, 0, 0, 0, 1397,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1418, 1428, 0, 0, 1408, 1409,
	1410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1424,
	1425, 0, 0, 0, 0, 0, 0, 1395, 1396, 0,
	0, 0, 0, 1403, 1404, 1405, 1406, 0, 0, 0,
	0, 0, 1416, 1386, 3258, 0, 0, 0, 0, 1401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1426, 0, 1418, 1428,
	0, 0, 1408, 1409, 1410, 0, 0, 0, 0, 1415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1424, 1425, 0, 0, 0, 0, 0,
	0, 1395, 1396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1416, 0, 0, 1407,
	0, 0, 0, 1401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1402, 0, 0,
	1426, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1415, 0, 0, 0, 0, 0, 0,
	0, 0, 1419, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1402, 0, 0, 0, 1378, 1379, 0, 1411, 1412,
	1413, 1421, 1422, 1423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1414, 0, 1419, 0, 0, 2300,
	0, 1381, 0, 1417, 1427, 0, 1392, 1393, 1399, 1398,
	1394, 1420, 0, 1391, 1389, 1390, 1382, 1383, 1384, 1385,
	1387, 1388, 0, 0, 2329, 0, 0, 1380, 0, 0,
	0, 0, 0, 0, 0, 1400, 0, 0, 0, 0,
	0, 0, 1397, 0, 0, 0, 0, 0, 0, 1378,
	1379, 0, 1411, 1412, 1413, 1421, 1422, 1423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1414, 2301,
	0, 0, 0, 0, 0, 1381, 0, 1417, 1427, 0,
	1392, 1393, 1399, 1398, 1394, 1420, 0, 1391, 1389, 1390,
	1382, 1383, 1384, 1385, 1387, 1388, 1403, 1404, 1405, 1406,
	0, 1380, 0, 0, 0, 0, 1386, 0, 0, 1400,
	0, 0, 0, 0, 0, 0, 1397, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1418, 1428, 0, 0, 1408, 1409, 1410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1424, 1425, 0, 0,
	0, 0, 0, 0, 1395, 1396, 0, 0, 0, 0,
	1403, 1404, 1405, 1406, 0, 0, 0, 0, 0, 1416,
	1386, 0, 2417, 0, 0, 2416, 1401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1426, 0, 1418, 1428, 0, 0, 1408,
	1409, 1410, 0, 0, 0, 0, 1415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1424, 1425, 0, 0, 0, 0, 0, 0, 1395, 1396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1416, 0, 0, 1407, 0, 0, 0,
	1401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1402, 0, 0, 1426, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1415, 0, 0, 0, 0, 0, 0, 0, 0, 1419,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1407, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2045, 0, 1402, 0,
	0, 0, 1378, 1379, 0, 1411, 1412, 1413, 1421, 1422,
	1423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1414, 0, 1419, 0, 2044, 0, 0, 1381, 0,
	1417, 1427, 0, 1392, 1393, 1399, 1398, 1394, 1420, 0,
	1391, 1389, 1390, 1382, 1383, 1384, 1385, 1387, 1388, 0,
	0, 0, 0, 0, 1380, 0, 0, 0, 0, 0,
	0, 0, 1400, 0, 0, 0, 0, 0, 0, 1397,
	0, 0, 0, 0, 0, 0, 1378, 1379, 0, 1411,
	1412, 1413, 1421, 1422, 1423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1414, 0, 0, 0, 0,
	0, 0, 1381, 0, 1417, 1427, 0, 1392, 1393, 1399,
	1398, 1394, 1420, 0, 1391, 1389, 1390, 1382, 1383, 1384,
	1385, 1387, 1388, 1403, 1404, 1405, 1406, 0, 1380, 0,
	0, 0, 0, 1386, 0, 0, 1400, 0, 0, 0,
	0, 0, 0, 1397, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1418, 1428,
	0, 0, 1408, 1409, 1410, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1424, 1425, 0, 0, 0, 0, 0,
	0, 1395, 1396, 0, 0, 0, 0, 1403, 1404, 1405,
	1406, 0, 0, 0, 0, 0, 1416, 1386, 0, 0,
	0, 0, 0, 1401, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1426, 0, 1418, 1428, 0, 0, 1408, 1409, 1410, 0,
	0, 0, 0, 1415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1424, 1425, 0,
	0, 0, 0, 0, 0, 1395, 1396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1416, 0, 0, 1407, 0, 0, 0, 1401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1402, 0, 0, 1426, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 780, 0,
	0, 0, 0, 0, 0, 0, 1419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1407, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1402, 0, 0, 0, 1378,
	1379, 0, 1411, 1412, 1413, 1421, 1422, 1423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1414, 0,
	1419, 0, 0, 0, 0, 1381, 0, 1417, 1427, 0,
	1392, 1393, 1399, 1398, 1394, 1420, 0, 1391, 1389, 1390,
	1382, 1383, 1384, 1385, 1387, 1388, 0, 0, 0, 0,
	0, 1380, 0, 0, 0, 0, 0, 0, 0, 1400,
	0, 0, 0, 0, 0, 0, 1397, 0, 0, 0,
	0, 0, 0, 1378, 1379, 0, 1411, 1412, 1413, 1421,
	1422, 1423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1414, 0, 0, 0, 0, 0, 0, 1381,
	0, 1417, 1427, 0, 1392, 1393, 1399, 1398, 1394, 1420,
	0, 1391, 1389, 1390, 1382, 1383, 1384, 1385, 1387, 1388,
	1403, 1404, 1405, 1406, 0, 1380, 0, 0, 0, 0,
	1386, 0, 0, 1400, 0, 0, 0, 0, 0, 0,
	1397, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1418, 1428, 0, 0, 1408,
	1409, 1410, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1424, 1425, 0, 0, 0, 0, 0, 0, 1395, 1396,
	0, 0, 0, 0, 1403, 1404, 1405, 1406, 0, 0,
	0, 0, 0, 1416, 1386, 0, 0, 0, 0, 2423,
	1401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1426, 0, 1418,
	1428, 0, 0, 1408, 1409, 1410, 0, 0, 0, 0,
	1415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1424, 1425, 0, 0, 0, 0,
	0, 0, 1395, 1396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1416, 0, 0,
	1407, 0, 0, 0, 1401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1402, 0,
	0, 1426, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1415, 0, 0, 0, 0, 0,
	0, 0, 0, 1419, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1407, 2678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1402, 0, 0, 0, 1378, 1379, 0, 1411,
	1412, 1413, 1421, 1422, 1423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1414, 0, 1419, 0, 2418,
	0, 0, 1381, 0, 1417, 1427, 0, 1392, 1393, 1399,
	1398, 1394, 1420, 0, 1391, 1389, 1390, 1382, 1383, 1384,
	1385, 1387, 1388, 0, 0, 0, 0, 0, 1380, 0,
	0, 0, 0, 0, 0, 0, 1400, 0, 0, 0,
	0, 0, 0, 1397, 0, 0, 0, 0, 0, 0,
	1378, 1379, 0, 1411, 1412, 1413, 1421, 1422, 1423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1414,
	0, 0, 0, 0, 0, 0, 1381, 0, 1417, 1427,
	0, 1392, 1393, 1399, 1398, 1394, 1420, 0, 1391, 1389,
	1390, 1382, 1383, 1384, 1385, 1387, 1388, 1403, 1404, 1405,
	1406, 0, 1380, 0, 0, 0, 0, 1386, 0, 0,
	1400, 0, 0, 0, 0, 0, 0, 1397, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1418, 1428, 0, 0, 1408, 1409, 1410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1424, 1425, 0,
	0, 0, 0, 0, 0, 1395, 1396, 0, 0, 0,
	0, 1403, 1404, 1405, 1406, 0, 0, 0, 0, 0,
	1416, 1386, 0, 0, 0, 0, 0, 1401, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1426, 0, 1418, 1428, 0, 0,
	1408, 1409, 1410, 0, 0, 0, 0, 1415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1424, 1425, 0, 0, 0, 0, 0, 0, 1395,
	1396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 0, 0, 1407, 0, 0,
	0, 1401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1402, 0, 0, 1426, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	1419, 0, 0, 0, 0, 0, 0, 2385, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1402,
	0, 0, 0, 1378, 1379, 0, 1411, 1412, 1413, 1421,
	1422, 1423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1414, 0, 1419, 0, 2369, 0, 0, 1381,
	0, 1417, 1427, 0, 1392, 1393, 1399, 1398, 1394, 1420,
	0, 1391, 1389, 1390, 1382, 1383, 1384, 1385, 1387, 1388,
	0, 0, 0, 0, 0, 1380, 0, 0, 0, 0,
	0, 0, 0, 1400, 0, 0, 0, 0, 0, 0,
	1397, 0, 0, 0, 0, 0, 0, 1378, 1379, 0,
	1411, 1412, 1413, 1421, 1422, 1423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1414, 0, 0, 0,
	0, 0, 0, 1381, 0, 1417, 1427, 0, 1392, 1393,
	1399, 1398, 1394, 1420, 0, 1391, 1389, 1390, 1382, 1383,
	1384, 1385, 1387, 1388, 1403, 1404, 1405, 1406, 0, 1380,
	0, 0, 0, 0, 1386, 0, 0, 1400, 0, 0,
	0, 0, 0, 0, 1397, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	1428, 0, 0, 1408, 1409, 1410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1424, 1425, 0, 0, 0, 0,
	0, 0, 1395, 1396, 0, 0, 0, 0, 1403, 1404,
	1405, 1406, 0, 0, 0, 0, 0, 1416, 1386, 0,
	0, 0, 0, 0, 1401, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1426, 0, 1418, 1428, 0, 0, 1408, 1409, 1410,
	0, 0, 0, 0, 1415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1424, 1425,
	0, 0, 0, 0, 0, 0, 1395, 1396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1416, 0, 0, 1407, 0, 0, 0, 1401, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1402, 0, 0, 1426, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1415, 0,
	0, 0, 0, 0, 0, 0, 0, 1419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1402, 0, 0, 0,
	1378, 1379, 0, 1411, 1412, 1413, 1421, 1422, 1423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1414,
	0, 1419, 0, 0, 0, 0, 1381, 0, 1417, 1427,
	0, 1392, 1393, 1399, 1398, 1394, 1420, 0, 1391, 1389,
	1390, 1382, 1383, 1384, 1385, 1387, 1388, 0, 0, 0,
	0, 0, 1380, 0, 0, 0, 0, 0, 0, 0,
	1400, 0, 0, 0, 0, 0, 0, 1397, 0, 0,
	0, 0, 0, 0, 1378, 1379, 0, 1411, 1412, 1413,
	1421, 1422, 1423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1381, 0, 1417, 1427, 0, 1392, 1393, 1399, 1398, 1394,
	1420, 0, 1391, 1389, 1390, 1382, 1383, 1384, 1385, 1387,
	1388, 1403, 1404, 1405, 1406, 0, 1380, 0, 0, 0,
	0, 1386, 0, 0, 1400, 0, 0, 0, 0, 0,
	0, 1397, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1418, 1428, 0, 0,
	1408, 1409, 1410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1424, 1425, 0, 0, 0, 0, 0, 0, 1395,
	1396, 0, 0, 0, 0, 1403, 1404, 1405, 1406, 0,
	0, 0, 0, 0, 1416, 1386, 0, 0, 0, 0,
	0, 1401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1426, 0,
	1418, 1428, 0, 0, 1408, 1409, 1410, 0, 0, 0,
	1378, 1379, 0, 1411, 1412, 1413, 1421, 1422, 1423, 0,
	0, 0, 0, 0, 0, 1424, 1425, 0, 0, 0,
	0, 0, 0, 1395, 1396, 0, 1381, 0, 0, 1427,
	0, 0, 0, 0, 0, 0, 0, 0, 1416, 0,
	0, 1407, 0, 0, 0, 1401, 0, 0, 0, 0,
	0, 0, 1380, 0, 0, 0, 0, 0, 0, 1402,
	1400, 0, 1426, 0, 0, 0, 0, 1397, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1407, 0, 0, 0, 0,
	0, 1403, 1404, 1405, 1406, 0, 0, 0, 0, 0,
	0, 1386, 0, 1402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1418, 1428, 1419, 0,
	1408, 1409, 1410, 0, 0, 1417, 0, 0, 1392, 1393,
	1399, 1398, 1394, 1420, 0, 1391, 1389, 1390, 1382, 1383,
	1384, 1385, 1387, 1388, 0, 0, 0, 0, 0, 1395,
	1396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 0, 0, 0, 0, 0,
	0, 1401, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1417,
	0, 0, 1392, 1393, 1399, 1398, 1394, 1420, 0, 1391,
	1389, 1390, 1382, 1383, 1384, 1385, 1387, 1388, 0, 0,
	0, 0, 0, 0, 1588, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1402,
	1599, 1582, 1589, 1572, 1609, 1608, 0, 0, 1574, 1573,
	690, 0, 721, 0, 0, 0, 1619, 1620, 0, 0,
	0, 0, 0, 0, 1419, 0, 0, 0, 0, 0,
	0, 0, 0, 697, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 695, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1610, 0, 1606, 1605,
	0, 0, 0, 0, 0, 0, 0, 0, 696, 1604,
	0, 0, 0, 698, 0, 0, 0, 726, 0, 0,
	0, 0, 0, 704, 705, 0, 0, 0, 0, 715,
	0, 0, 0, 0, 0, 0, 0, 0, 1603, 1601,
	1602, 0, 722, 699, 0, 1417, 0, 0, 1392, 1393,
	1399, 1398, 1394, 1420, 0, 1391, 1389, 1390, 1382, 1383,
	1384, 1385, 1387, 1388, 0, 0, 0, 0, 720, 1584,
	0, 636, 0, 0, 0, 0, 0, 0, 0, 0,
	1592, 1587, 1594, 1596, 1597, 1598, 1593, 0, 1591, 0,
	0, 0, 0, 619, 0, 0, 0, 1615, 1616, 700,
	0, 0, 0, 0, 0, 0, 694, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 701, 702, 620, 0, 0, 0, 0, 0, 1576,
	0, 0, 621, 0, 0, 0, 0, 0, 0, 0,
	0, 1607, 0, 708, 0, 1585, 1586, 622, 0, 0,
	703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 623, 723, 0,
	0, 578, 1600, 0, 0, 0, 1569, 1567, 1568, 1571,
	1570, 0, 0, 0, 624, 0, 0, 0, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 625, 0, 0, 626, 0, 0,
	0, 1577, 1578, 1580, 1581, 706, 0, 0, 0, 0,
	0, 0, 0, 580, 598, 0, 1595, 1579, 0, 0,
	0, 0, 640, 0, 0, 0, 0, 1618, 0, 0,
	0, 0, 717, 0, 581, 0, 0, 582, 0, 0,
	0, 0, 712, 0, 0, 1575, 0, 1611, 1612, 1613,
	1614, 0, 0, 604, 0, 692, 710, 724, 0, 583,
	0, 0, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 693, 0, 0, 0, 1583, 0, 0, 0, 0,
	1617, 713, 0, 0, 584, 711, 0, 0, 0, 727,
	728, 0, 0, 0, 0, 725, 0, 0, 0, 0,
	0, 0, 714, 0, 585, 0, 0, 586, 608, 628,
	0, 0, 611, 0, 0, 0, 0, 0, 0, 0,
	0, 716, 0, 0, 644, 629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 0, 0, 0, 0, 0, 638, 0,
	0, 0, 0, 0, 0, 631, 607, 0, 0, 0,
	0, 0, 589, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 632, 639, 0, 0, 0, 0,
	587, 0, 0, 0, 633, 0, 0, 0, 0, 590,
	0, 0, 0, 0, 0, 635, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 591, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 610, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 606, 0, 605,
	0, 0, 0, 0, 594, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 595, 0, 0, 0, 0,
	601, 0, 0, 0, 0, 612, 0, 609, 0, 0,
	0, 599,
}
var sqlPact = [...]int{

	5567, -1000, -36, -1000, -1000, -1000, -1000, -1000, 137, 136,
	135, 134, 133, 128, 119, 117, 116, -1000, -1000, -1000,
	115, -1000, -1000, 114, -1000, -1000, 102, 99, 93, -1000,
	92, 90, -1000, -1000, -1000, -1000, 87, 84, 83, 53470,
	1567, 53073, 40217, 1396, 2007, 37402, 52670, 36999, 52267, 51864,
	81, -1000, 51461, 80, 79, 78, -1000, -1000, 77, 1414,
	34611, 73, 63, 62, 1604, 59, 58, -1000, 57, -1000,
	64289, 1171, -1000, 55, 53, -1000, 64179, 208, 39814, 2107,
	51, 50, 34208, 2051, -1000, -1000, 1183, -1000, -1000, 47,
	46, 44, 43, 41, 39, 32, 30, 29, -1000, 28,
	27, 26, 25, 24, 22, 18, 17, 16, 15, 14,
	11, 7, 6, 5, 2, -1000, 64058, 1382, 1238, 1235,
	1234, 1220, 1211, 760, -2, -6, -7, -8, -9, -11,
	-1000, -1000, -15, -16, -17, -18, -1000, -20, -21, 126,
	-22, -23, -24, -25, -27, 2013, 1927, 1201, 716, 15357,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	57043, 53470, -29, -61, -32, -1000, 2312, 736, 26070, 5567,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 316,
	-1000, -1000, -1000, 215, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1388, 602, -1000, -1000,
	-1000, 51058, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	53470, -1000, 1531, 1, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 601, -1000, 1526, 231, 1448, -1000, -1000, -1000, -1000,
	-1000, 53470, -1000, -1000, 2602, 2601, 1494, 600, 50661, -1000,
	1687, -1000, 732, 15783, -1000, 943, -1000, 15783, 210, -1000,
	-1000, -1000, -1000, -1000, 39411, 11522, 39008, 38605, 32596, 50258,
	11109, 49855, 927, -1000, -1000, -1000, -1000, -1000, -40, 35802,
	53470, -1000, 198, -1000, -1000, -1000, -1000, -1000, -1000, 22314,
	663, 21874, 529, 21434, 492, -1000, -1000, -1000, -1000, 2600,
	2599, 835, 2598, 2258, 56646, 1260, 2597, 1216, 899, 787,
	2596, 2592, 2589, 2588, 2587, 2586, 1081, 49452, 1967, 32183,
	31770, 53470, 53470, 1822, 49049, -1000, -1000, 1025, 980, -1000,
	-1000, -1000, -1000, 2286, 2004, 2003, 48646, -1000, -1000, 2585,
	2584, 2583, 2581, 2580, 56249, 1259, 2579, 1761, 2571, 2570,
	2569, 2568, 2567, 2566, 2564, 2563, -1000, 48243, 47840, 47437,
	47034, 46631, 31357, 30944, -1000, -1000, -1000, 27680, 6247, 46228,
	28510, 53470, -1000, -1000, 22740, 72, -1000, -1000, -1000, 1922,
	-1000, 22740, 72, -1000, 1397, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1971, 1194, 2465, 30531, 1621, 1051, 2254, 2562,
	1706, 2246, 2224, 2197, 2171, 2101, 2560, 1239, 2556, 1109,
	2555, 2044, 2041, 2476, 1453, 38202, 2554, 2552, 2311, 2029,
	1916, -1000, -1000, -1000, -1000, 1108, -1000, -1000, -1000, 41809,
	-1000, -1000, 1451, -1000, -1000, 1451, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 919, 55455, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1314, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2104,
	-1000, 1418, -1000, -1000, 2551, 1927, 1726, 2299, 2299, 2299,
	2367, 306, 299, -1000, 126, -1000, -1000, 63197, -1000, -1000,
	22740, 22740, 22740, 22740, 22740, 1417, -1000, -1000, -1000, 599,
	645, -1000, 598, 496, -1000, -1000, -1000, -1000, -1000, 596,
	2482, -1000, 738, -1000, -1000, -1000, -1000, 2444, -1000, 13638,
	-1000, -1000, -1000, 374, 592, 22740, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 197, 742, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 483, 1312,
	481, 481, 481, -1000, -1000, 773, -1000, -1000, 740, -1000,
	713, -1000, -1000, -1000, 1963, 579, 578, -1000, 577, 576,
	568, -1000, -1000, -1000, 565, 563, 562, 561, 560, 554,
	551, 543, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	776, -1000, -1000, -1000, 536, 535, 534, 522, 521, 515,
	511, 502, 501, -42, 53470, -1000, 316, -42, -1000, -1000,
	499, -1000, 16635, 16635, 16635, -1000, -1000, 1518, 22740, -1000,
	2699, -1000, 3478, -240, 692, 26874, -1000, 25264, 692, 624,
	30113, -1000, 1912, -1000, -1000, 497, 190, -1000, -1000, -1000,
	-1000, -1000, 1911, 53470, 11933, 53470, 53470, -1000, -1000, 22740,
	-1000, -1000, 33007, 35405, 53470, 37799, 2411, 64010, 35405, 53470,
	1955, -1000, -1000, -1000, 53470, -1000, 22740, -1000, 2409, 1634,
	-48, -1000, -1000, -1000, -1000, -1000, 1735, 1765, 873, 1481,
	-1000, 15783, 2249, -1000, -1000, -1000, 189, 11933, -1000, 1625,
	2204, 1111, -1000, 1605, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1261, 2196, -1000, 1386, 2195, 1253, -1000, -1000,
	752, 2193, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1553, -1000, -1000, 2287, -1000, -1000, 1627, 2192, -87,
	33007, 35802, -44, -1000, -1000, -53, -1000, 10696, 63197, -1000,
	-1000, -1000, 63197, 637, -1000, -1000, 2190, -1000, 63197, 631,
	-1000, -1000, 2189, -1000, -1000, -1000, 2550, -1000, 2549, 1678,
	2548, 2547, 2546, -1000, 1247, 1304, 2545, -1000, 2544, -1000,
	-1000, -1000, -1000, -1000, -1000, 45825, 45422, 786, -1000, 1516,
	-1000, -1000, 45019, 744, 1677, -1000, -1000, 1676, -1000, 707,
	-1000, 2543, 44622, 1837, 744, 1669, -1000, -1000, -1000, -1000,
	-1000, 53470, -1000, 53470, -1000, 53470, -1000, 1133, -1000, 55852,
	-240, -1000, -1000, -1000, -1000, -1000, 2182, 2542, 2541, 2540,
	-1000, 53470, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	154, 2179, -1000, -1000, 154, 2135, -1000, 154, 2133, -1000,
	152, 2117, -1000, -1000, 1565, 2115, -1000, -57, 2103, -1000,
	-1000, -57, 2100, -1000, -64, -1000, -1000, -1000, 736, -1000,
	27277, 44219, 33007, 739, 510, 63197, -1000, 33007, 63197, -1000,
	-1000, 43816, 43413, -1000, -1000, 1033, 1769, -1000, -1000, -1000,
	-1000, 33007, 33007, -1000, 43010, -1000, -1000, -1000, 1413, 2295,
	53470, -1000, -1000, 1954, -1000, 35008, 53470, -1000, 53470, -1000,
	53470, -1000, 53470, -1000, 53470, -1000, -1000, -1000, -1000, -1000,
	2094, 1241, 1227, -1000, 53470, -1000, 53470, -1000, -1000, -1000,
	1724, -1000, -1000, -1000, -1000, 53470, -1000, -1000, -1000, -1000,
	-1000, -1000, 1952, -1000, 1176, -1000, 1024, -1000, -1000, 155,
	-1000, -1000, -48, -1000, 55455, -1000, -1000, 1927, 1726, -1000,
	53470, -1000, -1000, -1000, 1927, 1586, 1810, 20994, 1787, 22740,
	126, -1000, -1000, 126, 126, 14917, -1000, -1000, 64010, 64010,
	11933, 959, 22740, 22740, 22740, 22740, 22740, 22740, 22740, 22740,
	22740, 22740, 22740, 22740, 22740, 22740, 22740, 22740, 22740, 22740,
	22740, 22740, 22740, 22740, 22740, 22740, 22740, 22740, 22740, 22740,
	22740, 22740, 22740, 22740, 22740, 22740, 22740, 1780, 22740, 918,
	22740, 22740, 22740, 22740, 1790, -1000, -1000, 1369, 377, 1462,
	-1000, 2448, 2448, 2448, 63574, 63574, 435, 2539, 645, -1000,
	22740, -1000, 72, 22740, 12346, -1000, 2469, 1094, -1000, -1000,
	299, 6430, 1616, -1000, 298, 12786, -1000, -1000, -1000, 13638,
	496, 20554, 22740, 767, 63197, 10285, 1975, 1875, -1000, 2468,
	-1000, -1000, 2444, -1000, -1000, -1000, -1000, 957, 952, 951,
	937, 495, 644, 629, 625, 619, 618, 22740, 22740, 22740,
	22740, 22740, 22740, 22740, 22740, -1000, 20128, 19688, 19248, 18808,
	18368, 24018, 17928, 22740, 14064, 53470, -42, 2408, 22740, 184,
	-1000, 61992, -1000, 184, 184, 494, -72, 63197, 1792, 1788,
	26472, 1791, 1429, 1429, 1429, -1000, 490, 623, 692, 7800,
	40614, 1435, 692, 692, 172, 177, 295, 24862, 2699, 40614,
	-1000, -1000, 53470, 489, 12346, 11933, 1060, -73, 173, 1801,
	1795, 172, -1000, -75, 739, 917, -71, -1000, 3865, -89,
	-1000, 804, -1000, -1000, -1000, -1000, 580, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 773,
	484, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 483, 1312, 481, 481, 481, -1000, -1000,
	-1000, 740, -1000, 713, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1910, -53, 37799, 720, -90, 850, -48, -1000, 1451,
	-1000, 1357, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2478, -1000, 2458, -1000, -1000,
	2467, -43, -1000, -1000, 11933, -1000, -49, 1222, -1000, 36596,
	2324, 2320, 2270, 1120, -1000, 1064, 2359, 41809, 2387, 604,
	-1000, 1904, -1000, -1000, 725, 1000, 913, 41809, 1386, -1000,
	64010, -1000, 1842, 2355, 1097, 1121, 1097, 1097, 1091, -1000,
	41809, 909, 1365, 33007, -1000, 906, -1000, -50, 2383, 593,
	-1000, 1903, 905, -1000, -1000, 53470, 11933, 690, -44, 35802,
	53470, 167, -1000, 22740, 72, 22740, 72, -1000, -1000, 2091,
	-1000, -1000, -1000, 2537, 1292, 1758, -1000, -1000, -1000, 480,
	1657, 1386, 1653, -1000, -1000, 42613, 53470, 1809, -46, 53470,
	-1000, -1000, 1363, -1000, 2087, 2042, 509, 2530, -1000, 1514,
	1650, -1000, -1000, -1000, 55058, 971, 2039, 763, 588, 2407,
	588, 29309, -1000, 53470, -1000, 53470, -1000, -1000, -1000, 2525,
	-1000, 53470, -1000, -1000, 53470, -1000, 53470, -1000, 53470, -1000,
	53470, 53470, -1000, 53470, 33007, 33007, 33007, 3865, 33805, -92,
	294, -1000, 42210, 53470, 813, 36199, -203, 690, -1000, 690,
	-1000, 53470, 1949, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 53470, -1000, 53470, -1000, -1000, -1000, -1000, -1000,
	-1000, 1166, -1000, 1944, -1000, 1929, -1000, 165, -1000, -1000,
	-1000, 1545, 53470, 53470, 53470, -1000, 41809, -1000, -1000, 1927,
	-1000, -1000, -1000, -1000, -1000, 63197, -1000, 405, -1000, -1000,
	63197, 1231, 1812, -1000, 1812, -45, -1000, 61615, 1778, 53470,
	-1000, -1000, -1000, -1000, -1000, 722, 1037, 1037, 1050, 1050,
	1050, 1050, 2417, 1945, 946, 1651, 4450, 4450, 4450, 4450,
	4450, 4450, 4450, 4450, 3262, 399, 399, 3262, 3262, 3262,
	3262, 3262, 399, 399, 399, 4450, 4450, 4450, 63574, 63500,
	6001, 22740, 22740, 896, 1368, 377, 5758, 22740, 6888, 6888,
	6888, 6888, -1000, 1356, -1000, -1000, -1000, -1000, 1898, 479,
	24018, 24018, -1000, -1000, -1000, -1000, 13212, 22740, -1000, -1000,
	-1000, -1000, 17488, -1000, -1000, 61238, -246, 293, -169, -12,
	-1000, 22740, 22740, 22740, 290, -1000, 289, -1000, -1000, 894,
	-1000, 892, 885, 883, -1000, 478, 153, 22740, 53470, -1000,
	58976, 622, -91, -1000, -95, 1066, -1000, 22740, 150, -1000,
	1419, 475, 472, 288, -98, 712, 711, 708, 699, 22740,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	63123, 58673, 58599, 58296, 3689, 58222, 57919, -100, 287, -1000,
	1895, -169, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 282,
	-1000, -103, -1000, -106, -1000, 281, -1000, 62820, -169, 279,
	1013, -1000, 24018, 24018, 24018, -1000, 275, -1000, 61689, -1000,
	62746, 17062, 17062, 17062, 268, 62443, 22740, -169, -1000, 470,
	-109, 763, 16635, 25667, 11933, -1000, 763, 763, 22740, -1000,
	22740, 26472, 26472, 1648, 1784, 26472, -1000, -1000, -1000, -1000,
	40614, 505, 692, 40614, -1000, 2444, 1759, -1000, -1000, -1000,
	53470, 316, -1000, 40614, 40614, 11933, 692, -1000, 266, 28912,
	-12, 149, -1000, -1000, 11933, 1852, 1852, -1000, 1894, 53470,
	2422, -1000, -1000, 64010, -1000, 641, 774, -1000, 2466, 468,
	2444, 53470, 180, 15783, -1000, 1451, -1000, -1000, 1151, -1000,
	1296, -1000, -1000, -1000, -1000, 15783, -1000, 1159, 53470, 53470,
	53470, -1000, -1000, 1641, 54661, 1638, 64010, 53470, -1000, -1000,
	467, 466, 1773, 1770, 53470, 53470, 54264, 53867, 53470, 1360,
	22740, 1467, 1468, 72, -1000, 72, 465, 1015, 53470, 53470,
	1250, -1000, -1000, -1000, -1000, -1000, 53470, -1000, -1000, 2463,
	-1000, 1097, -1000, -1000, -1000, 1097, 1386, 1213, 53470, 33007,
	751, 53470, 1377, 72, -1000, 72, 464, 11933, 1310, -1000,
	1854, -1000, 1601, -1000, -1000, 9874, 63197, -1000, 63197, -1000,
	53470, -1000, 781, 53470, 36199, 2403, 2036, -1000, 1386, 2034,
	316, -1000, -1000, 95, 739, 33007, 53470, -46, 33007, 33007,
	33007, 2523, 462, 2522, -1000, 53470, 2031, 1505, 1633, 2018,
	673, 53470, 1438, 22740, 1321, -1000, 7356, 795, 53470, 1203,
	86, -1000, -1000, -1000, -13, 53470, -1000, 2520, -1000, -1000,
	154, 154, 154, -1000, 152, 1565, -1000, -57, -57, -1000,
	-1000, 3865, 739, -47, 459, -1000, 686, 683, 28098, 33007,
	-114, -1000, -1000, -1000, -1000, -1000, 53470, 530, 1835, 53470,
	-1000, 739, -1000, 747, -1000, 992, -53, -53, -1000, 1154,
	1145, 53470, 11933, 53470, 53470, 11933, 53470, -1000, -1000, -1000,
	-1000, -1000, 1231, -1000, 22740, -1000, -1000, -1000, 14917, -1000,
	-1000, -1000, 53470, -210, 22740, 22740, 5331, 5105, 22740, 24018,
	24018, -1000, 22740, 3608, -1000, -1000, -1000, -1000, -1000, 1893,
	458, 22740, 64010, 6693, 4979, -1000, 263, 57845, 3262, -1000,
	22740, -1000, 262, 16209, -1000, 62066, -41, -41, -1000, 2477,
	1660, 1500, 1311, 1180, 2462, 9463, -169, -117, -1000, -1000,
	451, -1000, 2033, -1000, 22740, 62369, 9052, -1000, 29711, 764,
	1438, -1000, -1000, 2444, -1000, -1000, -1000, -1000, 60935, 64010,
	64010, 22740, 22740, -1000, 22740, 22740, 22740, -1000, -1000, 22740,
	-1000, -1000, -1000, -1000, 1891, 22740, -1000, 64010, 64010, 24018,
	24018, 24018, 24018, 24018, 24018, 24018, 24018, 24018, 24018, 24018,
	24018, 24018, 24018, 24018, 24018, 24018, 24018, 24018, 1740, 24018,
	2437, 2437, 2437, -1000, 1926, 1891, 22740, 22740, 64010, 261,
	260, 259, -1000, 22740, -169, 3865, -1000, 1871, -1000, -108,
	-1000, 2699, -1000, -1000, 1871, 1871, -122, 63197, -1000, 1648,
	-1000, 457, 22740, 26472, -1000, 617, -1000, -123, -1000, 40614,
	-1000, 616, -244, -1000, 682, -1000, 316, -1000, -1000, -1000,
	145, 40614, -1000, -130, -1000, 2402, 257, 11933, -1000, -1000,
	-1000, -1000, -1000, 72, -53, 1447, -1000, 2454, -1000, 610,
	256, 2444, 255, -53, 53470, -1000, -48, -1000, -1000, -1000,
	-1000, -1000, -1000, 881, 880, -1000, 2030, -1000, 1632, -1000,
	799, -1000, 1188, 22740, 22740, 456, 455, 1346, 2519, 2025,
	1565, 2017, 1565, -1000, -1000, 718, -1000, 63197, 452, 450,
	-1000, -49, 1200, -1000, -1000, 22740, 22740, 41412, -1000, 2287,
	-1000, 877, -1000, -1000, -1000, 1386, 875, -1000, -1000, 1358,
	-1000, -1000, -1000, -1000, 22740, -1000, -50, 874, 739, 1890,
	1039, -1000, 2518, 2514, 2513, 253, -51, -1000, 72, 53470,
	53470, 2398, 53470, -1000, -1000, -1000, -1000, 744, -1000, -1000,
	2512, -1000, 812, 11933, 53470, 2016, 1744, 673, 33408, -1000,
	744, 1810, -1000, 63197, -1000, 1203, 14490, 2291, -135, -1000,
	142, -1000, -1000, -1000, 763, 29309, 26472, 22740, 2511, -136,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 41015, 41015,
	33007, 33007, 33007, 739, 53470, 53470, 36199, 447, 53470, 53470,
	446, -1000, -1000, -1000, 1442, 53470, -1000, -1000, -1000, -1000,
	-1000, 1379, 1597, -1000, 1455, 60861, -1000, 2297, 11933, 2401,
	6888, 22740, 22740, 438, 4672, 940, 6888, 22740, 22740, 64010,
	63740, -137, 22740, 22740, -1000, 22740, 609, 63197, 2472, 22740,
	251, 249, 248, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 247, -1000, -1000, -1000, -1000, -1000, 63197, 22740, 141,
	-1000, -1000, -1000, 57440, -1000, 22740, 246, 245, -1000, 242,
	241, 6762, 344, 60558, 60484, 60181, 63197, 1926, 63197, -1000,
	-1000, 769, 769, 1085, 1085, 1085, 1085, 2437, 914, 996,
	365, 393, 393, 393, 449, 829, 829, 393, 393, 393,
	1888, 1736, 436, 6739, -1000, -1000, 63197, 63197, 238, -1000,
	-1000, -1000, -169, 237, 1867, 2342, -1000, 26472, 1867, 1867,
	-1000, -1000, 53470, 63197, -1000, -240, -1000, 2444, -1000, -1000,
	1759, -1000, 8225, -1000, 11933, -1000, -1000, 28912, -1000, 423,
	-1000, 139, -1000, -1000, 608, -1000, -1000, 229, -1000, -53,
	53470, 53470, 53470, 2014, -1000, 1816, -1000, 60107, -138, -1000,
	61615, 22740, 53470, -1000, 1308, 1799, 827, -1000, 53470, -1000,
	53470, -1000, -1000, 53470, 53470, 53470, 53470, 53470, -143, 63197,
	-54, -1000, 681, -1000, 53470, 53470, 33007, -144, 11933, -1000,
	33007, 903, -1000, -1000, -1000, 1828, -1000, 413, 1386, 72,
	-1000, -1000, -1000, 412, 53470, 1501, 406, 11933, 1748, 673,
	33408, -1000, 971, 1203, -1000, -1000, -55, -1000, 424, 72,
	53470, 2510, 1438, -1000, -56, 63197, -1000, 677, -1000, -145,
	-1000, -1000, 228, -1000, 2230, 2125, -1000, 22740, 401, 400,
	53470, 1667, -1000, -1000, -1000, 11933, 975, -1000, -1000, -1000,
	2297, 6888, 6888, 22740, 22740, 22740, 6888, 63740, -146, -1000,
	6888, 6888, -169, -1000, -1000, 62066, -1000, -1000, -1000, -1000,
	63197, 8641, 1389, -1000, 59804, -1000, -1000, -1000, -1000, 22740,
	22740, -1000, -1000, -1000, -1000, -1000, 24018, 1887, 398, 64010,
	-1000, -1000, 757, 22740, 22740, 2699, 757, 757, -151, 692,
	-1000, -1000, -1000, 2444, 139, -1000, 2509, 11933, -1000, -1000,
	-1000, -1000, -1000, 53470, -1000, 53470, -1000, 11933, 53470, 1885,
	1628, -1000, -1000, 1762, 380, 24018, 53470, 425, -1000, 1317,
	22740, -1000, -154, -156, 1622, -1000, -1000, 1619, 22740, -1000,
	64010, 1565, 1565, -157, -159, -1000, 870, 867, 862, 53470,
	15783, -1000, -1000, -1000, 856, -1000, -57, 22740, 1377, 1846,
	36199, 2397, -1000, -1000, 22740, -1000, 53470, 22740, 1492, -1000,
	673, 33408, -1000, 2018, -1000, 2054, 53470, 2264, -1000, -1000,
	-1000, 1810, 377, -1000, 739, 371, 367, -162, 22740, 22740,
	-164, -58, -1000, 647, 638, -1000, -1000, 53470, -1000, 6888,
	6888, 6888, -1000, 223, -1000, -1000, 1438, 2338, -1000, 59730,
	59427, 426, 24018, 64010, -167, -1000, 53470, 63197, -169, -1000,
	-1000, -1000, 40614, 506, -1000, -1000, 2826, -1000, -1000, -1000,
	53470, 1473, -1000, -1000, 22740, 6739, 366, 22740, -1000, 1828,
	364, -1000, -1000, -1000, -1000, 1287, -1000, -1000, 63197, 2317,
	-1000, -1000, 363, 348, 53470, 53470, 347, 646, -1000, 346,
	63197, -1000, -1000, 1370, 222, 72, -170, 812, -172, 53470,
	33408, -1000, 1744, 998, -175, 53470, 1203, -1000, -1000, 33007,
	33007, 1317, -177, -178, -1000, 1667, -1000, 53470, -1000, 53470,
	-1000, -1000, 1407, 22740, -1000, -1000, 426, -180, -1000, -60,
	-1000, 2396, -1000, -1000, -1000, -1000, 2001, 59353, 1701, 53470,
	59050, 1377, 53470, 53470, 811, 11933, 1379, 1379, -1000, -1000,
	22740, 15783, 22740, 53470, 1828, -1000, 1317, 320, 1317, 319,
	-1000, 1748, 1084, -1000, 763, -1000, -1000, -187, -189, 1828,
	1317, -1000, -1000, -190, -192, 219, 23592, 23592, 23592, -169,
	-1000, 53470, 318, 1984, -1000, 1458, 1302, 181, 817, -1000,
	-195, 316, -1000, 22740, -1000, -200, -1000, 793, -211, -1000,
	791, -212, -1000, -213, 315, 1377, 1828, 22740, 1828, 22740,
	-1000, 29309, -1000, 739, 739, 1377, 1828, -1000, -1000, -1000,
	-1000, -1000, 24444, 1488, 1193, 61312, -1000, -1000, -1000, -1000,
	53470, -1000, 1470, 1465, 1115, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1701, 63197, -1000, 1379, 1844, -1000, 1379, 1884,
	-1000, -1000, 53470, -1000, 1377, -214, 1377, -219, -198, -1000,
	-1000, -1000, 1377, 2405, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2219, -1000, 809, 1421, 1421, 1458, -1000, 314, -1000,
	313, -220, 759, 1317, 759, 1317, -1000, -1000, 23166, -1000,
	2425, -1000, -1000, 1750, -1000, -1000, 22740, 22740, 1469, -1000,
	2486, 1828, -1000, 1828, -1000, -1000, -1000, -1000, -221, -222,
	-1000, -1000, -1000, -1000, 1377, 1377, 1377, 855, 759, 759,
	-1000, 312, -1000, -1000, 22740, -229, 1377, -1000,
}
var sqlPgo = [...]int{

	0, 3146, 3140, 2001, 3137, 3135, 3129, 3127, 3123, 3122,
	3121, 3119, 3118, 3116, 3115, 3114, 3113, 3105, 3104, 3103,
	3102, 3098, 3097, 3095, 3094, 3093, 3092, 3086, 3085, 3084,
	3083, 3079, 3074, 3071, 3070, 3069, 3064, 3063, 3061, 3060,
	3059, 3058, 3057, 3056, 3055, 25, 3054, 3053, 3052, 3050,
	3039, 3033, 3032, 3031, 3030, 3029, 3027, 3025, 3024, 3023,
	3022, 3021, 3019, 3017, 3015, 3013, 3012, 3010, 3009, 3007,
	3004, 3003, 3002, 3000, 2996, 112, 2993, 2991, 2989, 2988,
	2984, 2982, 2980, 2979, 2978, 2977, 2976, 2975, 2974, 2973,
	59, 2971, 2969, 2968, 2967, 2963, 2962, 2958, 2957, 2956,
	2955, 182, 2952, 2951, 2950, 2949, 2944, 2942, 2941, 2940,
	2932, 2925, 2922, 2921, 2920, 2919, 2918, 2917, 2915, 2914,
	2913, 2911, 2909, 2908, 2905, 2902, 2896, 2894, 195, 127,
	2889, 2888, 2880, 2878, 2873, 2871, 85, 80, 44, 2869,
	82, 120, 183, 4791, 177, 2868, 2864, 2860, 2858, 2852,
	66, 126, 123, 119, 114, 84, 2851, 2850, 58, 34,
	19, 22, 88, 2848, 2843, 2839, 2215, 81, 2838, 2836,
	188, 169, 2833, 662, 2829, 136, 73, 77, 45, 62,
	2827, 105, 15, 2819, 142, 102, 2812, 110, 69, 23,
	4168, 100, 196, 71, 121, 174, 154, 161, 152, 117,
	132, 2810, 178, 130, 144, 2804, 2803, 2802, 35, 140,
	20, 10, 162, 3, 2801, 8, 2799, 6, 2792, 2790,
	2788, 2787, 27, 116, 54, 55, 2786, 26, 129, 164,
	2785, 158, 2784, 90, 2782, 186, 143, 150, 14, 163,
	2780, 2779, 2778, 2777, 2774, 87, 16, 76, 2770, 2769,
	94, 170, 2768, 41, 128, 68, 92, 199, 155, 91,
	159, 167, 2766, 2764, 2761, 191, 2759, 2758, 113, 156,
	2757, 2756, 29, 39, 168, 32, 2752, 2751, 115, 2750,
	146, 2749, 2748, 2747, 194, 133, 153, 5, 64, 74,
	12, 165, 106, 78, 70, 2746, 3139, 1064, 941, 2745,
	101, 95, 37, 75, 103, 187, 38, 2740, 2739, 99,
	2738, 2736, 2735, 2734, 134, 2733, 2732, 2731, 118, 30,
	63, 2730, 108, 57, 111, 193, 72, 147, 160, 180,
	2728, 131, 2727, 124, 104, 2726, 141, 176, 148, 2725,
	322, 2724, 197, 2723, 2719, 2717, 2709, 33, 2705, 2703,
	254, 2702, 138, 2700, 151, 135, 166, 96, 28, 2699,
	56, 67, 2695, 139, 52, 2681, 109, 24, 0, 4060,
	3782, 2680, 149, 89, 2679, 2678, 2676, 2675, 31, 13,
	2, 4, 11, 9, 633, 310, 2671, 2669, 65, 86,
	97, 2668, 192, 157, 2666, 2665, 2664, 36, 2663, 21,
	2662, 17, 2660, 2659, 18, 7, 2657, 2655, 173, 2654,
	2653, 2652, 2651, 2391, 2650, 185, 2649, 93, 2648, 125,
	107, 2646, 2644, 2640, 2638, 181, 2637, 179, 2636, 2634,
	2633, 2632, 145, 1, 2304, 2622, 2608, 51, 137, 60,
	2606, 2605, 122,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	4, 4, 4, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 8, 8, 9, 9, 9, 33,
	33, 11, 11, 10, 10, 10, 12, 12, 7, 7,
	7, 7, 7, 7, 7, 7, 14, 14, 24, 24,
	15, 26, 415, 415, 18, 28, 19, 29, 13, 417,
	417, 417, 417, 22, 20, 20, 30, 139, 139, 17,
	17, 25, 25, 152, 152, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 414, 414, 154, 154, 153, 149,
	149, 418, 418, 155, 155, 155, 157, 157, 34, 34,
	88, 88, 88, 140, 81, 81, 81, 81, 81, 81,
	81, 76, 76, 366, 366, 367, 367, 135, 135, 136,
	136, 136, 136, 137, 137, 138, 138, 138, 48, 36,
	36, 36, 36, 36, 36, 36, 37, 37, 37, 37,
	38, 38, 38, 38, 38, 38, 39, 39, 39, 39,
	39, 39, 46, 46, 46, 129, 129, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 423, 423, 424, 424,
	425, 425, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 51, 51, 51, 51, 51, 51, 51, 51, 51,
	51, 51, 51, 51, 51, 51, 60, 60, 50, 410,
	410, 236, 236, 335, 335, 62, 62, 63, 63, 63,
	63, 63, 63, 64, 64, 64, 64, 64, 64, 64,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	71, 71, 71, 72, 72, 72, 69, 69, 69, 67,
	67, 67, 66, 66, 66, 70, 70, 70, 68, 68,
	68, 237, 237, 73, 73, 73, 73, 73, 73, 75,
	75, 75, 75, 75, 75, 75, 75, 75, 75, 75,
	75, 75, 75, 75, 75, 75, 75, 75, 75, 75,
	75, 75, 75, 75, 75, 75, 75, 75, 75, 337,
	337, 74, 74, 307, 307, 77, 77, 266, 266, 78,
	78, 78, 78, 78, 79, 79, 79, 79, 89, 89,
	89, 89, 413, 413, 229, 229, 170, 170, 170, 170,
	84, 84, 84, 84, 85, 85, 85, 86, 86, 134,
	134, 95, 95, 95, 95, 95, 94, 94, 94, 94,
	94, 94, 40, 40, 40, 41, 41, 42, 42, 43,
	43, 44, 44, 45, 45, 45, 45, 45, 97, 97,
	419, 419, 99, 96, 96, 96, 98, 98, 98, 98,
	100, 101, 101, 101, 101, 101, 101, 102, 102, 360,
	360, 244, 244, 358, 358, 359, 359, 206, 206, 206,
	206, 206, 207, 207, 207, 365, 365, 365, 365, 365,
	365, 103, 103, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 103, 119, 119,
	119, 128, 128, 128, 128, 128, 128, 128, 121, 121,
	121, 112, 112, 104, 104, 104, 104, 108, 108, 108,
	108, 108, 105, 105, 109, 109, 111, 111, 113, 113,
	113, 113, 113, 113, 106, 106, 106, 106, 115, 115,
	115, 115, 114, 114, 124, 124, 124, 124, 124, 124,
	321, 321, 120, 120, 120, 120, 123, 123, 123, 123,
	118, 118, 118, 122, 122, 125, 125, 125, 125, 107,
	107, 107, 428, 428, 428, 126, 126, 117, 117, 127,
	127, 127, 127, 127, 127, 127, 116, 116, 116, 416,
	416, 110, 411, 411, 408, 408, 408, 408, 408, 408,
	408, 409, 409, 412, 412, 82, 82, 82, 55, 55,
	56, 56, 427, 427, 427, 427, 427, 427, 427, 427,
	208, 208, 209, 209, 289, 289, 289, 289, 210, 210,
	156, 156, 156, 213, 214, 214, 211, 211, 212, 212,
	212, 216, 216, 215, 218, 218, 217, 288, 376, 376,
	377, 377, 377, 377, 377, 377, 377, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 374, 374, 374,
	375, 372, 372, 373, 373, 373, 373, 429, 429, 287,
	287, 222, 222, 379, 379, 379, 379, 380, 380, 380,
	380, 380, 383, 382, 381, 381, 381, 381, 381, 317,
	317, 317, 59, 59, 59, 255, 255, 254, 254, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 131, 131, 57, 57, 57, 162, 162,
	54, 54, 54, 431, 431, 58, 58, 58, 432, 432,
	61, 61, 61, 61, 61, 61, 53, 53, 53, 53,
	53, 433, 433, 272, 272, 271, 271, 227, 227, 323,
	174, 174, 150, 150, 150, 21, 23, 23, 16, 16,
	16, 16, 16, 16, 31, 31, 32, 32, 27, 27,
	420, 420, 421, 421, 83, 83, 87, 87, 87, 93,
	93, 130, 130, 130, 130, 130, 130, 130, 35, 35,
	35, 35, 47, 47, 47, 47, 91, 435, 435, 435,
	92, 92, 434, 434, 169, 169, 169, 169, 171, 171,
	284, 284, 285, 285, 436, 436, 286, 286, 286, 164,
	163, 165, 165, 52, 52, 52, 158, 158, 159, 159,
	160, 160, 161, 161, 437, 437, 80, 80, 80, 133,
	133, 202, 202, 280, 280, 280, 223, 223, 179, 179,
	283, 283, 281, 281, 281, 253, 253, 253, 132, 132,
	232, 232, 246, 246, 247, 247, 332, 332, 248, 90,
	90, 143, 143, 141, 141, 141, 141, 141, 141, 438,
	438, 142, 142, 142, 144, 144, 144, 144, 144, 144,
	144, 147, 147, 147, 147, 148, 148, 148, 146, 146,
	390, 390, 390, 392, 392, 393, 389, 389, 391, 391,
	430, 430, 257, 257, 257, 220, 221, 219, 219, 439,
	439, 225, 225, 224, 226, 226, 322, 322, 322, 251,
	251, 251, 251, 275, 275, 273, 273, 274, 274, 276,
	276, 277, 277, 277, 278, 278, 279, 279, 250, 250,
	303, 303, 145, 145, 145, 231, 231, 231, 233, 233,
	294, 294, 294, 295, 295, 293, 293, 293, 293, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 325, 325,
	234, 234, 326, 282, 282, 406, 406, 406, 407, 407,
	320, 320, 327, 327, 327, 327, 327, 327, 318, 318,
	319, 319, 333, 334, 334, 260, 260, 260, 260, 258,
	258, 259, 259, 328, 328, 328, 328, 252, 252, 329,
	329, 329, 330, 290, 290, 338, 338, 338, 338, 352,
	230, 230, 230, 440, 440, 339, 339, 339, 339, 339,
	339, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 342, 342, 342, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 351, 351, 351, 351, 351, 343,
	343, 348, 349, 344, 345, 350, 350, 350, 350, 441,
	441, 354, 354, 346, 346, 346, 346, 346, 346, 346,
	346, 346, 347, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 267, 267, 268, 268,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 297, 297, 297, 297, 297, 298, 298, 298,
	298, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 384, 384, 384, 384, 384,
	384, 384, 384, 387, 387, 388, 388, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 386, 386, 386, 394, 394, 395, 395,
	397, 397, 398, 398, 399, 400, 400, 400, 401, 402,
	402, 396, 396, 403, 403, 403, 403, 404, 404, 405,
	405, 405, 405, 405, 309, 309, 310, 310, 316, 316,
	316, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 172, 172, 172,
	172, 172, 242, 242, 240, 240, 240, 243, 243, 241,
	241, 239, 239, 238, 238, 306, 306, 304, 304, 308,
	308, 261, 261, 353, 353, 353, 353, 353, 353, 353,
	262, 262, 262, 270, 263, 263, 264, 264, 264, 264,
	264, 300, 301, 265, 265, 265, 302, 302, 311, 315,
	315, 314, 313, 313, 312, 312, 291, 291, 292, 292,
	249, 249, 442, 442, 245, 245, 331, 331, 331, 331,
	204, 204, 235, 235, 203, 203, 197, 197, 198, 198,
	198, 198, 228, 228, 355, 355, 355, 356, 357, 305,
	189, 188, 176, 177, 187, 186, 185, 175, 178, 182,
	183, 184, 180, 181, 193, 192, 191, 190, 336, 199,
	199, 200, 200, 200, 201, 201, 201, 201, 173, 173,
	194, 194, 195, 196, 196, 166, 166, 166, 167, 167,
	168, 168, 364, 364, 362, 362, 362, 363, 363, 363,
	363, 361, 361, 361, 361, 361, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 368, 368, 368, 368, 368,
	368, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371,
}
var sqlR2 = [...]int{

	0, 1, 3, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 0, 1,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 1, 3, 1, 1, 3, 4,
	6, 1, 3, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 6,
	6, 6, 1, 1, 5, 5, 6, 6, 4, 4,
	4, 4, 3, 4, 4, 7, 4, 3, 5, 4,
	12, 4, 12, 1, 3, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 3, 6,
	4, 3, 1, 3, 2, 1, 1, 3, 1, 3,
	2, 2, 0, 1, 1, 0, 2, 0, 7, 2,
	5, 6, 2, 1, 6, 4, 9, 7, 12, 12,
	2, 7, 2, 1, 1, 1, 3, 3, 0, 3,
	1, 3, 1, 1, 3, 2, 5, 0, 5, 1,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 6, 6, 3, 1, 1, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 3, 3, 4, 3,
	4, 7, 4, 4, 4, 3, 5, 7, 4, 3,
	3, 4, 3, 3, 3, 3, 2, 0, 1, 0,
	1, 0, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	3, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 1, 1, 2, 1, 2, 7, 3, 6, 1,
	2, 1, 3, 2, 0, 8, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 3, 4, 6, 3, 4, 6, 3, 4,
	6, 3, 4, 6, 3, 3, 5, 3, 3, 5,
	3, 1, 3, 2, 2, 5, 3, 6, 3, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	3, 5, 2, 3, 0, 3, 2, 3, 0, 2,
	3, 2, 3, 2, 6, 4, 7, 2, 6, 4,
	7, 2, 1, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 1, 3, 2, 1, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 1, 1, 1, 1, 1, 2, 2, 5, 7,
	3, 3, 3, 3, 4, 4, 3, 4, 4, 3,
	4, 4, 4, 3, 2, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 3, 4, 3, 2, 3,
	3, 3, 2, 3, 5, 4, 6, 4, 6, 4,
	1, 0, 2, 3, 3, 3, 6, 4, 2, 3,
	4, 2, 3, 3, 3, 4, 3, 3, 3, 3,
	4, 3, 1, 1, 1, 2, 3, 2, 3, 6,
	6, 7, 9, 6, 3, 4, 5, 5, 3, 1,
	1, 5, 2, 0, 1, 1, 1, 1, 3, 2,
	2, 2, 1, 2, 0, 3, 3, 2, 9, 12,
	7, 10, 1, 1, 2, 2, 2, 2, 1, 0,
	1, 0, 1, 3, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 9, 9,
	3, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 1,
	2, 4, 2, 5, 5, 5, 2, 8, 9, 6,
	5, 3, 1, 4, 7, 5, 10, 1, 1, 4,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 1,
	2, 1, 5, 8, 4, 1, 0, 1, 2, 2,
	1, 2, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 4, 7, 3, 3, 0,
	3, 6, 3, 1, 1, 8, 7, 5, 0, 1,
	6, 7, 6, 5, 3, 4, 14, 17, 14, 17,
	4, 0, 2, 2, 0, 1, 0, 1, 3, 2,
	2, 0, 1, 1, 0, 6, 6, 8, 6, 8,
	8, 10, 8, 10, 6, 8, 6, 8, 6, 8,
	1, 0, 2, 0, 2, 2, 3, 3, 2, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 3, 2,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 0,
	2, 2, 1, 0, 1, 3, 2, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 2,
	3, 2, 2, 8, 11, 3, 3, 0, 3, 0,
	3, 0, 3, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 4, 2, 1, 3, 1, 3,
	8, 5, 4, 3, 0, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 1,
	1, 3, 3, 2, 3, 4, 3, 4, 5, 0,
	2, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 2, 4, 4, 4, 2, 2,
	2, 2, 3, 1, 3, 6, 1, 0, 1, 0,
	1, 0, 1, 1, 0, 1, 5, 1, 0, 1,
	0, 1, 0, 3, 1, 3, 2, 4, 5, 2,
	2, 1, 1, 1, 0, 2, 5, 2, 3, 1,
	1, 1, 3, 0, 1, 1, 1, 1, 3, 0,
	2, 0, 4, 2, 5, 3, 2, 0, 1, 3,
	3, 5, 1, 1, 3, 2, 4, 4, 0, 8,
	4, 3, 4, 1, 5, 3, 4, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 4, 5, 4, 5, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 2, 0, 2, 5, 2, 1, 1,
	2, 3, 0, 1, 1, 1, 1, 1, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 5, 2, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 1, 4, 1, 4, 1, 4,
	1, 4, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 3, 3, 3,
	3, 4, 3, 2, 4, 2, 3, 3, 4, 3,
	4, 3, 4, 5, 6, 6, 7, 6, 7, 6,
	7, 3, 4, 4, 1, 1, 1, 3, 1, 3,
	3, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 1, 1, 6, 2, 1, 5, 1,
	1, 1, 1, 2, 1, 5, 5, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	6, 4, 3, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 2, 2, 2, 0, 1, 4, 2,
	2, 2, 2, 2, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 1, 2, 3, 2, 3, 2,
	3, 1, 0, 1, 3, 1, 3, 3, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 2, 2, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, -3, 440, -75, -48, -46, -77, -78,
	-63, -76, -79, -74, -89, -93, -83, -95, -130, -4,
	-34, -36, -49, -62, -64, -73, -81, -80, -82, -84,
	-88, -87, -40, -90, -94, -103, -131, -132, -133, 79,
	66, 118, 101, 105, 124, 150, 272, 301, 311, 295,
	-98, -99, 330, -35, -47, -92, -91, -5, -11, 26,
	37, -37, -38, -39, 51, -57, -54, -51, -60, -422,
	81, -391, -65, -68, -70, -426, 110, 123, 160, 265,
	-85, -86, 297, 299, -42, -41, 119, -141, -143, -96,
	-97, -134, -104, -105, -106, -107, -108, -109, -110, -111,
	-112, -113, -114, -115, -116, -117, -118, -119, -120, -121,
	-122, -123, -124, -125, -126, -127, 333, 379, 38, 342,
	67, 113, 305, 20, -6, -7, -8, -9, -10, -12,
	-23, -50, -52, -53, -55, -56, -61, -58, -59, -390,
	-66, -67, -69, -71, -72, 296, -144, -142, 437, 391,
	-14, -18, -19, -15, -17, -20, -16, -24, -28, -29,
	-26, -25, -27, -30, -31, -32, -33, -21, -22, -13,
	408, 416, -147, -145, -146, -148, 318, 399, 356, 441,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, -190,
	-194, -195, -196, -166, 4, -368, -370, 20, 21, 22,
	23, 24, 26, 36, 37, 38, 41, 43, 44, 47,
	48, 49, 50, 51, 52, 55, 60, 65, 66, 67,
	68, 69, 74, 71, 72, 73, 76, 78, 79, 80,
	83, 84, 92, 93, 94, 95, 96, 97, 101, 103,
	105, 108, 109, 110, 112, 114, 115, 118, 119, 122,
	120, 362, 364, 121, 123, 124, 125, 135, 136, 137,
	139, 140, 142, 144, 148, 149, 151, 155, 157, 158,
	159, 160, 161, 162, 174, 169, 175, 179, 182, 181,
	183, 184, 185, 176, 190, 193, 194, 195, 197, 198,
	201, 202, 203, 204, 207, 206, 209, 212, 213, 216,
	217, 220, 222, 223, 226, 227, 230, 228, 229, 232,
	233, 235, 234, 242, 243, 245, 246, 260, 249, 250,
	253, 256, 259, 261, 262, 263, 264, 265, 266, 268,
	270, 272, 274, 276, 277, 278, 279, 280, 281, 283,
	284, 286, 287, 288, 289, 290, 295, 292, 293, 294,
	296, 297, 298, 299, 301, 303, 304, 305, 306, 308,
	310, 331, 332, 344, 311, 312, 313, 314, 315, 316,
	317, 321, 325, 322, 323, 324, 326, 319, 320, 327,
	328, 330, 333, 335, 337, 338, 341, 342, 343, 345,
	348, 349, 350, 346, 347, 340, 355, 353, 354, 357,
	358, 359, 360, 361, 363, 365, 370, 373, 374, 376,
	379, 380, 381, 383, 384, 387, 388, 389, 390, 395,
	391, 393, 396, 397, 398, 403, 402, 409, 410, 412,
	413, 414, 31, 39, 40, 42, 45, 56, 57, 58,
	61, 98, 99, 117, 126, 127, 138, 152, 154, 163,
	164, 165, 180, 186, 188, 168, 210, 240, 241, 254,
	258, 269, 271, 282, 307, 336, 351, 367, 368, 369,
	375, 377, 399, 400, 404, 411, 247, -184, 2, -166,
	-166, 272, 25, 2, 25, 268, 320, 358, 360, 2,
	189, 2, -413, -229, 2, 25, -170, -166, 81, 150,
	318, -184, 2, -413, -229, 23, 2, -166, 2, -171,
	2, 311, -166, 440, 76, 217, 60, 307, 327, -101,
	374, -100, 367, 313, -102, -360, 2, 230, -166, 440,
	440, 440, 440, 2, 356, 263, 402, 319, 392, 94,
	279, 173, -408, 2, 4, -370, -368, -198, -197, 356,
	94, -196, -166, 430, -195, 440, 440, 440, 2, 194,
	195, 278, 277, 327, 328, 440, 440, 440, 2, 24,
	54, 75, 78, 100, 125, 145, 148, 251, -423, 223,
	260, 276, 326, 355, 365, 376, -427, 343, 55, 392,
	-431, 381, 108, -271, 94, 360, 358, 217, 149, 388,
	303, 153, 386, 103, 179, 390, 389, 440, 440, 24,
	54, 63, 78, 108, 125, 145, 148, -425, 260, 276,
	310, 326, 355, 365, 381, 376, 2, 402, 319, 356,
	173, 94, 392, 303, 275, -75, 2, 437, 28, 330,
	-140, 356, 2, -166, 194, 195, 2, 440, 440, -408,
	2, 194, 195, 2, 315, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	2, -128, 327, 343, 158, 37, 60, 25, 65, 95,
	151, 173, 174, 202, 75, 76, 277, 217, 195, -321,
	328, 357, 314, 353, 374, 81, 393, 304, 414, -416,
	120, 4, 94, 230, 329, 367, 69, 361, 362, -430,
	2, 356, -434, 2, 374, 374, 2, -434, 2, -434,
	2, -169, 2, 374, 371, -435, 374, 411, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	-142, -144, -143, 440, 440, 440, 440, 440, -128, 327,
	2, 60, 25, -438, 143, -224, -225, 385, 187, 116,
	252, -141, -143, 2, -390, -358, 2, -296, 247, -298,
	428, 429, 423, 236, 415, -309, 100, 225, 224, 386,
	-299, -311, 117, 307, -243, 7, 8, 5, 6, -173,
	-340, -305, -347, 378, 128, 239, -201, 443, 9, 437,
	-387, -143, -310, 32, 154, 53, -362, -200, -341, -349,
	-345, -346, -440, 43, 49, 48, 365, 229, 321, 322,
	337, 323, 324, 41, 395, 169, 245, 246, 181, 4,
	188, -199, -166, -384, -385, -368, -369, 180, 186, 182,
	336, 183, 184, 185, 40, 282, 139, 140, 138, 109,
	99, 98, 241, 45, 44, 42, -350, 96, 367, 368,
	369, 370, 197, 198, 63, 86, 87, 85, 90, 89,
	91, 88, 329, 392, 54, 31, 163, 164, 168, 240,
	165, 61, -386, 347, 82, 129, 147, 178, 166, 191,
	192, 196, 211, 214, 231, 238, 255, 257, 302, 334,
	-441, 400, 56, 57, 126, 127, 152, 210, 258, 269,
	351, 375, 377, -392, 283, -393, -184, -392, 440, 440,
	442, 440, -219, -220, -221, 2, 25, 106, 437, 2,
	-324, 2, 435, -328, -143, 205, -327, 437, -325, -190,
	248, -388, 308, -384, -385, -173, -166, -200, 4, 225,
	224, -3, -222, 437, 439, 356, 64, 2, -266, 437,
	-166, 25, -140, 247, 371, 442, -307, 437, 247, 146,
	249, -166, 2, 2, 331, 2, 437, -101, 58, 374,
	-285, 2, -286, -163, -164, -165, 193, 274, 281, 414,
	-358, -419, 146, 420, 371, -358, -244, 439, 2, -328,
	163, -190, 2, -188, -361, 4, -368, -370, -369, -371,
	63, 25, 27, 28, 29, 30, 32, 33, 34, 35,
	46, 53, 54, 59, 62, 64, 75, 81, 85, 86,
	88, 87, 89, 90, 91, 100, 102, 104, 106, 107,
	111, 113, 116, 128, 130, 143, 145, 146, 150, 153,
	156, 167, 173, 177, 187, 189, 205, 208, 215, 218,
	219, 236, 237, 239, 244, 247, 248, 251, 252, 267,
	273, 285, 300, 318, 329, 339, 352, 356, 366, 371,
	372, 378, 385, 386, 392, 394, 401, 405, 406, 407,
	408, 2, -328, 163, 2, -191, 163, -328, -194, 2,
	-366, 163, -364, 9, -363, 5, 4, -368, -370, -369,
	2, -175, -166, 2, -187, -361, 2, -203, 163, -190,
	371, 442, -235, -197, -198, -228, -166, 439, -296, 2,
	-90, 2, -296, 163, 2, -90, 163, 2, -296, 163,
	2, -90, 163, 2, 2, 2, 376, 2, 78, 163,
	-166, 356, 93, 2, 294, -424, 310, 380, 402, 2,
	2, 2, 2, 2, 2, 356, 319, -432, 283, -180,
	2, -166, 143, -366, 163, 2, -366, 163, 2, -192,
	-194, -192, 173, 190, -175, 163, 2, 360, 358, 360,
	358, 146, 2, 189, 2, 189, 2, -329, 2, -330,
	-190, 2, 2, 2, 2, 2, 163, -166, 356, 93,
	2, 204, 2, 2, 2, 2, 2, 2, 2, 2,
	-237, 163, 2, -190, -237, 163, 2, -237, 163, 2,
	-204, 163, 2, -203, -175, 163, 2, -367, 163, 2,
	-366, -367, 163, 2, -337, 2, -336, -363, 399, -75,
	437, 327, 437, -366, -190, -296, -90, 146, -296, -90,
	2, 94, 356, -128, 2, 143, 394, 2, 7, 2,
	-366, 280, 135, 2, 331, 2, 277, 328, 60, 414,
	146, 2, 2, -411, 2, 247, 146, 2, 146, 2,
	146, 2, 146, 2, 146, 2, 2, 277, 328, 2,
	373, 203, 121, 2, 146, 2, 146, 2, 5, 2,
	193, 274, 344, 2, -190, -428, 2, 356, 402, 319,
	2, 2, 71, 72, 146, 2, 146, 414, 2, -252,
	-328, -284, -285, -284, 371, -171, -438, -224, -225, -128,
	331, 2, 2, -438, -251, -273, -274, 215, 130, 244,
	-257, 25, 106, -257, -257, 47, 438, 438, 10, 11,
	62, 36, 428, 429, 430, 431, 141, 432, 433, 426,
	427, 425, 418, 419, 422, 199, 200, 77, 421, 420,
	70, 221, 309, 131, 132, 133, 134, 291, 170, 171,
	172, 13, 14, 15, 29, 251, 214, 415, 166, 334,
	423, 16, 17, 18, 191, 192, 238, 39, 167, -172,
	-205, -296, -296, -296, -296, -296, 257, 437, -249, -291,
	435, -143, 437, 437, 437, 5, 437, 5, -357, 7,
	-143, -296, -309, 438, -241, 437, -143, -309, -304, 437,
	307, 435, 437, -312, -296, 439, -394, 409, -343, 437,
	271, -342, 437, -342, -342, -354, 403, 410, 416, 410,
	416, 143, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 403, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 442, -392, -222, 437, -245,
	-331, -296, 430, -245, -245, 247, -238, -296, 82, -260,
	196, 231, 147, 211, 302, 178, -357, -75, -293, 443,
	-320, 416, -143, -325, -166, -143, -327, 437, -324, -320,
	430, -190, 437, 146, 437, 439, 146, -228, -361, -190,
	-199, -166, -200, -238, -366, -408, -228, -170, 33, -306,
	-338, -339, -351, -340, -348, -344, -347, 287, 288, 286,
	290, 289, 43, 49, 48, 365, 229, 321, 322, 337,
	323, 324, 41, 395, 169, 245, 246, 181, 4, 42,
	-350, 188, 180, 186, 182, 336, 183, 184, 185, 40,
	282, 139, 140, 138, 109, 99, 98, 241, 45, 44,
	96, 367, 368, 369, 370, 197, 198, 400, 347, 56,
	57, -408, -228, 143, -360, -238, 33, -285, 2, -436,
	442, 213, -207, 220, 235, 157, 248, 412, -365, 5,
	4, -305, -317, 100, 217, -347, 8, 429, -355, 7,
	428, -359, -358, 84, 439, -361, -152, 292, -151, 22,
	26, 110, 397, 122, -212, 175, 263, 117, 340, -415,
	-417, 312, 363, 364, 73, 242, 292, 117, -254, -256,
	33, 92, 233, 259, 50, 161, 224, 225, 342, 404,
	117, 292, 408, 117, -417, 292, -417, -154, 340, -415,
	-417, 312, 292, -153, -212, 117, 443, -366, -235, 442,
	442, -361, 430, 117, 117, 117, 117, 2, 2, 236,
	2, 2, 2, 148, -427, -425, 2, 2, 2, -190,
	163, -191, 163, 2, -194, 402, 247, -410, -236, 356,
	-190, -162, -389, 408, 236, 236, 33, 437, 2, -177,
	163, 2, -167, -166, 173, -389, 236, -329, -202, -190,
	-202, 330, -184, 33, -293, 117, 2, 2, 2, -166,
	-155, 442, 52, 298, 117, -155, 117, -155, 117, -155,
	442, 117, -155, 117, 442, 117, 117, 438, 442, -337,
	-366, -138, 408, 146, 81, 437, -367, -175, 2, -190,
	2, 356, 197, -366, -366, -360, 25, 332, 2, 72,
	-190, -412, 143, -409, 303, -408, -190, -190, -190, -190,
	-190, 143, 2, 373, 2, 373, 2, -166, -166, 213,
	-190, 143, 356, 173, 356, -155, 442, -171, -438, -251,
	-360, -438, -274, -273, -276, -296, 25, -279, 137, 232,
	-296, -298, -142, -142, -142, -226, -322, -296, 273, 173,
	-352, -338, -338, -189, -361, 367, -296, -296, -296, -296,
	-296, -296, -296, -296, -296, -296, -296, -296, -296, -296,
	-296, -296, -296, -296, -296, -296, -296, -296, -296, -296,
	-296, -296, -296, -296, -296, -296, -296, -296, -296, -296,
	-296, 214, 166, 334, 39, 167, -296, 371, -296, -296,
	-296, -296, 228, 236, 239, 378, 128, 387, 106, 242,
	-442, 352, 35, -302, -143, -242, 437, -316, 30, 339,
	25, -309, 437, 2, -291, -296, -292, -239, -238, -238,
	438, 401, 25, 106, 430, 2, 7, -267, -269, 413,
	227, 97, 159, 226, -268, 317, 438, 442, 33, 438,
	-296, -239, -308, -304, -238, -315, -314, 405, -361, 430,
	-395, 136, 153, 7, -357, 367, 367, 367, 367, 437,
	438, 2, 438, 2, 438, 2, 438, 2, 438, 2,
	-296, -296, -296, -296, -296, -296, -296, -238, -261, 2,
	-353, -238, 4, 413, 227, 97, 159, 226, 317, -261,
	2, -238, 2, -238, 2, -262, 2, -296, -238, -263,
	-297, -298, 428, 429, 423, -309, -264, 2, -296, -239,
	-296, 46, 208, 372, -265, -296, 146, -238, -393, 33,
	-238, -231, 442, 146, 33, 4, -231, -231, 437, 438,
	442, 196, 196, -324, -260, 196, -258, 255, -258, -258,
	-406, 437, 436, -320, -176, 435, 444, -361, -319, -318,
	33, -184, 253, -320, -320, 439, 438, -319, -190, 437,
	-238, -361, 345, 438, 439, 191, 191, 438, -138, 371,
	408, -75, 438, 442, -230, 32, 435, -269, 437, -354,
	437, 146, -229, -419, 438, 374, -286, -206, 281, 338,
	293, 325, 8, 7, 7, 442, -361, 442, 371, -420,
	75, 64, -288, 163, 64, -372, -178, 75, -373, -166,
	59, 386, 273, 145, -420, 75, -420, 75, 75, 330,
	343, 47, -328, 36, -90, 209, 146, 414, 356, 371,
	-328, -256, -338, 92, 224, 225, 47, -356, -355, 429,
	-356, 47, -356, -356, -356, 408, -191, -328, 371, 264,
	-366, 371, 442, 36, -90, 209, 146, 371, -203, -176,
	-334, -333, 417, -197, -166, 439, -296, -90, -296, -90,
	117, 2, -432, 204, 437, -222, 236, -255, -254, 236,
	-193, 2, -190, -228, -335, 189, 442, -236, 264, 117,
	117, 437, 114, 279, 2, 247, 236, -177, 163, -158,
	359, 117, -290, 406, -280, -90, 437, 100, 33, -280,
	-246, -247, -332, -248, -178, 437, -184, -166, 2, -190,
	-237, -237, -237, -203, -204, -175, -366, -367, -367, -75,
	-336, 438, 438, -137, 250, -136, -166, 5, -140, 394,
	-209, -289, -288, -374, -375, -372, 173, 386, 190, 129,
	-138, -333, -334, -334, -190, 143, -228, -228, 327, 143,
	143, 439, 279, 94, 356, 263, 173, -190, -203, -190,
	-328, -438, -277, -355, 437, -278, 307, 308, 442, -150,
	34, 104, 201, -190, 414, 115, -296, -296, 371, -442,
	352, -302, 115, -296, 228, 239, 378, 128, 387, 106,
	242, 146, 437, -297, -297, 438, -240, -296, -296, 436,
	446, 438, -439, 442, -224, -296, -238, -238, 438, 438,
	371, 371, 371, 371, 437, 439, -238, -228, 436, 436,
	442, 438, -313, -314, 111, -296, 439, -400, 256, 437,
	437, 438, 438, 442, 414, 414, 414, 414, -296, 33,
	442, 442, 442, 438, 442, 442, 442, 438, 438, 146,
	438, 438, 438, 438, -270, 267, 438, 10, 11, 428,
	429, 430, 431, 141, 432, 433, 426, 427, 425, 418,
	419, 420, 70, 221, 309, 13, 14, 15, 191, 167,
	-297, -297, -297, 438, -300, -301, 146, 143, 33, -265,
	-265, -265, 438, 146, -238, 437, 438, -290, -331, -233,
	2, -324, -186, -361, -290, -290, -238, -296, -324, -324,
	-259, 394, 247, 196, -324, -318, 438, -407, -357, -320,
	-319, -357, -295, -294, 144, 234, -184, -222, -319, -319,
	-361, -320, 438, -234, -326, -388, -439, 439, -361, -129,
	5, 239, -129, 146, -228, 23, -338, 435, 436, 7,
	7, 437, -357, -228, 146, -358, -285, 384, 68, 281,
	-358, -151, -190, -178, -185, -166, 236, -288, 163, -157,
	236, -338, -185, 437, 437, 201, 201, -178, -185, 163,
	-178, 163, -185, -185, -414, 281, 243, -296, 216, 279,
	237, -152, 292, -90, -90, 437, -419, 394, 105, -190,
	-193, 292, -199, -356, -356, -254, 292, -191, -366, 408,
	-175, -153, -90, -90, 437, -176, -154, 292, -135, 162,
	242, 430, -166, 402, -166, -208, -209, -166, 33, 117,
	117, -222, 146, -138, -366, -190, -366, -366, -366, 2,
	437, 2, -190, 117, 247, 236, -159, 112, -437, 420,
	-175, -225, -224, -296, -253, -283, 300, 247, -223, -179,
	-178, 399, -184, -253, -232, 442, 146, 420, 439, -223,
	2, -155, -155, -155, -155, -155, -75, -138, 442, 437,
	420, 420, 437, -366, -366, 438, 442, -177, 173, 173,
	-183, -167, -138, -43, 408, 356, 327, 327, -166, -187,
	-175, -190, -188, -203, -278, -296, -322, -190, 443, -296,
	-296, 115, 115, -296, -297, -297, -296, 115, 146, 437,
	-296, -306, 29, 29, 438, 442, -292, -296, 438, 401,
	-439, -439, -439, 5, 227, 159, 226, -268, 226, -268,
	-268, 7, 430, -361, 438, -304, 113, -296, 366, -361,
	430, -401, -181, 437, -166, 406, -224, -357, 438, -352,
	-338, -296, -296, -296, -296, -296, -296, -300, -296, -352,
	-338, -297, -297, -297, -297, -297, -297, -297, -297, -297,
	-297, -297, -297, -297, -297, -297, -297, -297, -297, -297,
	106, 236, 242, -297, -301, -300, -296, -296, -338, 438,
	438, 438, -238, -75, -250, 153, -334, 442, -250, -250,
	438, -259, 437, -296, -324, 436, 438, 442, -319, 436,
	442, 445, 420, -222, 439, -318, 438, 442, -282, 33,
	438, -361, -90, 249, 7, 436, 438, -357, 438, -228,
	371, 371, 117, 236, 396, -376, -373, -296, -227, -323,
	-296, 437, 437, -149, 110, 330, -421, 2, 117, -155,
	117, -155, 412, 437, 437, 371, -420, 75, -238, -296,
	-139, 100, -360, -417, 371, 371, 264, -238, 371, -138,
	146, 354, 2, 2, 2, 438, -90, -190, -191, 33,
	-190, -162, 2, -272, 394, -176, -190, 117, -160, 207,
	-437, -364, -389, -275, -273, -253, -245, 237, 74, 438,
	442, 439, -290, -247, -233, -296, 2, 438, -136, -137,
	-366, -366, -366, -138, -140, -140, -289, 437, -177, -167,
	437, 250, -190, -214, -213, 263, 242, 248, 438, -150,
	-176, -296, -296, 115, 29, 29, -296, -296, -306, 438,
	-296, -296, -238, 436, 5, -296, 438, 438, 438, 438,
	-296, 439, -402, -166, -296, 438, 438, 438, 438, 442,
	442, 438, 438, 438, 438, -301, 146, 106, 242, 437,
	438, 438, -303, 156, 47, -324, -303, -303, -228, -293,
	-357, -294, -176, 435, -361, -326, 437, 439, 436, 438,
	-178, -185, -288, 117, -377, 75, -378, 62, 129, 81,
	236, 239, 386, 273, 59, 100, 285, 33, 438, 438,
	442, -150, -227, -228, 236, 349, 100, 236, 100, 93,
	381, -178, -185, -228, -228, -190, -178, -185, 438, 442,
	420, -193, -191, -366, 438, -176, -367, 367, -210, 176,
	437, -222, -255, -90, 437, -166, 247, 437, -176, -161,
	206, -437, -364, -158, -253, -281, 437, 247, -90, -179,
	2, -225, 420, 438, 438, 93, 93, -227, 437, 437,
	-228, -44, -45, 173, 75, 266, -188, 356, -150, -296,
	-296, -296, 438, -439, -361, 430, -396, 263, 438, -296,
	-296, -297, 146, 437, -306, -397, 407, -296, -238, -397,
	-397, 438, -320, -357, 2, -288, -185, -189, -182, -166,
	129, 163, 239, 201, 437, -297, -190, 437, 2, -287,
	-429, 80, 350, -323, 438, 438, 239, 239, -296, -338,
	-155, -155, 438, 438, 371, 371, 371, -360, -358, 371,
	-296, -211, -212, 167, -208, 33, -227, -190, -227, 247,
	-437, -364, -159, 107, -228, 75, -275, -302, -138, 437,
	437, 438, -227, -227, 438, 442, 25, 437, 25, 437,
	-190, 438, -225, 47, 438, 438, -297, -306, 438, -398,
	-399, -181, -319, 436, -378, -182, 236, -296, -168, 437,
	-296, -210, 437, 285, -174, 62, 437, 437, -178, -185,
	437, 420, 437, 261, 438, -90, 438, -272, 438, -190,
	-364, -160, 389, 237, 438, -185, -253, -367, -367, -287,
	438, 438, -45, -228, -228, -403, 279, 308, 155, -238,
	438, 442, 33, 117, 438, -379, 222, -166, 438, -211,
	-228, -190, -418, 394, -189, -216, -215, -213, -218, -217,
	-213, -238, -358, -238, -190, -210, -287, 437, -287, 437,
	-161, 330, -290, 438, 438, -210, -287, 438, 438, 438,
	-404, -405, 39, 383, 84, -296, -404, -404, -399, -401,
	129, -380, -383, -382, 247, 147, 262, 335, 438, 349,
	404, 438, -222, -296, 438, 442, 399, 438, 442, 399,
	438, 438, 437, -211, -210, -227, -210, -227, -246, -138,
	-138, -211, -210, -405, 270, 142, 307, 270, 142, -182,
	-382, 247, -383, 247, 389, 103, -379, -215, 167, -217,
	146, -228, -211, 438, -211, 438, -290, -211, 29, -381,
	233, 298, 52, 330, -381, -380, 437, 437, 438, -433,
	406, -287, -433, -287, -405, 21, 239, 100, -238, -238,
	-156, 52, 298, 2, -210, -210, 438, 438, -211, -211,
	-211, 371, -433, -433, 437, -238, 438, -211,
}
var sqlDef = [...]int{

	-2, -2, 1, 3, 4, 5, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 329,
	330, 332, 333, 334, 336, 337, 338, 340, 342, 344,
	345, 347, 349, 350, 351, 352, 353, 355, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	401, 403, 0, 811, 813, 815, 817, 29, 30, 0,
	0, 169, 171, 173, 0, 197, 199, 201, 202, 204,
	-2, 0, 283, 284, 286, 288, -2, -2, 0, 0,
	390, 392, 0, 0, 412, 413, 0, 899, -2, 406,
	408, 410, 471, 473, 475, 477, 479, 481, 483, 484,
	486, 488, 490, 492, 494, 496, 498, 500, 502, 504,
	506, 508, 510, 512, 514, 516, -2, -2, -2, 0,
	-2, -2, -2, 829, 33, 35, 37, 39, 41, 43,
	61, 251, 252, 254, 256, 258, 261, 262, 264, 938,
	290, 292, 294, 296, 298, 0, -2, 952, 0, 0,
	45, 46, 47, 48, 49, 50, 51, 68, 69, 70,
	71, 72, 73, 74, 54, 56, 57, 63, 64, 66,
	0, 0, 914, 916, 918, 920, -2, 0, 0, -2,
	9, 11, 13, 15, 17, 19, 21, 23, 25, 331,
	335, 339, 341, 343, 346, 348, 354, 356, 358, 702,
	1527, 1540, 1541, 1542, 1545, 1546, 1547, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758,
	1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768,
	1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818,
	1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838,
	1839, 1840, 1841, 1842, 1843, 1844, 0, 368, 366, 1521,
	369, 1700, 371, 373, 277, 278, 279, 280, 281, 282,
	0, 152, 0, 383, 377, 382, 384, 386, 387, 388,
	389, 364, 362, 0, 383, 1569, 381, 809, 810, 804,
	805, 1733, 839, 402, -2, -2, -2, 1833, -2, 434,
	-2, 441, 1836, 1735, 444, 0, 446, -2, 449, 812,
	814, 816, 31, 32, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, -2, -2, -2, -2, 0, 0,
	1603, 1498, 1542, 1501, 1496, 170, 172, 174, 175, 0,
	0, 0, 0, 0, 0, 198, 200, 203, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 758, 0, 0, 0,
	0, 0, 0, 0, 0, 632, 633, 0, 0, 638,
	753, 754, 775, 0, 0, 0, 0, 285, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 230, 323, 324, 0, 939, 0,
	0, 0, 150, 143, 0, 0, 627, 391, 393, 0,
	142, 0, 0, 808, 0, 407, 409, 411, 472, 474,
	476, 478, 480, 482, 485, 487, 489, 491, 493, 495,
	497, 499, 501, 503, 505, 507, 509, 511, 513, 515,
	517, 518, 0, 0, 0, 0, 0, 522, 0, -2,
	-2, 0, 0, 0, 0, 0, -2, 0, -2, 0,
	-2, -2, -2, 0, 0, 0, -2, -2, 0, 0,
	0, 521, 523, 524, 525, 0, 570, 609, 610, 0,
	744, 940, 841, 819, 832, 841, 821, 822, 823, 824,
	825, 830, 831, 834, 0, 826, 827, 828, 34, 36,
	38, 40, 42, 44, 253, 255, 257, 259, 263, 265,
	-2, 912, 913, 291, 293, 295, 297, 299, 394, 0,
	396, 0, 522, 903, 0, -2, 0, 944, 944, 944,
	0, 0, 913, 911, 0, 399, 400, 453, 454, 1160,
	0, 0, 0, 0, 0, 1396, 1244, -2, -2, 0,
	1277, 1279, 1812, 1833, 1395, 1281, 1282, 1283, 1284, 0,
	0, 1287, 0, 1289, 1290, 1291, 1292, 0, 1294, 0,
	1298, 1299, 1300, 0, 1817, 1475, 1538, -2, 1071, 1072,
	1073, 1074, 1075, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1534, 1529, 1367, 1314, -2, 1556, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1611,
	-2, -2, -2, -2, -2, -2, 1124, -2, -2, -2,
	-2, -2, -2, -2, 1845, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 0, 1801, 1818, 1819, 1824, 1826,
	1820, 1809, 1337, -2, 1846, 1847, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 1858, 1859, 1860, 1861, 1862, 1863,
	1125, -2, -2, -2, 1813, 1814, 1816, 1825, 1829, 1830,
	1835, 1839, 1840, 930, 1708, 933, 702, 931, 915, 917,
	0, 919, 0, 0, 0, 924, 947, 945, 0, 983,
	928, 929, 939, 998, 1021, 0, 1003, 0, 1021, 1043,
	0, 1008, 1728, 1315, 1316, 0, 1542, 1539, -2, 1856,
	1857, 2, 0, 0, 0, 0, 0, 194, 365, 0,
	370, 372, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 838, 404, 405, 0, 429, 0, 433, 1808, -2,
	-2, 437, 842, 846, 847, 848, 0, 0, 0, 0,
	443, 0, 0, 430, 431, 447, 450, 0, 52, 0,
	1818, 1043, 53, 0, 1511, 1561, 1562, 1563, 1564, 1565,
	1845, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872,
	1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
	1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922,
	1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932,
	1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942,
	1943, 55, 0, 1818, 58, 0, 1818, 0, -2, 62,
	0, 1818, 153, 154, 1552, 1553, 1557, 1558, 1559, 1560,
	65, 0, 1517, 67, 0, 1514, 75, 0, 1818, 1495,
	0, 0, 619, 1492, 1497, 620, 1502, 0, 176, 177,
	178, 179, 180, 1818, 182, 183, 0, 185, 186, 1818,
	188, 189, 0, 191, 206, 207, 0, 209, 0, 1818,
	0, 0, 0, 215, -2, 231, 0, 228, 0, 219,
	220, 222, 223, 224, 225, 0, 0, 0, 759, 0,
	267, 1522, 0, -2, 1818, 747, 750, 1818, 752, 764,
	1525, 0, -2, 0, 937, 1818, 855, 634, 635, 636,
	637, 0, 276, 0, 868, 0, 870, 0, 889, 1049,
	998, 232, 233, 234, 235, 236, 1818, 0, 0, 0,
	241, 0, 243, 244, 245, 246, 247, 248, 249, 250,
	135, 1818, 302, 321, 135, 1818, 305, 135, 1818, 308,
	135, 1818, 311, 1490, 135, 1818, 314, 315, 1818, 317,
	155, 318, 1818, 320, 0, -2, 359, 1528, -2, 326,
	0, -2, 0, 167, 0, 625, 626, 0, 806, 807,
	414, 0, 0, 519, 520, 0, 0, 530, 531, 532,
	533, 1706, 1626, 536, 0, 539, 560, 574, 0, 0,
	0, 543, 545, 624, 547, 0, 0, 549, 0, 551,
	0, 553, 0, 555, 0, 557, 559, 561, 575, 563,
	0, 0, 0, 573, 0, 579, 0, 582, 583, 584,
	0, 586, 587, 588, 589, 0, 591, 592, -2, -2,
	596, 598, 0, 604, 0, 608, 0, 526, 527, 135,
	1047, 818, -2, 820, 0, 836, 906, -2, 0, 395,
	0, 398, 910, 904, 909, 961, 962, 0, 0, 0,
	0, 942, 943, 0, 0, 0, 901, 902, 0, 0,
	0, 0, 1401, 1402, 1403, 1404, 1405, 1406, 1409, 1410,
	1407, 1408, 1411, 1412, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1414, 1415, 1416, 0, 0, 1418, 0, 1420, 0,
	0, 0, 0, 0, 0, 1223, 1225, 1483, 0, 0,
	1417, 1165, 1166, 1167, 1202, 1203, 0, 0, 1278, 1480,
	1479, 1280, 0, 1432, 0, 1286, 0, 1157, 1293, 1508,
	-2, 0, 1396, 1427, 0, 0, 1301, 1302, 1303, 0,
	0, 1432, 0, 0, 1474, 0, 1369, 0, 1107, 0,
	1108, 1109, 0, 1110, 1111, 1122, 1131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1126, 0, 0, 0, 0,
	0, 1455, -2, 0, 0, 0, 932, 0, 0, 987,
	1484, 1488, 1489, 987, 987, 0, 0, 1433, 0, 0,
	0, 0, 1040, 1040, 1040, 1038, 1015, 0, 1021, 0,
	1031, 0, 1021, 1021, 0, -2, 1003, 0, 0, 1031,
	1044, 1045, 0, 0, 0, 0, 0, 0, 1543, 0,
	0, 1529, 1530, 0, 167, 0, 375, 385, 939, 0,
	1435, 1062, 1058, 1065, 1066, 1067, 1068, 1114, 1115, 1116,
	1117, 1118, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083,
	1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1132,
	1124, 1142, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103,
	1104, 1105, 1106, 1120, 0, 1095, 1095, 1095, 1112, 1113,
	1133, 1134, 1136, 1138, 1140, 1063, 1064, 1127, 1128, 1129,
	1130, 0, 379, 0, 0, 0, 0, -2, 439, 0,
	844, 0, 849, 462, 463, 464, 851, 852, 442, 465,
	466, 467, 468, 469, 470, 0, 719, 0, 721, 1504,
	0, 440, 455, 445, 0, 451, 76, 801, 103, 0,
	801, 801, 0, 0, 122, 0, 0, 0, 0, 0,
	94, 99, 82, 83, 0, 0, 0, 0, 59, 727,
	0, 730, 0, 0, 0, 0, 0, 0, 0, 742,
	0, 0, 0, 0, 93, 0, 88, 78, 0, 0,
	96, 101, 0, 126, 128, 0, 0, 1034, 618, 0,
	0, 1543, 1500, 0, 0, 0, 0, 208, 210, 0,
	212, 213, 214, 0, 758, 0, 221, 218, 260, 702,
	1818, 726, 1818, 724, 1526, 0, 0, 274, 269, 0,
	271, 745, 0, 936, 0, 0, 0, 0, 765, 0,
	1818, 770, 1513, 1548, 1549, 857, 0, 1054, 0, 871,
	0, 0, 1050, 0, 1052, 0, 238, 239, 240, 0,
	300, 0, 133, 134, 0, 303, 0, 306, 0, 309,
	0, 0, 312, 0, 0, 0, 0, 939, 0, 0,
	0, 145, 0, 0, 0, 0, 167, 1034, 416, 1034,
	418, 0, 0, 534, 535, 537, 538, 540, 541, 605,
	542, 546, 0, 612, 1724, 622, 548, 550, 552, 554,
	556, 0, 565, 0, 567, 0, 569, 577, 580, 585,
	590, 0, 0, 0, 0, 743, 0, 835, 907, 909,
	397, 905, 959, 960, 965, 969, 970, 973, 976, 977,
	967, 1160, 925, 926, 927, 953, 954, 784, 0, 0,
	1161, 1059, 1162, 1163, 1510, 0, 1168, 1169, 1170, 1171,
	1172, 1173, 1174, 1175, 1176, 1177, -2, -2, -2, -2,
	-2, -2, -2, -2, 1186, 1187, 1188, 1189, 1190, 1191,
	1192, 1193, 1194, 1195, 1196, -2, -2, -2, 1200, 1201,
	-2, 1419, 1421, 0, 1483, 0, -2, 0, -2, -2,
	-2, -2, 1220, 0, 1222, 1227, 1229, 1231, 0, 0,
	0, 0, 1482, 1241, 1466, 1467, 0, 0, 1398, 1399,
	1400, 1226, 0, 1247, 1481, 1478, 0, 0, 1431, 950,
	1305, 0, 0, 0, 0, 1312, 0, 1509, 1156, 1143,
	1144, 1145, 1146, 1147, 1148, 1158, 1297, 1429, 0, 1428,
	0, 0, 0, 1439, 0, 1473, 1469, 0, 1531, 1537,
	1377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1349,
	0, 1442, -2, -2, -2, -2, -2, -2, -2, 0,
	1351, 0, 1363, 0, 1365, 0, 1353, 1433, 1452, 0,
	0, 1248, 0, 0, 0, 1396, 0, 1356, 1433, 1460,
	0, 0, 0, 0, 0, 1433, 0, 1465, 934, 0,
	0, 1054, 0, 0, 0, 1487, 1054, 1054, 0, 982,
	0, 0, 0, 0, 0, 0, 1035, 1039, 1036, 1037,
	0, 0, 1021, 1031, 995, 0, 0, 1512, 1001, 1030,
	0, 702, 1020, 1031, 1031, 0, -2, 1005, 0, 0,
	950, -2, 168, 701, 0, 0, 0, 367, 0, 0,
	0, 361, 363, 0, 1055, 1057, 0, 1069, 0, 1122,
	0, 0, 0, 0, 432, 0, 843, 850, 0, 459,
	0, 461, 720, 1506, 1505, 0, 452, 0, 0, 0,
	0, 800, 105, 1818, 0, 137, 0, 0, 692, 1518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 0, 0,
	0, 728, 729, 731, 737, 739, 0, 733, 1507, 0,
	734, 0, 736, 738, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 0, 1494,
	158, 1033, 0, 1493, 1503, 0, 181, 184, 187, 190,
	0, 216, 0, 0, 641, 0, 0, 722, 725, 0,
	702, 757, 1524, 0, 167, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 763, 0, 0, 0, 1818, 859,
	865, 0, 952, 0, 887, 873, 0, 0, 0, 887,
	891, 892, 894, 895, 0, 0, 1051, 0, 242, 322,
	135, 135, 135, 1491, 135, 135, 156, 316, 319, 325,
	360, 939, 167, 165, 1688, 163, 160, 162, 0, 0,
	0, 642, 644, 645, 646, 647, 1549, 0, 1653, 1549,
	140, 167, 415, 420, 528, 0, 623, 621, 564, 0,
	0, 0, 0, 0, 0, 0, 0, 606, 607, 611,
	1048, 908, 0, 971, 0, 968, 974, 975, 0, 956,
	782, 783, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 1242, 0, -2, 1221, 1224, 1228, 1230, 1232, 0,
	0, 0, 0, 0, 0, 1422, 0, 1424, 1243, 1476,
	1479, 1394, 0, 0, 949, 950, 950, 950, 1311, 0,
	0, 0, 0, 0, 0, 0, 1430, 0, 1437, 1438,
	0, 1304, 0, 1470, 0, 0, 0, 1313, 0, 0,
	0, 1119, 1093, 0, 1135, 1137, 1139, 1141, 0, 0,
	0, 0, 0, 1332, 0, 0, 0, 1336, 1348, 0,
	1350, 1362, 1364, 1352, 0, 0, 1354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1251, 1252, 1253, 1355, 1458, 1459, 0, 0, 0, 0,
	0, 0, 1361, 0, 1464, 939, 984, 979, 1485, 1034,
	986, 988, 1486, 1515, 979, 979, 0, 1434, 1023, 0,
	1025, 0, 0, 0, 1027, 0, 1016, 0, 1018, 1031,
	1000, 0, 0, 993, 0, 992, 702, 1029, 1002, 1006,
	1531, 0, 1046, 0, 1010, 1013, 0, 0, 1544, 192,
	195, 196, 193, 0, 374, 0, 1436, 0, 1060, 0,
	0, 0, 0, 378, 0, 428, -2, 457, 458, 460,
	456, 104, 788, 0, 0, 1516, 0, 107, 1818, 116,
	0, 669, 0, 0, 0, 0, 0, 803, 0, 1818,
	135, 1818, 135, 118, 121, 0, 125, 123, 0, 0,
	660, 77, 801, 80, 86, 0, 0, 0, 92, 0,
	794, 0, 732, 735, 741, 60, 0, 796, 786, 0,
	785, 127, 81, 87, 0, 798, 79, 0, 167, 0,
	0, 1499, 0, 0, 0, 0, 640, -2, 0, 0,
	0, 0, 0, 268, 273, 272, 748, -2, 751, 760,
	0, 762, 774, 0, 0, 0, 861, 865, 0, 864,
	937, 964, 951, 1053, 866, 887, 0, 0, 0, 876,
	878, 875, 872, 869, 1054, 0, 0, 0, 0, 0,
	237, 301, 304, 307, 310, 313, 327, 144, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 1549, 1549,
	0, 1520, 141, 417, 0, 0, 566, 568, 576, 599,
	600, 655, 0, 603, 0, 0, 955, 784, 0, 1164,
	1205, 0, 0, -2, 0, 0, 1209, 0, 0, 0,
	-2, 0, 0, 0, 1423, 1425, 0, 1478, 1306, 0,
	0, 0, 0, 1288, 1149, 1150, 1151, 1152, 1153, 1154,
	1155, 0, 1295, 1296, 1397, 1440, 1468, 1472, 0, 1532,
	1536, 1375, 1376, 1380, 1523, 0, 0, 0, 1317, 0,
	0, 0, 0, 0, 0, 0, 1441, 1451, 1453, 1249,
	1250, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, -2, -2, -2, 1267, 1268, 1269, -2, -2, -2,
	0, 0, 0, 1454, 1456, 1457, 1461, 1462, 0, 1358,
	1359, 1360, 1463, 0, 981, 0, 985, 0, 981, 981,
	946, 1024, 0, 1042, 1026, 998, 1017, 0, 1007, 996,
	0, 997, 0, 1028, 0, 1004, 1009, 0, 1012, 0,
	1306, -2, 151, 376, 0, 1061, 1070, 0, 1123, 380,
	0, 0, 0, 0, 136, 667, 691, 0, 0, 777,
	784, 0, 0, 109, 0, 0, 0, 117, 0, 114,
	0, 120, 124, 0, 0, 0, 0, 0, 0, 89,
	90, 91, 0, 95, 0, 0, 0, 0, 0, 138,
	0, 0, 211, 756, 217, 649, 630, 702, 726, 0,
	266, 746, 761, 0, 0, 0, 0, 0, 863, 865,
	0, 856, 857, 887, 963, 867, 885, 886, 884, 0,
	0, 0, 952, 893, 890, 896, 897, 0, 164, 0,
	159, 161, 0, 147, 0, 0, 643, 0, 0, 0,
	0, 0, 529, 601, 654, 0, 0, 966, 972, 957,
	784, 1207, 1211, 0, 0, 0, 1213, -2, 0, 1235,
	-2, -2, 1426, 1477, 1285, 950, 1307, 1309, 1310, 1159,
	1471, 0, 1382, 1379, 0, 1366, 1094, 1327, 1328, 0,
	0, 1331, 1333, 1334, 1335, 1450, 0, 0, 0, 0,
	1357, 935, 1371, 0, 0, 989, 1371, 1371, 0, 1021,
	1019, 994, 990, 0, 1532, 1011, 0, 0, 1056, 1121,
	790, 792, 106, 0, 668, 0, 671, 0, 0, 0,
	0, 678, 679, 0, 0, 0, 0, 0, 693, 700,
	0, 779, 0, 0, 0, 111, 130, 0, 0, 802,
	0, 135, 135, 0, 0, 789, 0, 0, 0, 0,
	0, 795, 797, 787, 0, 799, 157, 0, 657, 0,
	641, 0, 723, 755, 0, 773, 0, 0, 0, 853,
	865, 0, 858, 859, 275, 0, 0, 0, 874, 877,
	879, 964, 0, 166, 167, 0, 0, 0, 0, 0,
	0, 419, 421, 0, 0, 427, 653, 0, 958, 1215,
	-2, -2, 1236, 0, 1533, 1535, 952, 0, 1368, 0,
	0, -2, 0, 0, 0, 921, 0, 980, 978, 922,
	923, 1041, 1031, 0, 1014, 108, 0, 672, 673, 1519,
	675, 0, 677, 680, 0, 682, 1551, 0, 686, 649,
	0, 697, 698, 778, 695, 0, 110, 112, 129, 781,
	113, 119, 0, 0, 0, 0, 0, 0, 97, 0,
	1032, 628, 656, 0, 0, 0, 0, 774, 0, 0,
	0, 860, 861, 0, 0, 0, 887, 898, 146, 0,
	0, 700, 0, 0, 690, 0, 423, 0, 425, 0,
	602, 1308, 1386, 0, 1329, 1330, -2, 0, 1275, 1370,
	1372, 0, 999, 991, 670, 674, 0, 0, 706, 0,
	0, 657, 0, 0, 132, 0, 0, 0, 791, 793,
	0, 0, 0, 0, 649, 631, 700, 0, 700, 0,
	862, 863, 0, 881, 1054, 883, 888, 0, 0, 649,
	700, 689, 422, 0, 0, 0, 0, 0, 0, 1381,
	1276, 0, 0, 0, 681, 711, 0, 0, 0, 694,
	0, 702, 115, 0, 780, 0, 661, 0, 0, 664,
	0, 0, 98, 0, 0, 657, 649, 0, 649, 0,
	854, 0, 882, 167, 167, 657, 649, 424, 426, 1378,
	1383, 1387, -2, 1782, 1600, 0, 1384, 1385, 1373, 1374,
	0, 683, 707, 708, 0, 703, 704, 705, 1550, 684,
	685, 699, 706, 131, 658, 0, 0, 659, 0, 0,
	100, 102, 0, 629, 657, 0, 657, 0, 1054, 148,
	149, 687, 657, 0, 1389, 1390, 1391, 1392, 1393, 676,
	709, 0, 710, 0, 0, 0, 711, 662, 0, 665,
	0, 0, 771, 700, 771, 700, 880, 688, 0, 712,
	0, 715, 716, 0, 713, 696, 0, 0, 652, 766,
	0, 649, 768, 649, 1388, 714, 717, 718, 0, 0,
	648, 650, 651, 772, 657, 657, 657, 0, 771, 771,
	663, 0, 767, 769, 0, 0, 657, 666,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 426, 3, 432, 427, 3,
	437, 438, 430, 428, 442, 429, 439, 431, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 446, 441,
	418, 420, 419, 422, 443, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 435, 3, 436, 433, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 444, 425, 445, 423,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 421, 57761, 424, 57762, 434, 57763, 440, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1034
		{
			sqllex.(*Scanner).stmts = sqlDollar[1].union.stmts()
		}
	case 2:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1040
		{
			l := sqlDollar[1].union.stmts()
			s := sqlDollar[3].union.stmt()
			if s != nil {
				l = append(l, s)
			}
			sqlVAL.union.val = l
		}
	case 3:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1049
		{
			sqlVAL.union.val = []tree.Statement(nil)
			s := sqlDollar[1].union.stmt()
			if s != nil {
				sqlVAL.union.val = []tree.Statement{s}
			}
		}
	case 4:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1058
		{
			return helpWith(sqllex, "")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1062
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1063
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1064
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1065
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1066
		{
			return helpWith(sqllex, "GRANT")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1067
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1068
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1069
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1070
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:1074
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 31:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1083
		{
			return helpWith(sqllex, "ALTER USER")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1084
		{
			return helpWith(sqllex, "ALTER")
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1087
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1088
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1089
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1090
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1091
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1092
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1142
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1143
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1154
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1169
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1173
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.normalizableTableNameFromUnresolvedName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 60:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:1177
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.normalizableTableNameFromUnresolvedName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 62:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1188
		{
			return helpWith(sqllex, "ALTER USER")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1200
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1218
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1241
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1245
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.normalizableTableNameFromUnresolvedName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 77:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:1249
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.normalizableTableNameFromUnresolvedName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 78:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1255
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.newTableWithIdx(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:1259
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.newTableWithIdx(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:1265
		{
			sqlVAL.union.val = &tree.Split{Table: sqlDollar[3].union.newNormalizableTableNameFromUnresolvedName(), Rows: sqlDollar[6].union.slct()}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:1271
		{
			sqlVAL.union.val = &tree.Split{Index: sqlDollar[3].union.newTableWithIdx(), Rows: sqlDollar[6].union.slct()}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:1281
		{

			sqlVAL.union.val = &tree.Relocate{Table: sqlDollar[3].union.newNormalizableTableNameFromUnresolvedName(), Rows: sqlDollar[5].union.slct()}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:1288
		{

			sqlVAL.union.val = &tree.Relocate{Index: sqlDollar[3].union.newTableWithIdx(), Rows: sqlDollar[5].union.slct()}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:1295
		{

			sqlVAL.union.val = &tree.Relocate{Table: sqlDollar[3].union.newNormalizableTableNameFromUnresolvedName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:1302
		{

			sqlVAL.union.val = &tree.Relocate{Index: sqlDollar[3].union.newTableWithIdx(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1309
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 89:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1317
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1322
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1326
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1331
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1337
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1345
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableNameWithIndex{Table: sqlDollar[3].union.normalizableTableNameFromUnresolvedName()},
			}
			sqlVAL.union.val = s
		}
	case 95:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:1353
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableNameWithIndex{Table: sqlDollar[6].union.normalizableTableNameFromUnresolvedName()},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1364
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableWithIdx(),
			}
			sqlVAL.union.val = s
		}
	case 97:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1374
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:1378
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1384
		{
			sqlVAL.union.val = &tree.Scatter{Table: sqlDollar[3].union.newNormalizableTableNameFromUnresolvedName()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
		//line sql-gen.y:1388
		{
			sqlVAL.union.val = &tree.Scatter{Table: sqlDollar[3].union.newNormalizableTableNameFromUnresolvedName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1394
		{
			sqlVAL.union.val = &tree.Scatter{Index: sqlDollar[3].union.newTableWithIdx()}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
		//line sql-gen.y:1398
		{
			sqlVAL.union.val = &tree.Scatter{Index: sqlDollar[3].union.newTableWithIdx(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1404
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1408
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1415
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:1420
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1425
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:1430
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1435
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:1440
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:1445
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:1449
		{
			return unimplementedWithIssue(sqllex, 28751)
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:1452
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1461
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:1473
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.colType(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1483
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1490
		{
			return unimplemented(sqllex, "alter constraint")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1493
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:1500
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1509
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1518
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1523
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1530
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1538
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1539
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1543
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1547
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1553
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1561
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1565
		{
			sqlVAL.union.val = nil
		}
	case 131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1571
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:1575
		{
			sqlVAL.union.val = nil
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1582
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1586
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:1590
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1596
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:1600
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:1626
		{
			sqlVAL.union.val = &tree.Backup{Targets: sqlDollar[2].union.targetList(), To: sqlDollar[4].union.expr(), IncrementalFrom: sqlDollar[6].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[7].union.kvOptions()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1629
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:1652
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.exprs(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:1656
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1659
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1663
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:1698
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1702
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
		//line sql-gen.y:1706
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: sqlDollar[3].union.normalizableTableNameFromUnresolvedName(), FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:1710
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: sqlDollar[3].union.normalizableTableNameFromUnresolvedName(), FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
		//line sql-gen.y:1714
		{
			sqlVAL.union.val = &tree.Import{Table: sqlDollar[3].union.normalizableTableNameFromUnresolvedName(), CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
		//line sql-gen.y:1718
		{
			sqlVAL.union.val = &tree.Import{Table: sqlDollar[3].union.normalizableTableNameFromUnresolvedName(), CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1721
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:1738
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1741
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1745
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1749
		{
			sqlVAL.union.val = tree.NewPlaceholder(sqlDollar[1].str)
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1755
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1759
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1765
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:1769
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1775
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1779
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1783
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1787
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1793
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1797
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1803
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:1807
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:1811
		{
			sqlVAL.union.val = nil
		}
	case 168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:1817
		{
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   sqlDollar[2].union.normalizableTableNameFromUnresolvedName(),
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1829
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1830
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1831
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1832
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1842
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1850
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1852
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1855
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:1874
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1882
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:1888
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1891
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1901
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:1910
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1918
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1920
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:1924
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1927
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:1931
		{
			return unimplementedWithIssueDetail(sqllex, 19472, "table")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:1935
		{
			return unimplementedWithIssueDetail(sqllex, 19472, "column")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1939
		{
			return unimplementedWithIssue(sqllex, 19472)
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1944
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1945
		{
			sqlVAL.str = ""
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1954
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1955
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1957
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1958
		{
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1959
		{
			return helpWith(sqllex, "CREATE")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1962
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1963
		{
			return unimplemented(sqllex, "create cast")
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1964
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1965
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1966
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 211:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:1967
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1968
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1969
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1970
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1971
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:1972
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:1973
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1974
		{
			return unimplementedWithIssue(sqllex, 24747)
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1975
		{
			return unimplemented(sqllex, "create operator")
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1976
		{
			return unimplemented(sqllex, "create publication")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:1977
		{
			return unimplemented(sqllex, "create rule")
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1978
		{
			return unimplemented(sqllex, "create server")
		}
	case 223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1979
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1980
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1981
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:1984
		{
		}
	case 227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:1985
		{
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1988
		{
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:1989
		{
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:1992
		{
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:1993
		{
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1996
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1997
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1998
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:1999
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2000
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:2001
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:2002
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:2003
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:2004
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2005
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:2006
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2007
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2008
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2009
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2010
		{
			return unimplemented(sqllex, "drop server")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2011
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2012
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2013
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "drop type")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2014
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2018
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2019
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2020
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2021
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:2023
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2024
		{
		}
	case 263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2025
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2026
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:2036
		{

			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[5].union.nameList(),
				Table:       sqlDollar[7].union.normalizableTableNameFromUnresolvedName(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2044
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:2048
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2058
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2062
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2068
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2072
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2079
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:2083
		{

			sqlVAL.union.val = nil
		}
	case 275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:2097
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				OrderBy:   sqlDollar[6].union.orderBy(),
				Limit:     sqlDollar[7].union.limit(),
				Returning: sqlDollar[8].union.retClause(),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2107
		{
			return helpWith(sqllex, "DELETE")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2114
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2117
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2118
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2119
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2120
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2121
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2130
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2131
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2132
		{
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2133
		{
			return helpWith(sqllex, "DROP")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2136
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2137
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2138
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2139
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2140
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:2148
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.normalizableTableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:2152
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.normalizableTableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2155
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:2163
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.normalizableTableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.normalizableTableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2170
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.normalizableTableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:2182
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.normalizableTableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2185
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:2193
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[3].union.newTableWithIdxList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:2201
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[5].union.newTableWithIdxList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2208
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:2216
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:2224
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2231
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2239
		{
			sqlVAL.union.val = &tree.DropUser{Names: sqlDollar[3].union.exprs(), IfExists: false}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.DropUser{Names: sqlDollar[5].union.exprs(), IfExists: true}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2246
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2254
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:2258
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2261
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2265
		{
			sqlVAL.union.val = tree.NormalizableTableNames{sqlDollar[1].union.normalizableTableNameFromUnresolvedName()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2269
		{
			sqlVAL.union.val = append(sqlDollar[1].union.normalizableTableNames(), sqlDollar[3].union.normalizableTableNameFromUnresolvedName())
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2291
		{
			sqlVAL.union.val = &tree.Explain{Statement: sqlDollar[2].union.stmt()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2294
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:2296
		{
			sqlVAL.union.val = &tree.Explain{Options: sqlDollar[3].union.strs(), Statement: sqlDollar[5].union.stmt()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2300
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", sqlDollar[2].str}, Statement: sqlDollar[3].union.stmt()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:2304
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), sqlDollar[2].str), Statement: sqlDollar[6].union.stmt()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2311
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2315
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2318
		{
			return helpWith(sqllex, "DELETE")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2320
		{
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2321
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2322
		{
			return helpWith(sqllex, "INSERT")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2323
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2325
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2326
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2329
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2334
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2335
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2336
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2340
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2344
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:2354
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2361
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2365
		{
			sqlVAL.union.val = sqlDollar[2].union.colTypes()
		}
	case 364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:2369
		{
			sqlVAL.union.val = []coltypes.T(nil)
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2379
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2385
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2389
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:2393
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2403
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2407
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2411
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2415
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2418
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:2442
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:2446
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2449
		{
			return helpWith(sqllex, "GRANT")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:2469
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:2473
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:2477
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2480
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2485
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2489
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = privList
		}
	case 384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2500
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2504
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2518
		{
			return helpWith(sqllex, "RESET")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2519
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2527
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2531
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2534
		{
			return helpWith(sqllex, "RESET")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:2542
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2545
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2559
		{
			return helpWith(sqllex, "USE")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2563
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2564
		{
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2565
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2566
		{
			return unimplemented(sqllex, "set local")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2570
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2571
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2572
		{
			return helpWith(sqllex, "USE")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2588
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:2606
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:2624
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.normalizableTableNameFromUnresolvedName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:2632
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2636
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:2640
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2646
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2650
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2656
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:2660
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2664
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:2668
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2672
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:2683
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2686
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:2696
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2712
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2716
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 435:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:2721
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2738
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2741
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:2743
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:2746
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2750
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2769
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2776
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2782
		{
			return unimplemented(sqllex, "set from current")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2783
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2791
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2796
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2803
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2807
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2813
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2817
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2824
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2830
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2834
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2840
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2844
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2848
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2852
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2856
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2862
		{
			sqlVAL.union.val = tree.Low
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2866
		{
			sqlVAL.union.val = tree.Normal
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2870
		{
			sqlVAL.union.val = tree.High
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2881
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2885
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2889
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2894
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2898
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2910
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2911
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2912
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2913
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2914
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2915
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2917
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2918
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2919
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2920
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2921
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2922
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2923
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2924
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2925
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2926
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2927
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2928
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2929
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2930
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2931
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2932
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2934
		{
			return helpWith(sqllex, "SHOW")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2941
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2942
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2943
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:2954
		{
			sqlVAL.str = "client_encoding"
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2957
		{
			sqlVAL.str = "timezone"
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:2958
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:2972
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.normalizableTableNameFromUnresolvedName()}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:2977
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.normalizableTableNameFromUnresolvedName(), UsingJSON: true}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2981
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:2992
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3001
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3016
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3024
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3031
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3041
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3045
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: "all"}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3048
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3050
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: "all"}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3053
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3061
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.normalizableTableNameFromUnresolvedName()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3064
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3072
		{
			sqlVAL.union.val = &tree.ShowDatabases{}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3075
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3088
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3096
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.ShowIndex{Table: sqlDollar[4].union.normalizableTableNameFromUnresolvedName()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3107
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3109
		{
			sqlVAL.union.val = &tree.ShowIndex{Table: sqlDollar[4].union.normalizableTableNameFromUnresolvedName()}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3112
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3114
		{
			sqlVAL.union.val = &tree.ShowIndex{Table: sqlDollar[4].union.normalizableTableNameFromUnresolvedName()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3117
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3125
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.normalizableTableNameFromUnresolvedName()}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3128
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3130
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.normalizableTableNameFromUnresolvedName()}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3133
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3141
		{
			sqlVAL.union.val = &tree.ShowQueries{Cluster: true}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3144
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3146
		{
			sqlVAL.union.val = &tree.ShowQueries{Cluster: true}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3150
		{
			sqlVAL.union.val = &tree.ShowQueries{Cluster: false}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3160
		{
			sqlVAL.union.val = &tree.ShowJobs{}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3163
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:3172
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3175
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:3177
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3180
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:3182
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3186
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:3189
		{
			sqlVAL.union.val = true
		}
	case 571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:3190
		{
			sqlVAL.union.val = false
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3198
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: true}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3201
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3203
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: true}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3207
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: false}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:3217
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			}}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3226
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			}}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3235
		{
			sqlVAL.union.val = &tree.ShowTables{}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3238
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3245
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3249
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3252
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3259
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3263
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3271
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3276
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3281
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3285
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.normalizableTableNameFromUnresolvedName()}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3297
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.normalizableTableNameFromUnresolvedName()}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3301
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3314
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3317
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3325
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3328
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:3332
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:3336
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:3340
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableNameWithIndex{Table: sqlDollar[6].union.normalizableTableNameFromUnresolvedName()},
			}}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
		//line sql-gen.y:3346
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableNameWithIndex{Table: sqlDollar[9].union.normalizableTableNameFromUnresolvedName()},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:3353
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableWithIdx(),
			}}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3359
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3363
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:3374
		{
			sqlVAL.union.val = &tree.ShowRanges{Table: sqlDollar[5].union.newNormalizableTableNameFromUnresolvedName()}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:3378
		{
			sqlVAL.union.val = &tree.ShowRanges{Index: sqlDollar[5].union.newTableWithIdx()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3381
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:3389
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.newNormalizableTableNameFromUnresolvedName()}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3396
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:3401
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:3521
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:3525
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:3529
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:3568
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3572
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3577
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3581
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3590
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3597
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:3601
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3613
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3622
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3625
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
		//line sql-gen.y:3661
		{
			sqlVAL.union.val = &tree.CreateTable{
				Table:         sqlDollar[4].union.normalizableTableNameFromUnresolvedName(),
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				AsColumnNames: nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
		//line sql-gen.y:3673
		{
			sqlVAL.union.val = &tree.CreateTable{
				Table:         sqlDollar[7].union.normalizableTableNameFromUnresolvedName(),
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				AsColumnNames: nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
			}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:3687
		{
			sqlVAL.union.val = &tree.CreateTable{
				Table:         sqlDollar[4].union.normalizableTableNameFromUnresolvedName(),
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          nil,
				AsSource:      sqlDollar[7].union.slct(),
				AsColumnNames: sqlDollar[5].union.nameList(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql-gen.y:3698
		{
			sqlVAL.union.val = &tree.CreateTable{
				Table:         sqlDollar[7].union.normalizableTableNameFromUnresolvedName(),
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          nil,
				AsSource:      sqlDollar[10].union.slct(),
				AsColumnNames: sqlDollar[8].union.nameList(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:3721
		{
			return unimplementedWithIssue(sqllex, 5807)
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:3722
		{
			return unimplementedWithIssue(sqllex, 5807)
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3723
		{
			return unimplementedWithIssue(sqllex, 5807)
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3724
		{
			return unimplementedWithIssue(sqllex, 5807)
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3725
		{
			return unimplementedWithIssue(sqllex, 5807)
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3726
		{
			return unimplementedWithIssue(sqllex, 5807)
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:3727
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:3728
		{
		}
	case 641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:3733
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:3739
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3743
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:3749
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:3755
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 648:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:3761
		{
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       sqlDollar[4].union.newNormalizableTableNameFromUnresolvedName(),
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:3769
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:3776
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:3781
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:3786
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3792
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:3799
		{
			sqlVAL.str = ""
		}
	case 657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:3806
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 658:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
		//line sql-gen.y:3812
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
		//line sql-gen.y:3819
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3826
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:3832
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3836
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 663:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:3842
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:3852
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3856
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 666:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
		//line sql-gen.y:3862
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3873
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), sqlDollar[2].union.colType(), sqlDollar[3].union.colQuals())
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = tableDef
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3884
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:3888
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3894
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:3898
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3902
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3906
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:3910
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3914
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:3918
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3936
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:3940
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:3944
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3948
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:3952
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3956
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:3960
		{
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   sqlDollar[2].union.normalizableTableNameFromUnresolvedName(),
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
			}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:3968
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:3972
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:3976
		{
			sqllex.Error("syntax error: use AS ( <expr> ) STORED")
			return 1
		}
	case 687:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:3983
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Storing:     sqlDollar[6].union.nameList(),
				Interleave:  sqlDollar[7].union.interleave(),
				PartitionBy: sqlDollar[8].union.partitionBy(),
			}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
		//line sql-gen.y:3993
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Storing:     sqlDollar[7].union.nameList(),
					Interleave:  sqlDollar[8].union.interleave(),
					PartitionBy: sqlDollar[9].union.partitionBy(),
				},
			}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:4005
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:     tree.Name(sqlDollar[3].str),
				Columns:  sqlDollar[5].union.idxElems(),
				Inverted: true,
			}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:4015
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4027
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4032
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:4038
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:4044
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
				},
			}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:4055
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql-gen.y:4065
		{
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    sqlDollar[7].union.normalizableTableNameFromUnresolvedName(),
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:4089
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 700:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4093
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4099
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 702:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4103
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4108
		{
			return unimplemented(sqllex, "references match full")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4109
		{
			return unimplemented(sqllex, "references match partial")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4110
		{
			return unimplemented(sqllex, "references match simple")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4111
		{
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4118
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4122
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4126
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4130
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4134
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4140
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4146
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4154
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4158
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4162
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4166
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4170
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4176
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4180
		{
			n := sqlDollar[2].union.numVal()
			n.Negative = true
			sqlVAL.union.val = n
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4186
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:4205
		{
			node := &tree.CreateSequence{
				Name:    sqlDollar[4].union.normalizableTableNameFromUnresolvedName(),
				Options: sqlDollar[5].union.seqOpts(),
			}
			sqlVAL.union.val = node
		}
	case 723:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:4213
		{
			node := &tree.CreateSequence{
				Name:        sqlDollar[7].union.normalizableTableNameFromUnresolvedName(),
				Options:     sqlDollar[8].union.seqOpts(),
				IfNotExists: true,
			}
			sqlVAL.union.val = node
		}
	case 724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:4221
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4225
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4228
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4229
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4232
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.colType().String())
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4233
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4235
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4236
		{
			return unimplementedWithIssue(sqllex, 26382)
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4237
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4240
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4242
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4244
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4246
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4247
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4249
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4250
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4252
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4254
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:4262
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.normalizableTableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4265
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:4273
		{
			sqlVAL.union.val = &tree.CreateUser{Name: sqlDollar[3].union.expr(), Password: sqlDollar[4].union.expr()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:4277
		{
			sqlVAL.union.val = &tree.CreateUser{Name: sqlDollar[6].union.expr(), Password: sqlDollar[7].union.expr(), IfNotExists: true}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4280
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4284
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 749:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4288
		{
			sqlVAL.union.val = nil
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4298
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:4302
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4305
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4310
		{
		}
	case 754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4311
		{
		}
	case 755:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:4319
		{
			sqlVAL.union.val = &tree.CreateView{
				Name:        sqlDollar[5].union.normalizableTableNameFromUnresolvedName(),
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
			}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:4326
		{
			return unimplementedWithIssue(sqllex, 24897)
		}
	case 757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:4327
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4330
		{
		}
	case 759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4331
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:4337
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 761:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:4339
		{
			return unimplementedWithIssue(sqllex, 24873)
		}
	case 762:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:4341
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:4343
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4345
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:4347
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
		//line sql-gen.y:4363
		{
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[4].str),
				Table:       sqlDollar[6].union.normalizableTableNameFromUnresolvedName(),
				Unique:      sqlDollar[2].union.bool(),
				Columns:     sqlDollar[9].union.idxElems(),
				Storing:     sqlDollar[11].union.nameList(),
				Interleave:  sqlDollar[12].union.interleave(),
				PartitionBy: sqlDollar[13].union.partitionBy(),
				Inverted:    sqlDollar[7].union.bool(),
			}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
		//line sql-gen.y:4376
		{
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[7].str),
				Table:       sqlDollar[9].union.normalizableTableNameFromUnresolvedName(),
				Unique:      sqlDollar[2].union.bool(),
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Storing:     sqlDollar[14].union.nameList(),
				Interleave:  sqlDollar[15].union.interleave(),
				PartitionBy: sqlDollar[16].union.partitionBy(),
				Inverted:    sqlDollar[10].union.bool(),
			}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
		//line sql-gen.y:4390
		{
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[5].str),
				Table:       sqlDollar[7].union.normalizableTableNameFromUnresolvedName(),
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				Columns:     sqlDollar[9].union.idxElems(),
				Storing:     sqlDollar[11].union.nameList(),
				Interleave:  sqlDollar[12].union.interleave(),
				PartitionBy: sqlDollar[13].union.partitionBy(),
			}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
		//line sql-gen.y:4403
		{
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[8].str),
				Table:       sqlDollar[10].union.normalizableTableNameFromUnresolvedName(),
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Storing:     sqlDollar[14].union.nameList(),
				Interleave:  sqlDollar[15].union.interleave(),
				PartitionBy: sqlDollar[16].union.partitionBy(),
			}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:4416
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4419
		{
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4420
		{
			return unimplementedWithIssue(sqllex, 9683)
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4424
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4439
		{
			sqlVAL.union.val = false
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4445
		{
			sqlVAL.union.val = true
		}
	case 776:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4449
		{
			sqlVAL.union.val = false
		}
	case 777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4455
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4459
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4468
		{

			e := sqlDollar[1].union.expr()
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: sqlDollar[2].union.dir()}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4479
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 781:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4480
		{
			sqlVAL.str = ""
		}
	case 782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4484
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4488
		{
			sqlVAL.union.val = tree.Descending
		}
	case 784:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4492
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 785:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:4498
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:4505
		{
			sqlVAL.union.val = &tree.AlterUserSetPassword{Name: sqlDollar[3].union.expr(), Password: sqlDollar[6].union.expr()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:4509
		{
			sqlVAL.union.val = &tree.AlterUserSetPassword{Name: sqlDollar[5].union.expr(), Password: sqlDollar[8].union.expr(), IfExists: true}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:4515
		{
			sqlVAL.union.val = &tree.RenameTable{Name: sqlDollar[3].union.normalizableTableNameFromUnresolvedName(), NewName: sqlDollar[6].union.normalizableTableNameFromUnresolvedName(), IfExists: false, IsView: false}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:4519
		{
			sqlVAL.union.val = &tree.RenameTable{Name: sqlDollar[5].union.normalizableTableNameFromUnresolvedName(), NewName: sqlDollar[8].union.normalizableTableNameFromUnresolvedName(), IfExists: true, IsView: false}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:4523
		{
			sqlVAL.union.val = &tree.RenameColumn{Table: sqlDollar[3].union.normalizableTableNameFromUnresolvedName(), Name: tree.Name(sqlDollar[6].str), NewName: tree.Name(sqlDollar[8].str), IfExists: false}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql-gen.y:4527
		{
			sqlVAL.union.val = &tree.RenameColumn{Table: sqlDollar[5].union.normalizableTableNameFromUnresolvedName(), Name: tree.Name(sqlDollar[8].str), NewName: tree.Name(sqlDollar[10].str), IfExists: true}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:4531
		{
			return unimplemented(sqllex, "alter table rename constraint")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql-gen.y:4533
		{
			return unimplemented(sqllex, "alter table rename constraint")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:4537
		{
			sqlVAL.union.val = &tree.RenameTable{Name: sqlDollar[3].union.normalizableTableNameFromUnresolvedName(), NewName: sqlDollar[6].union.normalizableTableNameFromUnresolvedName(), IfExists: false, IsView: true}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:4541
		{
			sqlVAL.union.val = &tree.RenameTable{Name: sqlDollar[5].union.normalizableTableNameFromUnresolvedName(), NewName: sqlDollar[8].union.normalizableTableNameFromUnresolvedName(), IfExists: true, IsView: true}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:4547
		{
			sqlVAL.union.val = &tree.RenameTable{Name: sqlDollar[3].union.normalizableTableNameFromUnresolvedName(), NewName: sqlDollar[6].union.normalizableTableNameFromUnresolvedName(), IfExists: false, IsSequence: true}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.RenameTable{Name: sqlDollar[5].union.normalizableTableNameFromUnresolvedName(), NewName: sqlDollar[8].union.normalizableTableNameFromUnresolvedName(), IfExists: true, IsSequence: true}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:4557
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableWithIdx(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:4561
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableWithIdx(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4566
		{
		}
	case 801:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4567
		{
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4570
		{
		}
	case 803:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4571
		{
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: sqlDollar[2].str}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4582
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4592
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4601
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4604
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4612
		{
			sqlVAL.union.val = &tree.Savepoint{Name: sqlDollar[2].str}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4615
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4619
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4620
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4621
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4637
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4640
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4642
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4645
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4655
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4658
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4660
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4663
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4667
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4672
		{
		}
	case 828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4673
		{
		}
	case 829:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4674
		{
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4682
		{
			if sqlDollar[2].str != "" {
				sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: sqlDollar[2].str}
			} else {
				sqlVAL.union.val = &tree.RollbackTransaction{}
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4689
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4692
		{
		}
	case 833:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4693
		{
		}
	case 834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4697
		{
			sqlVAL.str = ""
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4701
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4705
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 837:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4709
		{
			sqlVAL.str = ""
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4715
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4719
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4725
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4729
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4735
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4739
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = a
		}
	case 844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4752
		{
		}
	case 845:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4754
		{
		}
	case 846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4758
		{
			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4762
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4766
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4772
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4778
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4784
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4788
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 853:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:4798
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
		//line sql-gen.y:4808
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4818
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4822
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4826
		{
			sqlVAL.str = ""
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4832
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 859:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4836
		{
			sqlVAL.str = ""
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4842
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4846
		{
			sqlVAL.str = ""
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4852
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4856
		{
			sqlVAL.str = ""
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4861
		{
		}
	case 865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4862
		{
		}
	case 866:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:4874
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 867:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:4881
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4888
		{
			return helpWith(sqllex, "INSERT")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:4899
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4906
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4910
		{
			sqlVAL.union.val = sqlDollar[1].union.newNormalizableTableNameFromUnresolvedName()
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4918
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: sqlDollar[1].union.newNormalizableTableNameFromUnresolvedName(), As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4924
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:4928
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4932
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:4938
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4942
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4962
		{
			return unimplementedWithIssue(sqllex, 8318)
		}
	case 880:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:4966
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:4970
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:4976
		{

			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:4980
		{
			return unimplemented(sqllex, "on conflict on constraint")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4982
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4988
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:4993
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 887:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:4997
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 888:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql-gen.y:5014
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5025
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5029
		{
			return unimplementedWithIssue(sqllex, 7841)
		}
	case 891:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5030
		{
		}
	case 892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5034
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5038
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5051
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5054
		{
			return unimplementedWithIssue(sqllex, 8318)
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:5058
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5101
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5126
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5130
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:5134
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5138
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:5142
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:5146
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5151
		{
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5152
		{
			return unimplementedWithIssue(sqllex, 6583)
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5157
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5192
		{
			return helpWith(sqllex, "SELECT")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5193
		{
			return helpWith(sqllex, "VALUES")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5194
		{
			return helpWith(sqllex, "TABLE")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:5216
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:5229
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:5243
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5255
		{
			return helpWith(sqllex, "SELECT")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:5259
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:5268
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:5277
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5292
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        &tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5299
		{
			return helpWith(sqllex, "TABLE")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5311
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5315
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5319
		{
			return unimplementedWithIssue(sqllex, 21085)
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5323
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5327
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:5333
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5341
		{
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5342
		{
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5346
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 939:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5350
		{
			sqlVAL.union.val = nil
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5355
		{
		}
	case 941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5356
		{
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5360
		{
			sqlVAL.union.val = true
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5364
		{
			sqlVAL.union.val = false
		}
	case 944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5368
		{
			sqlVAL.union.val = false
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5374
		{
			sqlVAL.union.val = true
		}
	case 946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:5380
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5385
		{
		}
	case 948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5386
		{
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5389
		{
			return unimplementedWithIssue(sqllex, 23620)
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5390
		{
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5394
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5398
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5404
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5410
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5414
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5420
		{
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByColumn, Expr: sqlDollar[1].union.expr(), Direction: sqlDollar[2].union.dir()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:5424
		{
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: sqlDollar[3].union.normalizableTableNameFromUnresolvedName()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:5428
		{
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[5].union.dir(), Table: sqlDollar[2].union.normalizableTableNameFromUnresolvedName(), Index: tree.UnrestrictedName(sqlDollar[4].str)}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5437
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5446
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5457
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5461
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:5470
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5476
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5483
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5490
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5499
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5503
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5507
		{
			sqlVAL.union.val = &tree.NumVal{Value: constant.MakeInt64(1)}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5513
		{
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5514
		{
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5517
		{
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5518
		{
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5535
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5539
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5545
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5549
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:5568
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5571
		{
			return helpWith(sqllex, "VALUES")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:5573
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5585
		{
			sqlVAL.union.val = &tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5588
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5590
		{
			sqlVAL.union.val = &tree.From{}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5596
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5600
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5606
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:5610
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5616
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5622
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5627
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = a
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5639
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:5643
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:5647
		{
			sqlVAL.union.val = sqlDollar[3].union.indexFlags()
		}
	case 998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5651
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 999:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:5678
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr: &tree.TableRef{
					TableID: sqlDollar[2].union.int64(),
					Columns: sqlDollar[3].union.tableRefCols(),
					As:      sqlDollar[4].union.aliasClause(),
				},
				IndexFlags: sqlDollar[6].union.indexFlags(),
				Ordinality: sqlDollar[7].union.bool(),
				As:         sqlDollar[8].union.aliasClause(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:5692
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.newNormalizableTableNameFromUnresolvedName(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5701
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:5708
		{
			return unimplementedWithIssueDetail(sqllex, 24560, "select")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5710
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:5714
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5718
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: f, Ordinality: sqlDollar[2].union.bool(), As: sqlDollar[3].union.aliasClause()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:5722
		{
			return unimplementedWithIssueDetail(sqllex, 24560, "srf")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:5738
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5744
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:5748
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5754
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5756
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5760
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5766
		{
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5768
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5771
		{
			sqlVAL.union.val = nil
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5772
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5773
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5777
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5781
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5787
		{
			sqlVAL.union.val = true
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5791
		{
			sqlVAL.union.val = false
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5811
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:5815
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Join: tree.AstCrossJoin, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:5819
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Join: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: sqlDollar[5].union.joinCond()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:5823
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Join: tree.AstJoin, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:5827
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Join: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:5831
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Join: tree.AstJoin, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5837
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5841
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5848
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:5854
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5861
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5867
		{
			sqlVAL.str = tree.AstFullJoin
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5871
		{
			sqlVAL.str = tree.AstLeftJoin
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5875
		{
			sqlVAL.str = tree.AstRightJoin
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5879
		{
			sqlVAL.str = tree.AstInnerJoin
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5885
		{
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5886
		{
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:5897
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5901
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5906
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedName()
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5907
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedName()
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5908
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedName()
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:5909
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedName()
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5913
		{
			sqlVAL.union.val = tree.NormalizableTableNames{sqlDollar[1].union.normalizableTableNameFromUnresolvedName()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5917
		{
			sqlVAL.union.val = append(sqlDollar[1].union.normalizableTableNames(), sqlDollar[3].union.normalizableTableNameFromUnresolvedName())
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:5930
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5934
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:5940
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5948
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.newNormalizableTableNameFromUnresolvedName(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5957
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:5961
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5973
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = coltypes.ArrayOf(sqlDollar[1].union.colType(), bounds)
				if err != nil {
					sqllex.Error(err.Error())
					return 1
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.colType()
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:5987
		{

			var err error
			sqlVAL.union.val, err = coltypes.ArrayOf(sqlDollar[1].union.colType(), []int32{-1})
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:5996
		{
			var err error
			sqlVAL.union.val, err = coltypes.ArrayOf(sqlDollar[1].union.colType(), []int32{-1})
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6005
		{
			sqlVAL.union.val = sqlDollar[1].union.castTargetType()
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6011
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6018
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6020
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:6029
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6040
		{
			return unimplemented(sqllex, "interval with unit qualifier")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:6041
		{
			return unimplemented(sqllex, "interval with precision")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6058
		{
			sqlVAL.union.val = coltypes.JSON
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6062
		{
			sqlVAL.union.val = coltypes.Bytes
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6066
		{
			sqlVAL.union.val = coltypes.Bytes
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6070
		{
			sqlVAL.union.val = coltypes.Bytes
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6074
		{
			sqlVAL.union.val = coltypes.String
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6078
		{
			sqlVAL.union.val = coltypes.Name
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6082
		{
			sqlVAL.union.val = coltypes.Serial
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6086
		{
			sqlVAL.union.val = coltypes.Serial2
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6090
		{
			sqlVAL.union.val = coltypes.Serial2
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6094
		{
			sqlVAL.union.val = coltypes.Serial4
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6098
		{
			sqlVAL.union.val = coltypes.Serial8
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6102
		{
			sqlVAL.union.val = coltypes.Serial8
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6106
		{
			sqlVAL.union.val = coltypes.UUID
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6110
		{
			sqlVAL.union.val = coltypes.INet
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6114
		{
			sqlVAL.union.val = coltypes.Oid
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6118
		{
			sqlVAL.union.val = coltypes.OidVector
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6122
		{
			sqlVAL.union.val = coltypes.Int2vector
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6126
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = coltypes.QChar
			} else {
				var ok bool
				var unimp int
				sqlVAL.union.val, ok, unimp = coltypes.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						sqllex.Error("type does not exist")
						return 1
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6157
		{
			sqlVAL.union.val = &coltypes.TDecimal{Prec: int(sqlDollar[2].union.int64())}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:6161
		{
			sqlVAL.union.val = &coltypes.TDecimal{Prec: int(sqlDollar[2].union.int64()), Scale: int(sqlDollar[4].union.int64())}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:6165
		{
			sqlVAL.union.val = nil
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6172
		{
			sqlVAL.union.val = coltypes.Int
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6176
		{
			sqlVAL.union.val = coltypes.Int
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6180
		{
			sqlVAL.union.val = coltypes.Int2
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6184
		{
			sqlVAL.union.val = coltypes.Int2
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6188
		{
			sqlVAL.union.val = coltypes.Int4
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6192
		{
			sqlVAL.union.val = coltypes.Int8
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6196
		{
			sqlVAL.union.val = coltypes.Int8
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6200
		{
			sqlVAL.union.val = coltypes.Int8
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6204
		{
			sqlVAL.union.val = coltypes.Float4
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6208
		{
			sqlVAL.union.val = coltypes.Float4
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6212
		{
			sqlVAL.union.val = coltypes.Float8
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6216
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6220
		{
			sqlVAL.union.val = coltypes.Float8
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6224
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
			if sqlVAL.union.val == nil {
				sqlVAL.union.val = coltypes.Decimal
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6231
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
			if sqlVAL.union.val == nil {
				sqlVAL.union.val = coltypes.Decimal
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6238
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
			if sqlVAL.union.val == nil {
				sqlVAL.union.val = coltypes.Decimal
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6245
		{
			sqlVAL.union.val = coltypes.Bool
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6249
		{
			sqlVAL.union.val = coltypes.Bool
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6256
		{
			sqlVAL.union.val = coltypes.RegProc
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6260
		{
			sqlVAL.union.val = coltypes.RegProcedure
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6264
		{
			sqlVAL.union.val = coltypes.RegClass
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6268
		{
			sqlVAL.union.val = coltypes.RegType
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6272
		{
			sqlVAL.union.val = coltypes.RegNamespace
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6278
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			typ, err := coltypes.NewFloat(prec)
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = typ
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:6293
		{
			sqlVAL.union.val = coltypes.Float8
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:6299
		{
			return unimplementedWithIssue(sqllex, 20991)
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6305
		{
			return unimplementedWithIssue(sqllex, 20991)
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:6311
		{
			colTyp := *(sqlDollar[1].union.colType().(*coltypes.TString))
			n := sqlDollar[3].union.int64()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", &colTyp))
				return 1
			}
			colTyp.N = uint(n)
			sqlVAL.union.val = &colTyp
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6324
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6330
		{
			sqlVAL.union.val = coltypes.Char
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6334
		{
			sqlVAL.union.val = coltypes.VarChar
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6338
		{
			sqlVAL.union.val = coltypes.VarChar
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6342
		{
			sqlVAL.union.val = coltypes.String
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6351
		{
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:6352
		{
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6357
		{
			sqlVAL.union.val = coltypes.Date
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6361
		{
			sqlVAL.union.val = coltypes.Time
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:6365
		{
			sqlVAL.union.val = coltypes.Time
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6369
		{
			return unimplementedWithIssueDetail(sqllex, 26097, "type")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:6373
		{
			return unimplementedWithIssueDetail(sqllex, 26097, "type")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6377
		{
			sqlVAL.union.val = coltypes.Timestamp
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:6381
		{
			sqlVAL.union.val = coltypes.Timestamp
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6385
		{
			sqlVAL.union.val = coltypes.TimestampWithTZ
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:6389
		{
			sqlVAL.union.val = coltypes.TimestampWithTZ
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6394
		{
			sqlVAL.union.val = coltypes.Interval
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6400
		{
			sqlVAL.union.val = tree.Year
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6404
		{
			sqlVAL.union.val = tree.Month
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6408
		{
			sqlVAL.union.val = tree.Day
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6412
		{
			sqlVAL.union.val = tree.Hour
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6416
		{
			sqlVAL.union.val = tree.Minute
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6420
		{
			sqlVAL.union.val = sqlDollar[1].union.durationField()
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6426
		{
			sqlVAL.union.val = tree.Month
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6430
		{
			sqlVAL.union.val = tree.Hour
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6434
		{
			sqlVAL.union.val = tree.Minute
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6438
		{
			sqlVAL.union.val = sqlDollar[3].union.durationField()
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6442
		{
			sqlVAL.union.val = tree.Minute
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6446
		{
			sqlVAL.union.val = sqlDollar[3].union.durationField()
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6450
		{
			sqlVAL.union.val = sqlDollar[3].union.durationField()
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:6457
		{
			sqlVAL.union.val = nil
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6463
		{
			sqlVAL.union.val = tree.Second
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:6466
		{
			return unimplemented(sqllex, "interval second with precision")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6490
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.castTargetType(), SyntaxMode: tree.CastShort}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6494
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6498
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:6501
		{
			return unimplemented(sqllex, "at tz")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6510
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6515
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6519
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6523
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6527
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6531
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6535
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6539
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6543
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6547
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6551
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6555
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6559
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6563
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6567
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6571
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6575
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6579
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6583
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6587
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6591
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6595
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6599
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6603
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6607
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6611
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6615
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6619
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6627
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6631
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_contained_by"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6635
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6639
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6643
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6647
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6651
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6655
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6659
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6663
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6667
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:6671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:6675
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:6679
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6683
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:6687
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:6691
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:6695
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:6699
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:6703
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:6707
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:6711
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6715
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6719
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6723
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6727
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6731
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:6735
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6739
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6743
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:6747
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6751
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6754
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6756
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:6760
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6764
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:6768
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6772
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:6776
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:6780
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:6784
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:6788
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:6792
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:6796
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:6800
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:6804
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:6808
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6812
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:6816
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:6820
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6837
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6841
		{
			sqlVAL.union.val = tree.MaxVal{}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:6845
		{
			sqlVAL.union.val = tree.MinVal{}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6850
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6862
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.castTargetType(), SyntaxMode: tree.CastShort}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6866
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6870
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6874
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6878
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6882
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6886
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6890
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6894
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6898
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6902
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6906
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6910
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6914
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6918
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6922
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6926
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6930
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6934
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6938
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6942
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6946
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6950
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:6954
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:6958
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:6962
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:6966
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:6970
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6984
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:6992
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7028
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7032
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7036
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7040
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:7043
		{
			return unimplemented(sqllex, "func const")
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7045
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7049
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:7052
		{
			return unimplemented(sqllex, "expr_const const_interval")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7054
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7058
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7062
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7066
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7070
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7079
		{
			sqlVAL.union.val = tree.NewPlaceholder(sqlDollar[1].str)
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:7084
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:7088
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7092
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7097
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7101
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7105
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7109
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7113
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:7116
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7120
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:7124
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:7127
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:7128
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:7130
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:7134
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:7138
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7141
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:7152
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7159
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7168
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7169
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:7173
		{
			return unimplemented(sqllex, "func_expr_common_subexpr collation for")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7175
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7179
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7185
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7189
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7193
		{
			return unimplementedWithIssueDetail(sqllex, 26097, "current_time")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7197
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7203
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7207
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7211
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:7215
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.castTargetType(), SyntaxMode: tree.CastExplicit}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:7219
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:7223
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql-gen.y:7227
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:7231
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:7235
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:7239
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:7243
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:7247
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:7251
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7258
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7261
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7263
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7266
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7268
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7271
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7273
		{
			return unimplementedWithIssueDetail(sqllex, 26097, "current_time")
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7276
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7278
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7281
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:7283
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7286
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:7288
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7291
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:7293
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7296
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:7298
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:7302
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7305
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:7306
		{
			return unimplemented(sqllex, "treat")
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:7308
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:7312
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:7316
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:7320
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:7324
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7327
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:7329
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7332
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:7337
		{
			return unimplemented(sqllex, "within group")
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:7338
		{
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:7342
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:7346
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7353
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:7357
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7363
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7373
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7381
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7385
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:7389
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql-gen.y:7396
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:7416
		{
			sqlVAL.str = ""
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7422
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:7426
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7437
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:   tree.RANGE,
				Bounds: sqlDollar[2].union.windowFrameBounds(),
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7444
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:   tree.ROWS,
				Bounds: sqlDollar[2].union.windowFrameBounds(),
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7451
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:   tree.GROUPS,
				Bounds: sqlDollar[2].union.windowFrameBounds(),
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:7458
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7464
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:7477
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7505
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7509
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7513
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7517
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7524
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:7540
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7544
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:7551
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7563
		{
			sqlVAL.union.val = tree.Any
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7567
		{
			sqlVAL.union.val = tree.Some
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7571
		{
			sqlVAL.union.val = tree.All
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7576
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7577
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7578
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7579
		{
			sqlVAL.union.val = tree.Div
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7580
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7581
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7582
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7583
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7584
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7585
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7586
		{
			sqlVAL.union.val = tree.LT
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7587
		{
			sqlVAL.union.val = tree.GT
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7588
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7589
		{
			sqlVAL.union.val = tree.LE
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7590
		{
			sqlVAL.union.val = tree.GE
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7591
		{
			sqlVAL.union.val = tree.NE
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7595
		{
			sqlVAL.union.val = tree.Like
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7596
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7597
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7598
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7621
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7625
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7631
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7635
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7639
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7650
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7654
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7660
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7664
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:7671
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7677
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7681
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7687
		{
			sqlVAL.union.val = []coltypes.T{sqlDollar[1].union.colType()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7691
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colTypes(), sqlDollar[3].union.colType())
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7697
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7701
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7707
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7711
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7717
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7721
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:7743
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7747
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7751
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7757
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7764
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:7768
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7785
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7789
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7793
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7797
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7801
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7807
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7813
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7819
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7823
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7827
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7833
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:7845
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7852
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7856
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql-gen.y:7862
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7868
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:7872
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:7879
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7885
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:7889
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:7896
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7902
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7906
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7911
		{
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:7912
		{
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7916
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7920
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7926
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:7935
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7939
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7943
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7951
		{
			sqlVAL.union.val = tree.TableNameWithIndexList{sqlDollar[1].union.newTableWithIdx()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7955
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableWithIdxList(), sqlDollar[3].union.newTableWithIdx())
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7961
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7965
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:7971
		{
			sqlVAL.union.val = tree.TableNameWithIndex{
				Table: sqlDollar[1].union.normalizableTableNameFromUnresolvedName(),
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:7978
		{

			sqlVAL.union.val = tree.TableNameWithIndex{
				Table:       sqlDollar[1].union.normalizableTableNameFromUnresolvedName(),
				SearchTable: true,
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:8006
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:8010
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:8014
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:8020
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:8024
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:8032
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql-gen.y:8036
		{
			n := sqlDollar[2].union.numVal()
			n.Negative = true
			sqlVAL.union.val = n
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:8047
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = val
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:8058
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = val
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:8068
		{

			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithField(sqlDollar[2].str, sqlDollar[3].union.durationField())
			}
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = d
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:8166
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:8173
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:8177
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:8181
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql-gen.y:8195
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:8199
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:8203
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:8216
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql-gen.y:8234
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:8244
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql-gen.y:8248
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:8262
		{
			sqlVAL.str = ""
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql-gen.y:8268
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql-gen.y:8272
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
